/*! For license information please see app.min.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={815:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n;// CONCATENATED MODULE: ./app/src/js/app/appStore.js\n/* harmony default export */ const appStore = ({\n  main: null,\n  rootUrl: null,\n  isDesktop: null,\n  firstNavigation: null,\n  currentSection: null,\n  client: {\n    browser: '',\n    device: '',\n    lang: 'es',\n    os: '',\n    orientation: null,\n    sizes: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    mousePosition: {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n    }\n  }\n});\n;// CONCATENATED MODULE: ./app/src/js/utils/string.js\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\nvar string = {\n  //converts a string number '#FFFFFF' to hex 0xffffff - it gets used on pixi\n  toHex: function toHex(str) {\n    return parseInt(str.substring(1), 16);\n  },\n  //true or false if text is on the string\n  contains: function contains(str, text) {\n    return str.indexOf(text) > -1;\n  }\n};\n;// CONCATENATED MODULE: ./app/src/js/utils/is.js\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\n\nvar is = {\n  array: function array(a) {\n    return Array.isArray(a);\n  },\n  object: function object(a) {\n    return string.contains(Object.prototype.toString.call(a), 'Object');\n  },\n  path: function path(a) {\n    return is.obj(a) && a.hasOwnProperty('totalLength');\n  },\n  //eslint-disable-line\n  svg: function svg(a) {\n    return a instanceof SVGElement;\n  },\n  node: function node(a) {\n    return a.nodeType || is.svg(a);\n  },\n  nodeList: function nodeList(a) {\n    return a instanceof NodeList || a instanceof HTMLCollection;\n  },\n  string: function string(a) {\n    return typeof a === 'string';\n  },\n  number: function number(a) {\n    return !isNaN(parseFloat(a)) && isFinite(a);\n  },\n  \"function\": function _function(a) {\n    return typeof a === 'function';\n  },\n  undefined: function undefined(a) {\n    return typeof a === 'undefined';\n  },\n  hex: function hex(a) {\n    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a);\n  },\n  rgb: function rgb(a) {\n    return /^rgb/.test(a);\n  },\n  hsl: function hsl(a) {\n    return /^hsl/.test(a);\n  },\n  color: function color(a) {\n    return is.hex(a) || is.rgb(a) || is.hsl(a);\n  }\n};\n;// CONCATENATED MODULE: ./app/src/js/classes/domEvents.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\n\n\nvar domEvents_default = /*#__PURE__*/function () {\n  function _default() {\n    _classCallCheck(this, _default);\n\n    this._eventCache = [];\n  }\n\n  _createClass(_default, [{\n    key: \"_removeEvent\",\n    value: function _removeEvent(index) {\n      //remove event listener\n      this._eventCache[index].node.removeEventListener(this._eventCache[index].action, this._eventCache[index].cb); //remove element from eventcache\n\n\n      this._eventCache.splice(index, 1);\n    }\n  }, {\n    key: \"add\",\n    value: function add(node, eventName, _func) {\n      var _this = this;\n\n      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var arg = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var rLink = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      //nodelist or single node?\n      var _nodes = is.nodeList(node) || is.array(node) ? node : [node]; //loop though the nodes\n\n\n      var _loop = function _loop(i) {\n        //create callback passing the event, argument and source node\n        var _cb = context !== false ? function (e) {\n          _func.call(context, e, arg, _nodes[i]);\n        } : function (e) {\n          _func(e, arg, _nodes[i]);\n        }; //add the event to the node event cache\n\n\n        _this._eventCache.push({\n          node: _nodes[i],\n          action: eventName,\n          func: _func,\n          cb: _cb,\n          routerLink: rLink\n        }); //add the event to the node\n\n\n        _nodes[i].addEventListener(eventName, _cb);\n      };\n\n      for (var i = 0; i < _nodes.length; i++) {\n        _loop(i);\n      }\n    } //this function removes non router events meeting the criteria\n\n  }, {\n    key: \"remove\",\n    value: function remove(node, eventName, func) {\n      //nodelist or single node?\n      var _nodes = is.nodeList(node) || is.array(node) ? node : [node]; //loop though the nodes\n\n\n      for (var k = 0; k < _nodes.length; k++) {\n        var i = 0;\n\n        while (i < this._eventCache.length) {\n          //check if it is the same node and is not a router link\n          if (this._eventCache[i].node === _nodes[k] && !this._eventCache[i].routerLink) {\n            if (eventName && func) {\n              if (this._eventCache[i].action === eventName && this._eventCache[i].func === func) this._removeEvent(i);else i++;\n            } else if (eventName) {\n              if (this._eventCache[i].action === eventName) this._removeEvent(i);else i++;\n            } else if (func) {\n              if (this._eventCache[i].func === func) this._removeEvent(i);else i++;\n            } else {\n              this._removeEvent(i);\n            }\n          } else {\n            i++;\n          }\n        }\n      }\n    } //this function removes all non router links\n\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      var i = 0;\n\n      while (i < this._eventCache.length) {\n        if (!this._eventCache[i].routerLink) this._removeEvent(i);else i++;\n      }\n    } //this function removes everything, it must only be used by component classes after elements are removed\n    //from the dom so there are not problems with unbound router links clicked by the user refreshing the page\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      while (this._eventCache.length > 0) {\n        this._removeEvent(0);\n      }\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/gsap/index.js + 2 modules\nvar gsap = __webpack_require__(358);\n;// CONCATENATED MODULE: ./app/src/js/app/appUi.js\nfunction appUi_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction appUi_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction appUi_createClass(Constructor, protoProps, staticProps) { if (protoProps) appUi_defineProperties(Constructor.prototype, protoProps); if (staticProps) appUi_defineProperties(Constructor, staticProps); return Constructor; }\n\n// app\n\n // classes\n\n // gsap\n\n\nvar _singleton = null;\n\nvar appUi = /*#__PURE__*/function () {\n  function appUi(data) {\n    appUi_classCallCheck(this, appUi);\n\n    if (!_singleton) {\n      this.data = data;\n      _singleton = this;\n    } else {\n      return _singleton;\n    } // store\n\n\n    this.appStore = appStore; // app references\n\n    this.appCore = new app_appCore(); // Events\n\n    this.domEvents = new domEvents_default(); // Cursor vars\n\n    this.cursor = {\n      position: {\n        x: 0,\n        y: 0\n      },\n      livePosition: {\n        x: 0,\n        y: 0\n      },\n      lock: false\n    };\n    this.cursorDrag = {\n      isOpen: false,\n      isPlayed: false,\n      isReduced: false,\n      openTimeline: null,\n      closeTimeline: null\n    }; // Info vars\n\n    this.info = {\n      isOpen: false\n    };\n    this.header = null;\n    this.guides = null;\n    this.background = null;\n    this.loaderDuration = 1;\n  }\n\n  appUi_createClass(appUi, [{\n    key: \"init\",\n    value: function init() {\n      this.header = {\n        isOpen: false,\n        isAnimating: false,\n        isLocked: false\n      };\n      this.initLoader();\n      this.initMenu();\n      this.initSubmenu();\n    }\n  }, {\n    key: \"selectors\",\n    value: function selectors() {\n      // Deafult\n      this.$app = document.getElementById('app');\n      this.$logo = document.getElementById('logo'); // Cursor\n\n      this.$cursor = document.getElementById('cursor');\n      this.$cursorDot = this.$cursor.querySelector('.cursor__dot');\n      this.$cursorMinus = this.$cursor.querySelector('.cursor__minus');\n      this.$cursorPlus = this.$cursor.querySelector('.cursor__plus');\n      this.$cursorDrag = this.$cursor.querySelector('.cursor__drag'); // Mask\n\n      this.$mask = document.getElementById('mask'); // Loader\n\n      this.$loader = document.getElementById('loader');\n\n      if (this.$loader) {\n        this.$loaderMask = this.$loader.querySelector('.mask');\n        this.$loaderInner = this.$loader.querySelector('.inner');\n        this.$loaderLogo = this.$loader.querySelector('.inner .letterlogo');\n        this.$loaderLogoLetters = this.$loaderLogo.querySelectorAll('.inner .letterlogo .letter');\n        this.$loaderProgress = this.$loader.querySelector('.inner .progress');\n      } // Header\n\n\n      this.$header = document.getElementById('header');\n\n      if (this.$header) {\n        this.$headerLogo = this.$header.querySelector('.logo');\n        this.$headerMenu = this.$header.querySelector('nav.menu');\n        this.$headerMenuItems = this.$headerMenu.querySelectorAll('li');\n        this.$headerSubmenu = this.$header.querySelector('nav.submenu');\n        this.$headerSubmenuItems = this.$headerSubmenu.querySelectorAll('li');\n        this.$headerTrigger = this.$header.querySelector('.trigger');\n        this.$headerTriggerText = this.$headerTrigger.querySelector('.text');\n        this.$headerTriggerIcon = this.$headerTrigger.querySelector('.icon');\n      } // Info\n\n\n      this.$info = document.getElementById('info');\n\n      if (this.$info) {\n        this.$infoCloser = this.$info.querySelector('.closer');\n        this.$infoMask = this.$info.querySelector('.mask');\n        this.$infoContent = this.$info.querySelector('.content');\n      } // Guides\n\n\n      this.$guides = document.getElementById('guides');\n\n      if (this.$guides) {\n        this.$guidesSwitcher = this.$guides.querySelector('.guides__switcher');\n        this.$guidesSwitcher2 = this.$guides.querySelector('.guides__switcher2');\n        this.$guidesHr = this.$guides.querySelector('.guides__horizontal');\n        this.$guidesVr = this.$guides.querySelector('.guides__vertical');\n        this.$guidesHr2 = this.$guides.querySelector('.guides__horizontal2');\n        this.$guidesVr2 = this.$guides.querySelector('.guides__vertical2');\n      } // Cookies\n\n\n      this.$cookies = document.getElementById('cookie-law-info-bar');\n\n      if (this.$cookies) {\n        this.$cookiesConfigureButton = document.querySelector('a.cli_settings_button');\n        this.$cookiesModal = document.querySelector('.cli-modal');\n        this.$cookiesCategory = this.$cookiesModal.querySelectorAll('a.cli-nav-link');\n      }\n    }\n  }, {\n    key: \"events\",\n    value: function events() {\n      var _this = this;\n\n      // Header\n      if (this.$header) this.domEvents.add(this.$headerTrigger, 'click', function () {\n        _this.triggerMenu();\n      }); // Info\n\n      if (this.$info) {\n        this.domEvents.add(this.$infoMask, 'click', function (e, a, el) {\n          _this.closeInfo();\n        });\n        this.domEvents.add(this.$infoCloser, 'click', function (e, a, el) {\n          _this.closeInfo();\n        });\n      } // Guides\n\n\n      if (this.$guides) {\n        this.domEvents.add(this.$guidesSwitcher, 'click', function () {\n          _this.guidesSwitcher();\n        });\n        this.domEvents.add(this.$guidesSwitcher2, 'click', function () {\n          _this.guidesSwitcher2();\n        });\n      }\n\n      if (this.$cursor && this.appStore.isDesktop) this.domEvents.add(document, 'mousemove', function (e) {\n        _this.moveCursor(e);\n      }); // this.domEvents.add(document, 'mousemove', (e, a, el) => { this.cursorOver(e, a, el); });\n\n      if (!this.appStore.isDesktop) {\n        this.previousScroll = 0;\n        this.menuOpened = true;\n        gsap/* default.to */.ZP.to(this.$header, {\n          y: '0%',\n          duration: 0.8,\n          ease: 'expo.out'\n        });\n        this.domEvents.add(window, 'scroll', function () {\n          if (_this.header.isOpen || _this.header.isLocked) return;\n          var scroll = document.documentElement.scrollTop;\n\n          if (scroll < _this.previousScroll || scroll <= 0) {\n            if (!_this.menuOpened) {\n              _this.menuOpened = true;\n              gsap/* default.to */.ZP.to(_this.$header, {\n                y: '0%',\n                duration: 0.8,\n                ease: 'expo.out'\n              });\n            }\n          } else {\n            if (_this.menuOpened) {\n              _this.menuOpened = false;\n              gsap/* default.to */.ZP.to(_this.$header, {\n                y: '-100%',\n                duration: 0.8,\n                ease: 'expo.out'\n              });\n            }\n          }\n\n          _this.previousScroll = scroll;\n        });\n      } // Cookies\n\n\n      if (this.$cookiesConfigureButton) {\n        // eslint-disable-next-line no-script-url\n        var disabled = 'javascript: void(0)';\n        this.$cookiesConfigureButton.setAttribute('href', disabled);\n      }\n\n      if (this.$cookiesModal) {\n        // eslint-disable-next-line no-script-url\n        var _disabled = 'javascript: void(0)';\n\n        for (var i = 0; i < this.$cookiesCategory.length; i++) {\n          this.$cookiesCategory[i].setAttribute('href', _disabled);\n        }\n      }\n    }\n  }, {\n    key: \"initLoader\",\n    value: function initLoader() {\n      // Animate in next slide\n      gsap/* default.to */.ZP.to(this.$loaderLogo, {\n        opacity: 1,\n        duration: 0.4,\n        ease: 'powe2.out'\n      });\n      if (this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$loaderProgress, {\n        opacity: 1,\n        duration: 0.4,\n        ease: 'powe2.out'\n      });\n\n      for (var i = 0; i < this.$loaderLogoLetters.length; i++) {\n        if (this.appStore.isDesktop) gsap/* default.set */.ZP.set(this.$loaderLogoLetters[i], {\n          y: -(window.innerHeight / 2 + window.innerWidth * 0.05)\n        });else gsap/* default.set */.ZP.set(this.$loaderLogoLetters[i], {\n          opacity: 0.0001\n        });\n        gsap/* default.to */.ZP.to(this.$loaderLogoLetters[i], {\n          y: 0,\n          ease: 'expo.inOut',\n          opacity: 1,\n          duration: 1.2,\n          delay: 0 + i * 0.02\n        });\n      }\n    }\n  }, {\n    key: \"hideLoader\",\n    value: function hideLoader() {\n      var _this2 = this;\n\n      if (this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$loaderProgress, {\n        opacity: 0.0001,\n        duration: 0.6,\n        ease: 'powe2.out'\n      });\n\n      for (var i = 0; i < this.$loaderLogoLetters.length; i++) {\n        if (this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$loaderLogoLetters[i], {\n          y: window.innerHeight / 2 + window.innerWidth * 0.1,\n          ease: 'expo.inOut',\n          duration: 1.2,\n          delay: 0 + i * 0.05\n        });else gsap/* default.to */.ZP.to(this.$loaderLogoLetters[i], {\n          opacity: 0.0001,\n          ease: 'expo.inOut',\n          duration: 1.2,\n          delay: 0 + i * 0.02\n        });\n      }\n\n      gsap/* default.to */.ZP.to([this.$loaderMask, this.$loaderInner], {\n        y: '100%',\n        duration: 1.8,\n        ease: 'expo.inOut',\n        delay: this.appStore.isDesktop ? 0 : 0.8,\n        onComplete: function onComplete() {\n          gsap/* default.set */.ZP.set(_this2.$loader, {\n            display: 'none',\n            onComplete: function onComplete() {\n              _this2.$loader.remove();\n            }\n          });\n        }\n      });\n    } // hideLoader()\n    // {\n    //     // gsap.to(this.$loaderProgress, { opacity: 0.0001, duration: 0.6, ease: 'powe2.out' });\n    //     gsap.to(this.$loaderProgress, { opacity: 0.0001,\n    //         duration: 0.6,\n    //         ease: 'powe2.out',\n    //         onComplete: () =>\n    //         {\n    //             gsap.to(this.$loaderInner, {\n    //                 y: '-100%',\n    //                 duration: this.loaderDuration,\n    //                 ease: 'power4.out',\n    //                 onComplete: () =>\n    //                 {\n    //                     gsap.set(this.$loader, { display: 'none' });\n    //                 }\n    //             });\n    //         } });\n    // }\n\n  }, {\n    key: \"initMenu\",\n    value: function initMenu() {\n      gsap/* default.set */.ZP.set(this.$headerTriggerText.children[1], {\n        y: '-100%'\n      });\n\n      for (var i = 0; i < this.$headerMenuItems.length; i++) {\n        gsap/* default.set */.ZP.set(this.$headerMenuItems[i].children[0], {\n          y: '-100%'\n        });\n      }\n    }\n  }, {\n    key: \"triggerMenu\",\n    value: function triggerMenu() {\n      var _this3 = this;\n\n      if (this.header.isAnimating) return;\n      this.header.isAnimating = true;\n\n      if (!this.header.isOpen) {\n        // Set overlay\n        gsap/* default.to */.ZP.to(this.appStore.currentSection.$overlay, {\n          opacity: 0.1,\n          duration: 0.8,\n          ease: 'power2.out'\n        }); // Reposition menu on promotionsingle\n\n        if (this.appStore.current === 'promotionssingle' && this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$header, {\n          y: '0vw',\n          duration: 0.8,\n          ease: 'expo.inOut'\n        }); // Hide logo\n\n        if (this.appStore.current !== 'home' && this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$headerLogo, {\n          opacity: 0.0001,\n          pointerEvents: 'none',\n          duration: 0.2,\n          ease: 'power2.out'\n        });\n\n        if (this.appStore.isDesktop) {\n          gsap/* default.to */.ZP.to(this.$app, {\n            willChange: 'transform',\n            scale: 0.9,\n            y: '5vw',\n            duration: 0.8,\n            ease: 'expo.inOut'\n          });\n          this.$headerMenu.style.pointerEvents = 'all';\n        } else {\n          gsap/* default.to */.ZP.to(this.$app, {\n            willChange: 'transform',\n            y: '10vw',\n            duration: 0.8,\n            ease: 'expo.inOut'\n          });\n          this.$headerMenu.style.display = 'block';\n          gsap/* default.to */.ZP.to(this.$headerMenu, {\n            y: '0%',\n            duration: 0.8,\n            ease: 'expo.inOut'\n          });\n          document.documentElement.style.overflow = 'hidden';\n        } // Animate menu items\n\n\n        for (var i = 0; i < this.$headerMenuItems.length; i++) {\n          gsap/* default.to */.ZP.to(this.$headerMenuItems[i].children[0], {\n            y: '0%',\n            duration: this.appStore.isDesktop ? 0.8 : 0.3,\n            ease: 'expo.inOut',\n            delay: this.appStore.isDesktop ? 0.1 + i * 0.05 : 0.5 + i * 0.02\n          });\n        }\n\n        if (this.appStore.isDesktop) {\n          // gsap.to(this.$headerTrigger, { y: '2.5vw', duration: 0.8, ease: 'expo.inOut' });\n          gsap/* default.to */.ZP.to(this.$headerTriggerText.children[1], {\n            y: '0%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0.1\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerText.children[0], {\n            y: '100%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0.1\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[0], {\n            rotation: '45deg',\n            backgroundColor: '#ffffff',\n            y: '5px',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0.1\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[1], {\n            rotation: '-45deg',\n            backgroundColor: '#ffffff',\n            y: '-5px',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0.1\n          });\n        } else {\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[0], {\n            rotation: '45deg',\n            y: '5px',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0.1\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[1], {\n            rotation: '-45deg',\n            y: '-5px',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0.1\n          });\n        }\n\n        gsap/* default.delayedCall */.ZP.delayedCall(0.8, function () {\n          _this3.header.isAnimating = false;\n          _this3.header.isOpen = true;\n        });\n      } else {\n        // Unset overlay\n        gsap/* default.to */.ZP.to(this.appStore.currentSection.$overlay, {\n          opacity: 0.0001,\n          duration: 0.8,\n          ease: 'power2.out'\n        }); // Reposition menu on promotionsingle\n\n        if (this.appStore.current === 'promotionssingle' && this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$header, {\n          y: '-2.5vw',\n          duration: 0.8,\n          ease: 'expo.inOut'\n        }); // Hide logo\n\n        if (this.appStore.current !== 'home' && this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.$headerLogo, {\n          opacity: 1,\n          duration: 0.2,\n          pointerEvents: 'initial',\n          ease: 'power2.out',\n          delay: 0.6\n        });\n\n        if (this.appStore.isDesktop) {\n          gsap/* default.to */.ZP.to(this.$app, {\n            willChange: '',\n            scale: 1,\n            y: 0,\n            duration: 0.8,\n            ease: 'expo.inOut',\n            clearProps: 'all'\n          });\n          this.$headerMenu.style.pointerEvents = 'none';\n        } else {\n          gsap/* default.to */.ZP.to(this.$app, {\n            willChange: 'transform',\n            y: 0,\n            duration: 0.8,\n            ease: 'expo.inOut',\n            clearProps: 'all'\n          });\n          gsap/* default.to */.ZP.to(this.$headerMenu, {\n            y: '-100%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            onComplete: function onComplete() {\n              _this3.$headerMenu.style.display = 'block';\n            }\n          });\n          document.documentElement.style.overflow = 'initial';\n        } // Animate menu items\n\n\n        for (var _i = 0; _i < this.$headerMenuItems.length; _i++) {\n          gsap/* default.to */.ZP.to(this.$headerMenuItems[_i].children[0], {\n            y: '-100%',\n            duration: this.appStore.isDesktop ? 0.8 : 0.4,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n        }\n\n        if (this.appStore.isDesktop) {\n          gsap/* default.to */.ZP.to(this.$headerTriggerText.children[1], {\n            y: '-100%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerText.children[0], {\n            y: '0%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[0], {\n            rotation: '0deg',\n            backgroundColor: '#EC1C24',\n            y: '0',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[1], {\n            rotation: '0deg',\n            backgroundColor: '#EC1C24',\n            y: '0',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n        } else {\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[0], {\n            rotation: '0deg',\n            y: '0',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n          gsap/* default.to */.ZP.to(this.$headerTriggerIcon.children[1], {\n            rotation: '0deg',\n            y: '0',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0\n          });\n        }\n\n        gsap/* default.delayedCall */.ZP.delayedCall(0.8, function () {\n          _this3.header.isAnimating = false;\n          _this3.header.isOpen = false;\n        });\n      }\n    }\n  }, {\n    key: \"initSubmenu\",\n    value: function initSubmenu() {\n      var _this4 = this;\n\n      for (var i = 0; i < this.$headerSubmenuItems.length; i++) {\n        gsap/* default.set */.ZP.set(this.$headerSubmenuItems[i].children[0], {\n          y: '-100%'\n        });\n        this.domEvents.add(this.$headerSubmenuItems[i], 'mouseenter', function (e, a, el) {\n          _this4.enterSubmenu(e, a, el);\n        });\n        this.domEvents.add(this.$headerSubmenuItems[i], 'mouseleave', function (e, a, el) {\n          _this4.leaveSubmenu(e, a, el);\n        });\n      }\n    }\n  }, {\n    key: \"enterSubmenu\",\n    value: function enterSubmenu(e, a, el) {\n      gsap/* default.to */.ZP.to(el.children[0].children[0], {\n        x: '0px',\n        scaleX: 1,\n        duration: 0.4,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(el.children[0].children[1], {\n        x: '12px',\n        opacity: 0.4,\n        duration: 0.4,\n        ease: 'expo.out'\n      });\n    }\n  }, {\n    key: \"leaveSubmenu\",\n    value: function leaveSubmenu(e, a, el) {\n      gsap/* default.to */.ZP.to(el.children[0].children[0], {\n        x: '-4px',\n        scaleX: 0,\n        duration: 0.4,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(el.children[0].children[1], {\n        x: '0px',\n        opacity: 1,\n        duration: 0.4,\n        ease: 'expo.out'\n      });\n    }\n  }, {\n    key: \"triggerSubmenu\",\n    value: function triggerSubmenu(_show) {\n      if (_show) {\n        gsap/* default.to */.ZP.to([this.$headerLogo, this.$headerTrigger], {\n          opacity: 0.0001,\n          pointerEvents: 'none',\n          duration: 0.2,\n          ease: 'power2.out'\n        });\n\n        for (var i = 0; i < this.$headerSubmenuItems.length; i++) {\n          gsap/* default.set */.ZP.set(this.$headerSubmenuItems[i].children[0], {\n            y: '-100%'\n          });\n          gsap/* default.to */.ZP.to(this.$headerSubmenuItems[i].children[0], {\n            y: '0%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0 + i * 0.05\n          });\n        }\n\n        this.$headerSubmenu.style.pointerEvents = 'all';\n      } else {\n        gsap/* default.to */.ZP.to([this.$headerLogo, this.$headerTrigger], {\n          opacity: 1,\n          pointerEvents: 'initial',\n          duration: 0.2,\n          ease: 'power2.out',\n          delay: 0.8\n        });\n\n        for (var _i2 = 0; _i2 < this.$headerSubmenuItems.length; _i2++) {\n          gsap/* default.to */.ZP.to(this.$headerSubmenuItems[_i2].children[0], {\n            y: '-100%',\n            duration: 0.8,\n            ease: 'expo.inOut',\n            delay: 0 + (this.$headerSubmenuItems.length - _i2) * 0.05\n          });\n        }\n\n        this.$headerSubmenu.style.pointerEvents = 'none';\n      }\n    }\n  }, {\n    key: \"moveCursor\",\n    value: function moveCursor(e) {\n      if (this.cursor.lock) return; // Check velocity\n\n      this.cursor.livePosition.x = e.clientX;\n      this.cursor.livePosition.y = e.clientY;\n      var movementX = this.cursor.livePosition.x - this.cursor.position.x;\n      var movementY = this.cursor.livePosition.y - this.cursor.position.y;\n      var movement = Math.sqrt(movementX * movementX + movementY * movementY);\n      var velocity = movement / 10; // this._drag.velocity = lerp(this._drag.velocity, velocity, this._drag.ease * 2);\n\n      gsap/* default.to */.ZP.to(this.$cursorDot, {\n        x: this.cursor.livePosition.x,\n        y: this.cursor.livePosition.y,\n        duration: 1,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.$cursorMinus, {\n        x: this.cursor.livePosition.x,\n        y: this.cursor.livePosition.y,\n        duration: 1,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.$cursorPlus, {\n        x: this.cursor.livePosition.x,\n        y: this.cursor.livePosition.y,\n        duration: 1,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.$cursorDrag, {\n        x: this.cursor.livePosition.x,\n        y: this.cursor.livePosition.y,\n        duration: 1,\n        ease: 'expo.out'\n      });\n      this.cursor.position.x = this.cursor.livePosition.x;\n      this.cursor.position.y = this.cursor.livePosition.y;\n    }\n  }, {\n    key: \"openInfo\",\n    value: function openInfo(e) {\n      if (this.info.isOpen) return;\n      this.info.isOpen = true;\n      if (this.appStore.isDesktop) this.appStore.currentSection.superScroller._scroll.enable = false; // const textContent = this.$form.textContent;\n      // // const shortcode = '<?php echo do_shortcode(' + textContent + ')';\n      // const yourHTML = '<div class=\"mydiv\"><?php do_shortcode(\"' + textContent + '\");?></div>';\n      // // document.getElementsByClassName('services-right')[0].innerHTML = yourHTML;\n      // this.$infoContent.children[1].insertAdjacentHTML('afterbegin', yourHTML);\n\n      gsap/* default.set */.ZP.set(this.$info, {\n        display: 'block'\n      });\n      gsap/* default.set */.ZP.set(this.$infoCloser, {\n        display: 'block'\n      });\n      gsap/* default.to */.ZP.to(this.$infoMask, {\n        opacity: 1,\n        duration: 0.2,\n        ease: 'power2.out'\n      });\n      gsap/* default.to */.ZP.to(this.$infoContent, {\n        x: '0%',\n        duration: 1,\n        ease: 'expo.inOut'\n      });\n      gsap/* default.to */.ZP.to(this.$infoCloser, {\n        opacity: 1,\n        duration: 0.2,\n        ease: 'power2.out',\n        delay: 1\n      });\n      e.preventDefault();\n      return false;\n    }\n  }, {\n    key: \"closeInfo\",\n    value: function closeInfo() {\n      var _this5 = this;\n\n      gsap/* default.to */.ZP.to(this.$infoCloser, {\n        opacity: 0.0001,\n        duration: 0.2,\n        ease: 'power2.out'\n      });\n      gsap/* default.to */.ZP.to(this.$infoContent, {\n        x: '100%',\n        duration: 1,\n        ease: 'expo.inOut'\n      });\n      gsap/* default.to */.ZP.to(this.$infoMask, {\n        opacity: 0.0001,\n        duration: 0.2,\n        ease: 'power2.out',\n        delay: 1,\n        onComplete: function onComplete() {\n          gsap/* default.set */.ZP.set(_this5.$infoCloser, {\n            display: 'none'\n          });\n          gsap/* default.set */.ZP.set(_this5.$info, {\n            display: 'none'\n          });\n          _this5.info.isOpen = false;\n          if (_this5.appStore.isDesktop) _this5.appStore.currentSection.superScroller._scroll.enable = true;\n        }\n      });\n    }\n  }, {\n    key: \"enterDragCursor\",\n    value: function enterDragCursor() {\n      gsap/* default.killTweensOf */.ZP.killTweensOf([this.$cursorDrag, this.$cursorDrag.children[0], this.$cursorDot, this.$cursorPlus]);\n      this.$cursorMinus.style.display = 'block';\n      this.$cursorPlus.style.display = 'block';\n      this.$cursorDrag.style.display = 'block';\n      gsap/* default.to */.ZP.to(this.$cursorDot, {\n        scale: 1,\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.$cursorMinus, {\n        scale: 1,\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.$cursorPlus, {\n        scale: 1,\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      }); //gsap.to(this.$cursorPlus.children[0], { opacity: 0.0001, duration: 0.3, ease: 'expo.out', delay: 0.1 });\n\n      gsap/* default.to */.ZP.to(this.$cursorDrag, {\n        scale: 1,\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.$cursorDrag.children[0], {\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out',\n        delay: 0.1\n      });\n    }\n  }, {\n    key: \"leaveDragCursor\",\n    value: function leaveDragCursor() {\n      var _this6 = this;\n\n      gsap/* default.killTweensOf */.ZP.killTweensOf([this.$cursorDrag, this.$cursorDrag.children[0], this.$cursorDot, this.$cursorPlus]);\n      gsap/* default.to */.ZP.to(this.$cursorDot, {\n        scale: 0.35,\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to([this.$cursorDrag, this.$cursorPlus], {\n        scale: 0.35,\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to([this.$cursorDrag.children[0], this.$cursorPlus.children[0]], {\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out',\n        onComplete: function onComplete() {\n          _this6.$cursorDrag.style.display = 'none';\n          _this6.$cursorMinus.style.display = 'none';\n          _this6.$cursorPlus.style.display = 'none';\n        }\n      });\n    } // overCursor(e, a, el)\n    // {\n    //     if(e.target.closest('a') !== null || e.target.closest('div').classList.contains('trigger'))\n    //     {\n    //         if(!this.isCursorViewing)\n    //         {\n    //             this.isCursorViewing = true;\n    //             gsap.to(this.$cursor.children[0], { scale: 0, duration: 0.8, ease: 'expo.out' });\n    //         }\n    //     }\n    //     else if(e.target.closest('div').classList.contains('drag') || e.target.closest('div').classList.contains('dot'))\n    //     {\n    //         if(!this.isCursorViewing)\n    //         {\n    //             this.isCursorViewing = true;\n    //             gsap.to(this.$cursor.children[0], { scale: 0, duration: 0.8, ease: 'expo.out' });\n    //             gsap.to(this.$cursor.children[1], { scale: 0, duration: 0.8, ease: 'expo.out' });\n    //         }\n    //     }\n    //     else if(e.target.closest('div').classList.contains('slider__bullets__item'))\n    //     {\n    //         if(!this.isCursorViewing)\n    //         {\n    //             this.isCursorViewing = true;\n    //             gsap.to(this.$cursor.children[0], { scale: 0.7, opacity: 0.2, duration: 0.8, ease: 'expo.out' });\n    //             gsap.to(this.$cursor.children[1], { scale: 0, duration: 0.8, ease: 'expo.out' });\n    //         }\n    //     }\n    //     else\n    //     {\n    //         if(this.isCursorViewing)\n    //         {\n    //             this.isCursorViewing = false;\n    //             gsap.to(this.$cursor.children[0], { scale: 1, opacity: 0.5, duration: 0.8, ease: 'expo.out' });\n    //             gsap.to(this.$cursor.children[1], { scale: 1, duration: 0.8, ease: 'expo.out' });\n    //         }\n    //     }\n    // }\n\n  }, {\n    key: \"guidesSwitcher\",\n    value: function guidesSwitcher() {\n      if (this.$guidesHr.style.display === 'block') {\n        gsap/* default.set */.ZP.set(this.$guidesHr, {\n          display: 'none'\n        });\n        gsap/* default.set */.ZP.set(this.$guidesVr, {\n          display: 'none'\n        });\n      } else {\n        gsap/* default.set */.ZP.set(this.$guidesHr, {\n          display: 'block'\n        });\n        gsap/* default.set */.ZP.set(this.$guidesVr, {\n          display: 'block'\n        });\n      }\n    }\n  }, {\n    key: \"guidesSwitcher2\",\n    value: function guidesSwitcher2() {\n      if (this.$guidesHr2.style.display === 'block') {\n        gsap/* default.set */.ZP.set(this.$guidesHr2, {\n          display: 'none'\n        });\n        gsap/* default.set */.ZP.set(this.$guidesVr2, {\n          display: 'none'\n        });\n      } else {\n        gsap/* default.set */.ZP.set(this.$guidesHr2, {\n          display: 'block'\n        });\n        gsap/* default.set */.ZP.set(this.$guidesVr2, {\n          display: 'block'\n        });\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {// this.$notice = document.getElementById('notice');\n      // if(!this.appStore.isDesktop)\n      // {\n      //     if(width > height)\n      //     {\n      //         gsap.set(this.$notice, { display: 'block' });\n      //         this.$notice.addEventListener('touchmove', (e) => { e.preventDefault(); });\n      //     }\n      //     else\n      //     {\n      //         gsap.set(this.$notice, { display: 'none' });\n      //     }\n      // }\n    }\n  }, {\n    key: \"split\",\n    value: function split(x, n) {\n      if (x < n) {\n        document.write('-1 ');\n      } else if (x % n === 0) {\n        for (var i = 0; i < n; i++) {\n          document.write(x / n + ' ');\n        }\n      } else {\n        var zp = n - x % n;\n        var pp = Math.floor(x / n);\n\n        for (var _i3 = 0; _i3 < n; _i3++) {\n          if (_i3 >= zp) document.write(pp + 1 + ' ');else document.write(pp + ' ');\n        }\n      }\n    }\n  }, {\n    key: \"splitInParts\",\n    value: function splitInParts(num, parts) {\n      var sumParts = 0;\n      var totalParts = [];\n\n      for (var i = 0; i < parts - 1; i++) {\n        var pn = Math.random() * (num - sumParts);\n        sumParts += Math.min(pn, num * 0.5);\n        totalParts.push(sumParts);\n      }\n\n      sumParts += num - sumParts;\n      totalParts.push(sumParts);\n      return totalParts;\n    }\n  }]);\n\n  return appUi;\n}();\n\n/* harmony default export */ const app_appUi = (appUi);\n// EXTERNAL MODULE: ./node_modules/@dogstudio/highway/build/highway.module.js\nvar highway_module = __webpack_require__(219);\n// EXTERNAL MODULE: ./node_modules/gsap/ScrollTrigger.js\nvar ScrollTrigger = __webpack_require__(82);\n// EXTERNAL MODULE: ./node_modules/preload-it/dist/preload-it.js\nvar preload_it = __webpack_require__(130);\nvar preload_it_default = /*#__PURE__*/__webpack_require__.n(preload_it);\n// EXTERNAL MODULE: ./node_modules/lazyload/lazyload.js\nvar lazyload = __webpack_require__(261);\nvar lazyload_default = /*#__PURE__*/__webpack_require__.n(lazyload);\n// EXTERNAL MODULE: ./node_modules/bowser/es5.js\nvar es5 = __webpack_require__(206);\nvar es5_default = /*#__PURE__*/__webpack_require__.n(es5);\n// EXTERNAL MODULE: ./node_modules/virtual-scroll/src/index.js\nvar src = __webpack_require__(809);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n;// CONCATENATED MODULE: ./app/src/js/classes/superScroller.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction superScroller_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction superScroller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction superScroller_createClass(Constructor, protoProps, staticProps) { if (protoProps) superScroller_defineProperties(Constructor.prototype, protoProps); if (staticProps) superScroller_defineProperties(Constructor, staticProps); return Constructor; }\n\n// utilities\n\n\n // firefox or edge flags\n\nvar isFirefox = es5.name === 'Firefox'; //const isEdge = browserDetector.name === 'Microsoft Edge' || browserDetector.name === 'Internet Explorer';\n// empty function\n\nvar noop = function noop() {}; // eslint-disable-line\n\n\nvar _default = /*#__PURE__*/function () {\n  function _default(options) {\n    var _this = this;\n\n    superScroller_classCallCheck(this, _default);\n\n    // hook functions\n    this._onRaf = options.onRaf || noop;\n    this._onScroll = options.onScroll || noop;\n    this._currentSection = options.currentSection ? options.currentSection : null;\n    this._global = {\n      percent: {\n        x: 0,\n        y: 0\n      },\n      mode: options.mode || 'vertical'\n    };\n\n    var lerp = function lerp(value1, value2, amount) {\n      amount = amount < 0 ? 0 : amount;\n      amount = amount > 1 ? 1 : amount;\n      return value1 + (value2 - value1) * amount;\n    }; // scroll properties\n\n\n    if (options.scroll) {\n      // default virtualScroll options\n      this._virtualScroll = null;\n      this._virtualScrollOptions = {\n        el: typeof options.el !== 'undefined' ? _typeof(options.el) : window,\n        mouseMultiplier: typeof options.mouseMultiplier !== 'undefined' ? _typeof(options.mouseMultiplier) : 0.3,\n        touchMultiplier: typeof options.touchMultiplier !== 'undefined' ? _typeof(options.touchMultiplier) : 2,\n        firefoxMultiplier: typeof options.firefoxMultiplier !== 'undefined' ? _typeof(options.firefoxMultiplier) : 50,\n        limitInertia: typeof options.limitInertia !== 'undefined' ? _typeof(options.limitInertia) : false,\n        passive: typeof options.passive !== 'undefined' ? options.pasive : false,\n        useKeyboard: false\n      };\n      this._scroll = {\n        enable: typeof options.enable !== 'undefined' ? options.enable : true,\n        target: options.scrollTarget,\n        width: 0,\n        height: 0,\n        timeout: false,\n        dragging: false,\n        ratio: {\n          x: 0,\n          y: 0\n        },\n        clickedPoint: {\n          x: 0,\n          y: 0\n        },\n        position: {\n          x: 0,\n          y: 0\n        },\n        lastPosition: {\n          x: 0,\n          y: 0\n        },\n        livePosition: {\n          x: 0,\n          y: 0\n        },\n        maxScroll: {\n          x: 0,\n          y: 0\n        }\n      };\n\n      this._scrollDown = function (e) {\n        gsap/* gsap.delayedCall */.p8.delayedCall(0.2, function () {\n          _this._scroll.target.parentNode.style.pointerEvents = 'none';\n        }); // set flag\n\n        _this._scroll.dragging = true;\n\n        _this._scroll.target.classList.add('dragging'); // get the point the user clicked on the bar\n\n\n        _this._scroll.clickedPoint.x = e.clientX - _this._scroll.livePosition.x;\n        _this._scroll.clickedPoint.y = e.clientY - _this._scroll.livePosition.y; // track the mouse events\n\n        document.addEventListener('mousemove', _this._scrollDrag);\n        document.addEventListener('mouseup', _this._scrollUp);\n      };\n\n      this._scrollDrag = function (e) {\n        if (_this._global.mode === 'horizontal') {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._scroll.position.x = Math.min(0, Math.max(_this._scroll.maxScroll.x, e.clientX - _this._scroll.clickedPoint.x)); // update global percentage\n\n          _this._global.percent.x = _this._scroll.position.x / _this._scroll.maxScroll.x;\n        } else {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._scroll.position.y = Math.min(0, Math.max(_this._scroll.maxScroll.y, e.clientY - _this._scroll.clickedPoint.y)); // update global percentage\n\n          _this._global.percent.y = _this._scroll.position.y / _this._scroll.maxScroll.y;\n        }\n      };\n\n      this._scrollUp = function () {\n        gsap/* gsap.delayedCall */.p8.delayedCall(0.2, function () {\n          _this._scroll.target.parentNode.style.pointerEvents = 'all';\n        }); // stop tracking the two mouse events\n\n        document.removeEventListener('mousemove', _this._scrollDrag);\n        document.removeEventListener('mouseup', _this._scrollUp); // set flag\n\n        _this._scroll.dragging = false;\n\n        _this._scroll.target.classList.remove('dragging');\n      }; // bind mousedown event\n\n\n      if (this._global.mode === 'horizontal') this._scroll.target.addEventListener('mousedown', this._scrollDown);\n\n      this._scrollMove = function (e) {\n        _this._onScroll(); // Prevent pointerevents on scroll\n\n\n        _this._scroll.target.parentNode.style.pointerEvents = 'none';\n        clearTimeout(_this._scroll.timeout);\n        _this._scroll.timeout = setTimeout(function () {\n          _this._scroll.target.parentNode.style.pointerEvents = 'all';\n        }, 200); // check if scroll is allowed\n\n        if (!_this._scroll.enable) return; // update scroll\n\n        if (_this._global.mode === 'horizontal') {\n          // get scroll values\n          _this._scroll.position.x = Math.min(0, Math.max(_this._scroll.maxScroll.x, _this._scroll.position.x += e.deltaY));\n          _this._scroll.position.x = Math.min(0, Math.max(_this._scroll.maxScroll.x, _this._scroll.position.x += e.deltaX));\n          _this._global.percent.x = _this._scroll.position.x / _this._scroll.maxScroll.x;\n          _this._scroll.lastPosition.x = _this._scroll.position.x;\n        } else {\n          // get scroll values\n          _this._scroll.position.y = Math.min(0, Math.max(_this._scroll.maxScroll.y, _this._scroll.position.y += e.deltaY));\n          _this._global.percent.y = _this._scroll.position.y / _this._scroll.maxScroll.y;\n          _this._scroll.lastPosition.y = _this._scroll.position.y;\n        }\n\n        e.originalEvent.preventDefault();\n      };\n\n      this._scrollRaf = function () {\n        if (_this._global.mode === 'horizontal') _this._scroll.livePosition.x = lerp(_this._scroll.livePosition.x, _this._scroll.maxScroll.x * _this._global.percent.x, 0.1);else _this._scroll.livePosition.y = lerp(_this._scroll.livePosition.y, _this._scroll.maxScroll.y * _this._global.percent.y, 0.1);\n        _this._scroll.target.style.transform = 'translate3d(' + _this._scroll.livePosition.x + 'px,' + _this._scroll.livePosition.y + 'px, 0px)';\n      };\n\n      this._onKeyDown = function (e) {\n        // Return if input is focused\n        var $inputs = document.querySelectorAll('input');\n\n        for (var i = 0; i < $inputs.length; i++) {\n          if (document.activeElement.name === $inputs[i].name) return false;\n        } // init scroll values\n\n\n        var scrollX = 0;\n        var scrollY = 0; // get window height and width\n\n        var windowHeight = window.innerHeight - 40;\n        var windowWidth = window.innerWidth - 40; // check pressed key\n\n        switch (e.keyCode) {\n          case 37:\n            scrollX = -120;\n            break;\n\n          case 38:\n            scrollY = -120;\n            break;\n\n          case 39:\n            scrollX = 120;\n            break;\n\n          case 40:\n            scrollY = 120;\n            break;\n\n          case  true && e.shiftKey:\n            scrollX = -windowWidth;\n            scrollY = -windowHeight;\n            break;\n\n          case 32:\n            scrollX = windowWidth;\n            scrollY = windowHeight;\n            break;\n\n          default:\n            return;\n        } // update scroll\n\n\n        _this.scrollUpdate(scrollX, scrollY);\n      };\n    } // bar properties\n\n\n    if (options.bar) {\n      this._bar = {\n        enable: true,\n        target: options.barTarget,\n        width: 0,\n        height: 0,\n        dragging: false,\n        ratio: {\n          x: 0,\n          y: 0\n        },\n        position: {\n          x: 0,\n          y: 0\n        },\n        livePosition: {\n          x: 0,\n          y: 0\n        },\n        maxScroll: {\n          x: 0,\n          y: 0\n        },\n        clickedPoint: {\n          x: 0,\n          y: 0\n        }\n      };\n\n      this._barDown = function (e) {\n        // set flag\n        _this._bar.dragging = true;\n\n        _this._bar.target.classList.add('dragging'); // get the point the user clicked on the bar\n\n\n        _this._bar.clickedPoint.x = e.clientX - _this._bar.livePosition.x;\n        _this._bar.clickedPoint.y = e.clientY - _this._bar.livePosition.y; // track the mouse events\n\n        document.addEventListener('mousemove', _this._barMove);\n        document.addEventListener('mouseup', _this._barUp);\n      };\n\n      this._barMove = function (e) {\n        if (_this._global.mode === 'horizontal') {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._bar.position.x = Math.min(Math.max(e.clientX - _this._bar.clickedPoint.x, 0), _this._bar.maxScroll.x); // update global percentage\n\n          _this._global.percent.x = _this._bar.position.x / _this._bar.maxScroll.x;\n          _this._scroll.position.x = _this._global.percent.x * _this._scroll.maxScroll.x;\n        } else {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._bar.position.y = Math.min(Math.max(e.clientY - _this._bar.clickedPoint.y, 0), _this._bar.maxScroll.y); // update global percentage\n\n          _this._global.percent.y = _this._bar.position.y / _this._bar.maxScroll.y;\n          _this._scroll.position.y = _this._global.percent.y * _this._scroll.maxScroll.y;\n        }\n      };\n\n      this._barUp = function () {\n        // stop tracking the two mouse events\n        document.removeEventListener('mousemove', _this._barMove);\n        document.removeEventListener('mouseup', _this._barUp); // set flag\n\n        _this._bar.dragging = false;\n\n        _this._bar.target.classList.remove('dragging');\n      };\n\n      this._barRaf = function () {\n        if (_this._global.mode === 'horizontal') _this._bar.livePosition.x = lerp(_this._bar.livePosition.x, _this._bar.maxScroll.x * _this._global.percent.x, 0.1);else _this._bar.livePosition.y = lerp(_this._bar.livePosition.y, _this._bar.maxScroll.y * _this._global.percent.y, 0.1);\n        _this._bar.target.style.transform = 'translate3d(' + _this._bar.livePosition.x + 'px,' + _this._bar.livePosition.y + 'px, 0px)';\n      }; // bind mousedown event\n\n\n      this._bar.target.addEventListener('mousedown', this._barDown);\n    }\n\n    this._raf = function () {\n      if (!_this._scroll.enable) return;\n      if (_this._scroll) _this._scrollRaf();\n      if (_this._bar) _this._barRaf();\n\n      _this._onRaf(_this._scroll.livePosition, _this._global.percent);\n    }; // bind to gsap ticker\n\n\n    gsap/* gsap.ticker.add */.p8.ticker.add(this._raf); // bind\n\n    this.init();\n  }\n\n  superScroller_createClass(_default, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      // virtualscroll properties\n      if (this._virtualScroll !== 'undefined') {\n        this._virtualScroll = new (src_default())(this._virtualScrollOptions);\n\n        this._virtualScroll.on(function (e) {\n          _this2._scrollMove(e);\n        }); // bind keydown event\n\n\n        document.addEventListener('keydown', this._onKeyDown);\n      }\n    }\n  }, {\n    key: \"scrollUpdate\",\n    value: function scrollUpdate(scrollX, scrollY) {\n      // Update scroll values\n      this._scroll.position.x = Math.min(0, Math.max(this._scroll.position.x -= scrollX, this._scroll.maxScroll.y));\n      this._scroll.position.y = Math.min(0, Math.max(this._scroll.position.y -= scrollY, this._scroll.maxScroll.y));\n      gsap/* gsap.to */.p8.to(this._global.percent, {\n        x: this._scroll.position.x / this._scroll.maxScroll.x,\n        y: this._scroll.position.y / this._scroll.maxScroll.y,\n        ease: 'power4.out',\n        duration: 0.4\n      });\n    }\n  }, {\n    key: \"scrollAnimate\",\n    value: function scrollAnimate(_position) {\n      var _duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n      var _ease = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'power4.inOut';\n\n      var _force = arguments.length > 3 ? arguments[3] : undefined;\n\n      _duration = isFirefox ? _duration / 2 : _duration;\n      if (!_force && !this._scroll.enable) return;\n      this._scroll.position.y = Math.max(-_position, this._scroll.maxScroll.y);\n      gsap/* gsap.to */.p8.to(this._global.percent, {\n        y: this._scroll.position.y / this._scroll.maxScroll.y,\n        ease: _ease,\n        duration: _duration\n      });\n    }\n  }, {\n    key: \"scrollResize\",\n    value: function scrollResize() {\n      //\n      this._scroll.width = this._scroll.target.getBoundingClientRect().width;\n      this._scroll.height = this._scroll.target.getBoundingClientRect().height;\n      this._scroll.maxScroll.x = -(this._scroll.width - window.innerWidth);\n      this._scroll.maxScroll.y = -(this._scroll.height - window.innerHeight);\n    }\n  }, {\n    key: \"barResize\",\n    value: function barResize() {\n      // get container el sizes\n      this._bar.parentWidth = this._bar.target.parentNode.getBoundingClientRect().width;\n      this._bar.parentHeight = this._bar.target.parentNode.getBoundingClientRect().height; // get bar size\n\n      if (this._global.mode === 'horizontal') {\n        this._bar.width = this._bar.parentWidth * this._bar.parentWidth / this._scroll.width;\n        this._bar.height = this._bar.target.getBoundingClientRect().height;\n        this._bar.target.style.width = this._bar.width + 'px';\n      } else {\n        this._bar.width = this._bar.target.getBoundingClientRect().width;\n        this._bar.height = this._bar.parentHeight * this._bar.parentHeight / this._scroll.height;\n        this._bar.target.style.height = this._bar.height + 'px';\n      } // calculate maximum scroll\n\n\n      this._bar.maxScroll.x = this._bar.parentWidth - this._bar.width;\n      this._bar.maxScroll.y = this._bar.parentHeight - this._bar.height;\n      this._bar.ratio.x = this._bar.width / this._bar.parentWidth;\n      this._bar.ratio.y = this._bar.height / this._bar.parentHeight;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (this._scroll) this.scrollResize();\n      if (this._bar) this.barResize();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      gsap/* gsap.ticker.remove */.p8.ticker.remove(this._raf);\n    }\n  }]);\n\n  return _default;\n}();\n\n\n;// CONCATENATED MODULE: ./app/src/js/utils/strings.js\n/*!\n * strings: 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar _trimExp = /(^\\s+|\\s+$)/g;\nvar emojiExp = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF](?:[\\u200D\\uFE0F][\\uD800-\\uDBFF][\\uDC00-\\uDFFF]){2,}|\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F)/;\nfunction getText(e) {\n  var type = e.nodeType,\n      result = \"\";\n\n  if (type === 1 || type === 9 || type === 11) {\n    if (typeof e.textContent === \"string\") {\n      return e.textContent;\n    } else {\n      for (e = e.firstChild; e; e = e.nextSibling) {\n        result += getText(e);\n      }\n    }\n  } else if (type === 3 || type === 4) {\n    return e.nodeValue;\n  }\n\n  return result;\n}\nfunction splitInnerHTML(element, delimiter, trim) {\n  var node = element.firstChild,\n      result = [];\n\n  while (node) {\n    if (node.nodeType === 3) {\n      result.push.apply(result, emojiSafeSplit((node.nodeValue + \"\").replace(/^\\n+/g, \"\").replace(/\\s+/g, \" \"), delimiter, trim));\n    } else if ((node.nodeName + \"\").toLowerCase() === \"br\") {\n      result[result.length - 1] += \"<br>\";\n    } else {\n      result.push(node.outerHTML);\n    }\n\n    node = node.nextSibling;\n  }\n\n  return result;\n}\n/*\n//smaller kb version that only handles the simpler emoji's, which is often perfectly adequate.\n\nlet _emoji = \"[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2694-\\u2697]|\\uD83E[\\uDD10-\\uDD5D]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\",\n\t_emojiExp = new RegExp(_emoji),\n\t_emojiAndCharsExp = new RegExp(_emoji + \"|.\", \"g\"),\n\t_emojiSafeSplit = (text, delimiter, trim) => {\n\t\tif (trim) {\n\t\t\ttext = text.replace(_trimExp, \"\");\n\t\t}\n\t\treturn ((delimiter === \"\" || !delimiter) && _emojiExp.test(text)) ? text.match(_emojiAndCharsExp) : text.split(delimiter || \"\");\n\t};\n */\n\nfunction emojiSafeSplit(text, delimiter, trim) {\n  text += \"\"; // make sure it's cast as a string. Someone may pass in a number.\n\n  if (trim) {\n    text = text.replace(_trimExp, \"\");\n  }\n\n  if (delimiter && delimiter !== \"\") {\n    return text.replace(/>/g, \"&gt;\").replace(/</g, \"&lt;\").split(delimiter);\n  }\n\n  var result = [],\n      l = text.length,\n      i = 0,\n      j,\n      character;\n\n  for (; i < l; i++) {\n    character = text.charAt(i);\n\n    if (character.charCodeAt(0) >= 0xD800 && character.charCodeAt(0) <= 0xDBFF || text.charCodeAt(i + 1) >= 0xFE00 && text.charCodeAt(i + 1) <= 0xFE0F) {\n      //special emoji characters use 2 or 4 unicode characters that we must keep together.\n      j = ((text.substr(i, 12).split(emojiExp) || [])[1] || \"\").length || 2;\n      character = text.substr(i, j);\n      result.emoji = 1;\n      i += j - 1;\n    }\n\n    result.push(character === \">\" ? \"&gt;\" : character === \"<\" ? \"&lt;\" : character);\n  }\n\n  return result;\n}\n;// CONCATENATED MODULE: ./app/src/js/classes/splitText.js\nfunction splitText_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { splitText_typeof = function _typeof(obj) { return typeof obj; }; } else { splitText_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return splitText_typeof(obj); }\n\n/*!\n * SplitText: 3.2.6\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar _doc,\n    _win,\n    _coreInitted,\n    _stripExp = /(?:\\r|\\n|\\t\\t)/g,\n    //find carriage returns, new line feeds and double-tabs.\n_multipleSpacesExp = /(?:\\s\\s+)/g,\n    _initCore = function _initCore() {\n  _doc = document;\n  _win = window;\n  _coreInitted = 1;\n},\n    _bonusValidated = 1,\n    //<name>SplitText</name>\n_getComputedStyle = function _getComputedStyle(element) {\n  return _win.getComputedStyle(element);\n},\n    _isArray = Array.isArray,\n    _slice = [].slice,\n    _toArray = function _toArray(value, leaveStrings) {\n  //takes any value and returns an array. If it's a string (and leaveStrings isn't true), it'll use document.querySelectorAll() and convert that to an array. It'll also accept iterables like jQuery objects.\n  var type;\n  return _isArray(value) ? value : (type = splitText_typeof(value)) === \"string\" && !leaveStrings && value ? _slice.call(_doc.querySelectorAll(value), 0) : value && type === \"object\" && \"length\" in value ? _slice.call(value, 0) : value ? [value] : [];\n},\n    _isAbsolute = function _isAbsolute(vars) {\n  return vars.position === \"absolute\" || vars.absolute === true;\n},\n    //some characters are combining marks (think diacritics/accents in European languages) which involve 2 or 4 characters that combine in the browser to form a single character. Pass in the remaining text and an array of the special characters to search for and if the text starts with one of those special characters, it'll spit back the number of characters to retain (often 2 or 4). Used in the specialChars features that was introduced in 0.6.0.\n_findSpecialChars = function _findSpecialChars(text, chars) {\n  var i = chars.length,\n      s;\n\n  while (--i > -1) {\n    s = chars[i];\n\n    if (text.substr(0, s.length) === s) {\n      return s.length;\n    }\n  }\n},\n    _divStart = \" style='position:relative;display:inline-block;'\",\n    _cssClassFunc = function _cssClassFunc(cssClass, tag) {\n  if (cssClass === void 0) {\n    cssClass = \"\";\n  }\n\n  var iterate = ~cssClass.indexOf(\"++\"),\n      num = 1;\n\n  if (iterate) {\n    cssClass = cssClass.split(\"++\").join(\"\");\n  }\n\n  return function () {\n    return \"<\" + tag + _divStart + (cssClass ? \" class='\" + cssClass + (iterate ? num++ : \"\") + \"'>\" : \">\");\n  };\n},\n    _swapText = function _swapText(element, oldText, newText) {\n  var type = element.nodeType;\n\n  if (type === 1 || type === 9 || type === 11) {\n    for (element = element.firstChild; element; element = element.nextSibling) {\n      _swapText(element, oldText, newText);\n    }\n  } else if (type === 3 || type === 4) {\n    element.nodeValue = element.nodeValue.split(oldText).join(newText);\n  }\n},\n    _pushReversed = function _pushReversed(a, merge) {\n  var i = merge.length;\n\n  while (--i > -1) {\n    a.push(merge[i]);\n  }\n},\n    _isBeforeWordDelimiter = function _isBeforeWordDelimiter(e, root, wordDelimiter) {\n  var next;\n\n  while (e && e !== root) {\n    next = e._next || e.nextSibling;\n\n    if (next) {\n      return next.textContent.charAt(0) === wordDelimiter;\n    }\n\n    e = e.parentNode || e._parent;\n  }\n},\n    _deWordify = function _deWordify(e) {\n  var children = _toArray(e.childNodes),\n      l = children.length,\n      i,\n      child;\n\n  for (i = 0; i < l; i++) {\n    child = children[i];\n\n    if (child._isSplit) {\n      _deWordify(child);\n    } else {\n      if (i && child.previousSibling.nodeType === 3) {\n        child.previousSibling.nodeValue += child.nodeType === 3 ? child.nodeValue : child.firstChild.nodeValue;\n      } else if (child.nodeType !== 3) {\n        e.insertBefore(child.firstChild, child);\n      }\n\n      e.removeChild(child);\n    }\n  }\n},\n    _getStyleAsNumber = function _getStyleAsNumber(name, computedStyle) {\n  return parseFloat(computedStyle[name]) || 0;\n},\n    _setPositionsAfterSplit = function _setPositionsAfterSplit(element, vars, allChars, allWords, allLines, origWidth, origHeight) {\n  var cs = _getComputedStyle(element),\n      paddingLeft = _getStyleAsNumber(\"paddingLeft\", cs),\n      lineOffsetY = -999,\n      borderTopAndBottom = _getStyleAsNumber(\"borderBottomWidth\", cs) + _getStyleAsNumber(\"borderTopWidth\", cs),\n      borderLeftAndRight = _getStyleAsNumber(\"borderLeftWidth\", cs) + _getStyleAsNumber(\"borderRightWidth\", cs),\n      padTopAndBottom = _getStyleAsNumber(\"paddingTop\", cs) + _getStyleAsNumber(\"paddingBottom\", cs),\n      padLeftAndRight = _getStyleAsNumber(\"paddingLeft\", cs) + _getStyleAsNumber(\"paddingRight\", cs),\n      lineThreshold = _getStyleAsNumber(\"fontSize\", cs) * 0.2,\n      textAlign = cs.textAlign,\n      charArray = [],\n      wordArray = [],\n      lineArray = [],\n      wordDelimiter = vars.wordDelimiter || \" \",\n      tag = vars.tag ? vars.tag : vars.span ? \"span\" : \"div\",\n      types = vars.type || vars.split || \"chars,words,lines\",\n      lines = allLines && ~types.indexOf(\"lines\") ? [] : null,\n      words = ~types.indexOf(\"words\"),\n      chars = ~types.indexOf(\"chars\"),\n      absolute = _isAbsolute(vars),\n      linesClass = vars.linesClass,\n      iterateLine = ~(linesClass || \"\").indexOf(\"++\"),\n      spaceNodesToRemove = [],\n      i,\n      j,\n      l,\n      node,\n      nodes,\n      isChild,\n      curLine,\n      addWordSpaces,\n      style,\n      lineNode,\n      lineWidth,\n      offset;\n\n  if (iterateLine) {\n    linesClass = linesClass.split(\"++\").join(\"\");\n  } //copy all the descendant nodes into an array (we can't use a regular nodeList because it's live and we may need to renest things)\n\n\n  j = element.getElementsByTagName(\"*\");\n  l = j.length;\n  nodes = [];\n\n  for (i = 0; i < l; i++) {\n    nodes[i] = j[i];\n  } //for absolute positioning, we need to record the x/y offsets and width/height for every <div>. And even if we're not positioning things absolutely, in order to accommodate lines, we must figure out where the y offset changes so that we can sense where the lines break, and we populate the lines array.\n\n\n  if (lines || absolute) {\n    for (i = 0; i < l; i++) {\n      node = nodes[i];\n      isChild = node.parentNode === element;\n\n      if (isChild || absolute || chars && !words) {\n        offset = node.offsetTop;\n\n        if (lines && isChild && Math.abs(offset - lineOffsetY) > lineThreshold && (node.nodeName !== \"BR\" || i === 0)) {\n          //we found some rare occasions where a certain character like &#8209; could cause the offsetTop to be off by 1 pixel, so we build in a threshold.\n          curLine = [];\n          lines.push(curLine);\n          lineOffsetY = offset;\n        }\n\n        if (absolute) {\n          //record offset x and y, as well as width and height so that we can access them later for positioning. Grabbing them at once ensures we don't trigger a browser paint & we maximize performance.\n          node._x = node.offsetLeft;\n          node._y = offset;\n          node._w = node.offsetWidth;\n          node._h = node.offsetHeight;\n        }\n\n        if (lines) {\n          if (node._isSplit && isChild || !chars && isChild || words && isChild || !words && node.parentNode.parentNode === element && !node.parentNode._isSplit) {\n            curLine.push(node);\n            node._x -= paddingLeft;\n\n            if (_isBeforeWordDelimiter(node, element, wordDelimiter)) {\n              node._wordEnd = true;\n            }\n          }\n\n          if (node.nodeName === \"BR\" && (node.nextSibling && node.nextSibling.nodeName === \"BR\" || i === 0)) {\n            //two consecutive <br> tags signify a new [empty] line. Also, if the entire block of content STARTS with a <br>, add a line.\n            lines.push([]);\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < l; i++) {\n    node = nodes[i];\n    isChild = node.parentNode === element;\n\n    if (node.nodeName === \"BR\") {\n      if (lines || absolute) {\n        if (node.parentNode) {\n          node.parentNode.removeChild(node);\n        }\n\n        nodes.splice(i--, 1);\n        l--;\n      } else if (!words) {\n        element.appendChild(node);\n      }\n\n      continue;\n    }\n\n    if (absolute) {\n      style = node.style;\n\n      if (!words && !isChild) {\n        node._x += node.parentNode._x;\n        node._y += node.parentNode._y;\n      }\n\n      style.left = node._x + \"px\";\n      style.top = node._y + \"px\";\n      style.position = \"absolute\";\n      style.display = \"block\"; //if we don't set the width/height, things collapse in older versions of IE and the origin for transforms is thrown off in all browsers.\n\n      style.width = node._w + 1 + \"px\"; //IE is 1px short sometimes. Avoid wrapping\n\n      style.height = node._h + \"px\";\n    }\n\n    if (!words && chars) {\n      //we always start out wrapping words in their own <div> so that line breaks happen correctly, but here we'll remove those <div> tags if necessary and renest the characters directly into the element rather than inside the word <div>\n      if (node._isSplit) {\n        node._next = node.nextSibling;\n        node.parentNode.appendChild(node); //put it at the end to keep the order correct.\n      } else if (node.parentNode._isSplit) {\n        node._parent = node.parentNode;\n\n        if (!node.previousSibling && node.firstChild) {\n          node.firstChild._isFirst = true;\n        }\n\n        if (node.nextSibling && node.nextSibling.textContent === \" \" && !node.nextSibling.nextSibling) {\n          //if the last node inside a nested element is just a space (like T<span>nested </span>), remove it otherwise it'll get placed in the wrong order. Don't remove it right away, though, because we need to sense when words/characters are before a space like _isBeforeWordDelimiter(). Removing it now would make that a false negative.\n          spaceNodesToRemove.push(node.nextSibling);\n        }\n\n        node._next = node.nextSibling && node.nextSibling._isFirst ? null : node.nextSibling;\n        node.parentNode.removeChild(node);\n        nodes.splice(i--, 1);\n        l--;\n      } else if (!isChild) {\n        offset = !node.nextSibling && _isBeforeWordDelimiter(node.parentNode, element, wordDelimiter); //if this is the last letter in the word (and we're not breaking by lines and not positioning things absolutely), we need to add a space afterwards so that the characters don't just mash together\n\n        if (node.parentNode._parent) {\n          node.parentNode._parent.appendChild(node);\n        }\n\n        if (offset) {\n          node.parentNode.appendChild(_doc.createTextNode(\" \"));\n        }\n\n        if (tag === \"span\") {\n          node.style.display = \"inline\"; //so that word breaks are honored properly.\n        }\n\n        charArray.push(node);\n      }\n    } else if (node.parentNode._isSplit && !node._isSplit && node.innerHTML !== \"\") {\n      wordArray.push(node);\n    } else if (chars && !node._isSplit) {\n      if (tag === \"span\") {\n        node.style.display = \"inline\";\n      }\n\n      charArray.push(node);\n    }\n  }\n\n  i = spaceNodesToRemove.length;\n\n  while (--i > -1) {\n    spaceNodesToRemove[i].parentNode.removeChild(spaceNodesToRemove[i]);\n  }\n\n  if (lines) {\n    //the next 7 lines just give us the line width in the most reliable way and figure out the left offset (if position isn't relative or absolute). We must set the width along with text-align to ensure everything works properly for various alignments.\n    if (absolute) {\n      lineNode = _doc.createElement(tag);\n      element.appendChild(lineNode);\n      lineWidth = lineNode.offsetWidth + \"px\";\n      offset = lineNode.offsetParent === element ? 0 : element.offsetLeft;\n      element.removeChild(lineNode);\n    }\n\n    style = element.style.cssText;\n    element.style.cssText = \"display:none;\"; //to improve performance, set display:none on the element so that the browser doesn't have to worry about reflowing or rendering while we're renesting things. We'll revert the cssText later.\n    //we can't use element.innerHTML = \"\" because that causes IE to literally delete all the nodes and their content even though we've stored them in an array! So we must loop through the children and remove them.\n\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n\n    addWordSpaces = wordDelimiter === \" \" && (!absolute || !words && !chars);\n\n    for (i = 0; i < lines.length; i++) {\n      curLine = lines[i];\n      lineNode = _doc.createElement(tag);\n      lineNode.style.cssText = \"display:block;text-align:\" + textAlign + \";position:\" + (absolute ? \"absolute;\" : \"relative;\");\n\n      if (linesClass) {\n        lineNode.className = linesClass + (iterateLine ? i + 1 : \"\");\n      }\n\n      lineArray.push(lineNode);\n      l = curLine.length;\n\n      for (j = 0; j < l; j++) {\n        if (curLine[j].nodeName !== \"BR\") {\n          node = curLine[j];\n          lineNode.appendChild(node);\n\n          if (addWordSpaces && node._wordEnd) {\n            lineNode.appendChild(_doc.createTextNode(\" \"));\n          }\n\n          if (absolute) {\n            if (j === 0) {\n              lineNode.style.top = node._y + \"px\";\n              lineNode.style.left = paddingLeft + offset + \"px\";\n            }\n\n            node.style.top = \"0px\";\n\n            if (offset) {\n              node.style.left = node._x - offset + \"px\";\n            }\n          }\n        }\n      }\n\n      if (l === 0) {\n        //if there are no nodes in the line (typically meaning there were two consecutive <br> tags, just add a non-breaking space so that things display properly.\n        lineNode.innerHTML = \"&nbsp;\";\n      } else if (!words && !chars) {\n        _deWordify(lineNode);\n\n        _swapText(lineNode, String.fromCharCode(160), \" \");\n      }\n\n      if (absolute) {\n        lineNode.style.width = lineWidth;\n        lineNode.style.height = node._h + \"px\";\n      }\n\n      element.appendChild(lineNode);\n    }\n\n    element.style.cssText = style;\n  } //if everything shifts to being position:absolute, the container can collapse in terms of height or width, so fix that here.\n\n\n  if (absolute) {\n    if (origHeight > element.clientHeight) {\n      element.style.height = origHeight - padTopAndBottom + \"px\";\n\n      if (element.clientHeight < origHeight) {\n        //IE8 and earlier use a different box model - we must include padding and borders\n        element.style.height = origHeight + borderTopAndBottom + \"px\";\n      }\n    }\n\n    if (origWidth > element.clientWidth) {\n      element.style.width = origWidth - padLeftAndRight + \"px\";\n\n      if (element.clientWidth < origWidth) {\n        //IE8 and earlier use a different box model - we must include padding and borders\n        element.style.width = origWidth + borderLeftAndRight + \"px\";\n      }\n    }\n  }\n\n  _pushReversed(allChars, charArray);\n\n  if (words) {\n    _pushReversed(allWords, wordArray);\n  }\n\n  _pushReversed(allLines, lineArray);\n},\n    _splitRawText = function _splitRawText(element, vars, wordStart, charStart) {\n  var tag = vars.tag ? vars.tag : vars.span ? \"span\" : \"div\",\n      types = vars.type || vars.split || \"chars,words,lines\",\n      //words = (types.indexOf(\"words\") !== -1),\n  chars = ~types.indexOf(\"chars\"),\n      absolute = _isAbsolute(vars),\n      wordDelimiter = vars.wordDelimiter || \" \",\n      space = wordDelimiter !== \" \" ? \"\" : absolute ? \"&#173; \" : \" \",\n      wordEnd = \"</\" + tag + \">\",\n      wordIsOpen = 1,\n      specialChars = vars.specialChars ? typeof vars.specialChars === \"function\" ? vars.specialChars : _findSpecialChars : null,\n      //specialChars can be an array or a function. For performance reasons, we always set this local \"specialChars\" to a function to which we pass the remaining text and whatever the original vars.specialChars was so that if it's an array, it works with the _findSpecialChars() function.\n  text,\n      splitText,\n      i,\n      j,\n      l,\n      character,\n      hasTagStart,\n      testResult,\n      container = _doc.createElement(\"div\"),\n      parent = element.parentNode;\n\n  parent.insertBefore(container, element);\n  container.textContent = element.nodeValue;\n  parent.removeChild(element);\n  element = container;\n  text = getText(element);\n  hasTagStart = text.indexOf(\"<\") !== -1;\n\n  if (vars.reduceWhiteSpace !== false) {\n    text = text.replace(_multipleSpacesExp, \" \").replace(_stripExp, \"\");\n  }\n\n  if (hasTagStart) {\n    text = text.split(\"<\").join(\"{{LT}}\"); //we can't leave \"<\" in the string, or when we set the innerHTML, it can be interpreted as a node\n  }\n\n  l = text.length;\n  splitText = (text.charAt(0) === \" \" ? space : \"\") + wordStart();\n\n  for (i = 0; i < l; i++) {\n    character = text.charAt(i);\n\n    if (specialChars && (testResult = specialChars(text.substr(i), vars.specialChars))) {\n      // look for any specialChars that were declared. Remember, they can be passed in like {specialChars:[\"मी\", \"पा\", \"है\"]} or a function could be defined instead. Either way, the function should return the number of characters that should be grouped together for this \"character\".\n      character = text.substr(i, testResult || 1);\n      splitText += chars && character !== \" \" ? charStart() + character + \"</\" + tag + \">\" : character;\n      i += testResult - 1;\n    } else if (character === wordDelimiter && text.charAt(i - 1) !== wordDelimiter && i) {\n      splitText += wordIsOpen ? wordEnd : \"\";\n      wordIsOpen = 0;\n\n      while (text.charAt(i + 1) === wordDelimiter) {\n        //skip over empty spaces (to avoid making them words)\n        splitText += space;\n        i++;\n      }\n\n      if (i === l - 1) {\n        splitText += space;\n      } else if (text.charAt(i + 1) !== \")\") {\n        splitText += space + wordStart();\n        wordIsOpen = 1;\n      }\n    } else if (character === \"{\" && text.substr(i, 6) === \"{{LT}}\") {\n      splitText += chars ? charStart() + \"{{LT}}\" + \"</\" + tag + \">\" : \"{{LT}}\";\n      i += 5;\n    } else if (character.charCodeAt(0) >= 0xD800 && character.charCodeAt(0) <= 0xDBFF || text.charCodeAt(i + 1) >= 0xFE00 && text.charCodeAt(i + 1) <= 0xFE0F) {\n      //special emoji characters use 2 or 4 unicode characters that we must keep together.\n      j = ((text.substr(i, 12).split(emojiExp) || [])[1] || \"\").length || 2;\n      splitText += chars && character !== \" \" ? charStart() + text.substr(i, j) + \"</\" + tag + \">\" : text.substr(i, j);\n      i += j - 1;\n    } else {\n      splitText += chars && character !== \" \" ? charStart() + character + \"</\" + tag + \">\" : character;\n    }\n  }\n\n  element.outerHTML = splitText + (wordIsOpen ? wordEnd : \"\");\n\n  if (hasTagStart) {\n    _swapText(parent, \"{{LT}}\", \"<\"); //note: don't perform this on \"element\" because that gets replaced with all new elements when we set element.outerHTML.\n\n  }\n},\n    _split = function _split(element, vars, wordStart, charStart) {\n  var children = _toArray(element.childNodes),\n      l = children.length,\n      absolute = _isAbsolute(vars),\n      i,\n      child;\n\n  if (element.nodeType !== 3 || l > 1) {\n    vars.absolute = false;\n\n    for (i = 0; i < l; i++) {\n      child = children[i];\n\n      if (child.nodeType !== 3 || /\\S+/.test(child.nodeValue)) {\n        if (absolute && child.nodeType !== 3 && _getComputedStyle(child).display === \"inline\") {\n          //if there's a child node that's display:inline, switch it to inline-block so that absolute positioning works properly (most browsers don't report offsetTop/offsetLeft properly inside a <span> for example)\n          child.style.display = \"inline-block\";\n          child.style.position = \"relative\";\n        }\n\n        child._isSplit = true;\n\n        _split(child, vars, wordStart, charStart); //don't split lines on child elements\n\n      }\n    }\n\n    vars.absolute = absolute;\n    element._isSplit = true;\n    return;\n  }\n\n  _splitRawText(element, vars, wordStart, charStart);\n};\n\nvar SplitText = /*#__PURE__*/function () {\n  function SplitText(element, vars) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    this.elements = _toArray(element);\n    this.chars = [];\n    this.words = [];\n    this.lines = [];\n    this._originals = [];\n    this.vars = vars || {};\n\n    if (_bonusValidated) {\n      this.split(vars);\n    }\n  }\n\n  var _proto = SplitText.prototype;\n\n  _proto.split = function split(vars) {\n    if (this.isSplit) {\n      this.revert();\n    }\n\n    this.vars = vars = vars || this.vars;\n    this._originals.length = this.chars.length = this.words.length = this.lines.length = 0;\n\n    var i = this.elements.length,\n        tag = vars.tag ? vars.tag : vars.span ? \"span\" : \"div\",\n        wordStart = _cssClassFunc(vars.wordsClass, tag),\n        charStart = _cssClassFunc(vars.charsClass, tag),\n        origHeight,\n        origWidth,\n        e; //we split in reversed order so that if/when we position:absolute elements, they don't affect the position of the ones after them in the document flow (shifting them up as they're taken out of the document flow).\n\n\n    while (--i > -1) {\n      e = this.elements[i];\n      this._originals[i] = e.innerHTML;\n      origHeight = e.clientHeight;\n      origWidth = e.clientWidth;\n\n      _split(e, vars, wordStart, charStart);\n\n      _setPositionsAfterSplit(e, vars, this.chars, this.words, this.lines, origWidth, origHeight);\n    }\n\n    this.chars.reverse();\n    this.words.reverse();\n    this.lines.reverse();\n    this.isSplit = true;\n    return this;\n  };\n\n  _proto.revert = function revert() {\n    var originals = this._originals;\n\n    if (!originals) {\n      throw \"revert() call wasn't scoped properly.\";\n    }\n\n    this.elements.forEach(function (e, i) {\n      return e.innerHTML = originals[i];\n    });\n    this.chars = [];\n    this.words = [];\n    this.lines = [];\n    this.isSplit = false;\n    return this;\n  };\n\n  SplitText.create = function create(element, vars) {\n    return new SplitText(element, vars);\n  };\n\n  return SplitText;\n}();\nSplitText.version = \"3.2.6\";\n\n;// CONCATENATED MODULE: ./app/src/js/renderers/renderer.js\nfunction renderer_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { renderer_typeof = function _typeof(obj) { return typeof obj; }; } else { renderer_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return renderer_typeof(obj); }\n\nfunction renderer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction renderer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction renderer_createClass(Constructor, protoProps, staticProps) { if (protoProps) renderer_defineProperties(Constructor.prototype, protoProps); if (staticProps) renderer_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (renderer_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// app\n\n\n // classes\n\n // Highway\n\n // Preload\n\n\n // Utilities\n\n\n // import SuperObserver from '../classes/superObserver';\n// Gsap\n\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z);\n\nvar Renderer = /*#__PURE__*/function (_Highway$Renderer) {\n  _inherits(Renderer, _Highway$Renderer);\n\n  var _super = _createSuper(Renderer);\n\n  function Renderer(properties) {\n    var _this;\n\n    renderer_classCallCheck(this, Renderer);\n\n    _this = _super.call(this, properties); // store\n\n    _this.appStore = appStore; // app references\n\n    _this.appCore = new app_appCore();\n    _this.appUi = new app_appUi(); // Events\n\n    _this.domEvents = new domEvents_default(); // Save slug\n    // if(this.appStore.from === 'home')\n    //     this.appUi.navigation.isLocked = true;\n\n    _this.hash = window.location.hash !== '' ? window.location.hash : null;\n    _this.params = new URLSearchParams(window.location.search);\n    _this.appStore.firstNavigation = _this.appStore.currentSection === null;\n    _this.appStore.current = _this.properties.slug;\n    _this.appStore.currentSub = _this.appStore.current === 'project' ? location.pathname.split('/')[location.pathname.split('/').length - 2] : null;\n    _this.appStore.currentSection = _assertThisInitialized(_this); // if(this.appStore.firstNavigation)\n    //     this.appStore.firstNavigation();\n    // Preloader\n\n    _this.preloadMain = null;\n    _this.preloadSecondary = null;\n    _this.preloadDelay = _this.appStore.isDesktop ? 3 : 1.2; //this.preloadDelay = 0;\n\n    _this.preloadItems = {\n      main: [],\n      // Mandatory items\n      secondary: [] // Secondary items\n\n    }; // Scroll\n\n    _this.superScroller = null;\n    _this.superTrigger = null;\n    if (history.scrollRestoration) history.scrollRestoration = 'manual';\n    return _this;\n  }\n\n  renderer_createClass(Renderer, [{\n    key: \"onEnter\",\n    value: function onEnter() {\n      this.checkElements();\n      this.preselectors();\n      this.selectors();\n      this.events();\n      this.preload();\n\n      if (!this.params.has('trp-edit-translation')) {\n        // Set animations\n        this.setLabels();\n        this.setTitles();\n        this.setDescriptions();\n        this.setImages();\n        this.setLinks();\n        this.setMinilines();\n      }\n\n      this.beforeEnter();\n    }\n  }, {\n    key: \"checkElements\",\n    value: function checkElements() {\n      if (this.appStore.isDesktop) {\n        this.$elementsMobile = document.querySelectorAll('[data-mobile]');\n\n        for (var i = 0; i < this.$elementsMobile.length; i++) {\n          this.$elementsMobile[i].remove();\n        }\n      } else {\n        this.$elementsDesktop = document.querySelectorAll('[data-desktop]');\n\n        for (var _i = 0; _i < this.$elementsDesktop.length; _i++) {\n          this.$elementsDesktop[_i].remove();\n        }\n      }\n    }\n  }, {\n    key: \"preselectors\",\n    value: function preselectors() {\n      // Set reference to current section\n      this.$el = this.wrap.lastElementChild;\n      this.$inner = this.$el.querySelector('[data-scroll-wrapper] .inner');\n      this.$scrollbar = this.$el.querySelector('[data-scroll-wrapper] .scrollbar');\n      this.$overlay = this.$el.querySelector('.overlay');\n    }\n  }, {\n    key: \"selectors\",\n    value: function selectors() {} // eslint-disable-line\n\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"preload\",\n    value: function preload() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: \"onEnterCompleted\",\n    value: function onEnterCompleted() {\n      var _this2 = this;\n\n      // Lazy load\n      this.lazyLoad = new (lazyload_default())(this.lazyLoad, {\n        root: null,\n        rootMargin: window.innerHeight * 0.25 + 'px',\n        threshold: 0\n      }); // this.lazyLoad.loadImages();\n      // If first navigation and need preload\n\n      if (this.preloadItems.main.length > 0 && this.appStore.firstNavigation) {\n        var _index = 0;\n\n        var _preloadOn = new Date().getTime();\n\n        this.preloadMain = preload_it_default()();\n        this.preloadMain.fetch(this.preloadItems.main); // this.preloadMain.onprogress = (event) => { this.appUi.$loaderProgress.innerHTML = event.progress + '%'; };\n\n        this.preloadMain.onprogress = function (event) {\n          var _amount = event.progress / 100;\n\n          console.log(_amount);\n          gsap/* default.to */.ZP.to(_this2.appUi.$loaderProgress.children[0], {\n            scaleX: Math.min(_amount, 0.95),\n            ease: 'expo.inOut',\n            duration: _this2.preloadDelay / (_this2.preloadItems.main.length + 1),\n            delay: _this2.preloadDelay / (_this2.preloadItems.main.length + 1) * _index\n          });\n          _index++;\n        };\n\n        this.preloadMain.oncomplete = function (items) {\n          var _preloadOff = new Date().getTime();\n\n          var _preloadDifference = (_preloadOff - _preloadOn) / 1000;\n\n          var _preloadDelay = Math.max(0, _this2.preloadDelay - _preloadDifference);\n\n          gsap/* default.delayedCall */.ZP.delayedCall(_preloadDelay, function () {\n            gsap/* default.to */.ZP.to(_this2.appUi.$loaderProgress.children[0], {\n              scaleX: 1,\n              ease: 'expo.out',\n              duration: 0.2,\n              onComplete: function onComplete() {\n                _this2.start();\n              }\n            });\n          });\n        };\n      } // if first navigation but dont need preloads\n      else if (this.preloadItems.main.length === 0 && this.appStore.firstNavigation) {\n        // Fake progress\n        var splitProgress = this.appUi.splitInParts(1, 5);\n\n        for (var i = 0; i < splitProgress.length; i++) {\n          var _duration = i === 0 ? this.preloadDelay * splitProgress[0] : this.preloadDelay * splitProgress[i] - this.preloadDelay * splitProgress[i - 1];\n\n          var _delay = i === 0 ? 0 : this.preloadDelay * splitProgress[i - 1];\n\n          gsap/* default.to */.ZP.to(this.appUi.$loaderProgress.children[0], {\n            scaleX: splitProgress[i],\n            ease: 'expo.inOut',\n            duration: _duration,\n            delay: _delay\n          });\n        }\n\n        gsap/* default.delayedCall */.ZP.delayedCall(this.preloadDelay, function () {\n          _this2.start();\n        });\n      } else {\n        this.start();\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this3 = this;\n\n      if (this.appStore.firstNavigation) {\n        // Remove loader\n        this.appUi.hideLoader();\n      }\n\n      this.scroll();\n\n      if (this.appStore.isDesktop) {\n        if (this.appStore.firstNavigation) gsap/* default.fromTo */.ZP.fromTo(this.appStore.currentSection.$el, {\n          y: '-5vw'\n        }, {\n          y: '0vw',\n          duration: 1.8,\n          ease: 'expo.inOut'\n        });else gsap/* default.fromTo */.ZP.fromTo(this.appStore.currentSection.$el, {\n          y: '-5vw'\n        }, {\n          y: '0vw',\n          duration: 1,\n          ease: 'expo.out'\n        });\n      } else {\n        if (this.appStore.firstNavigation) gsap/* default.to */.ZP.to(this.appStore.currentSection.$el, {\n          opacity: 1,\n          duration: 1,\n          ease: 'expo.out',\n          delay: 1.8\n        });\n      }\n\n      if (this.appStore.firstNavigation) this.appCore.navigateStart();\n\n      if (!this.params.has('trp-edit-translation')) {\n        // Init animations\n        this.initLabels();\n        this.initTitles();\n        this.initDescriptions();\n        this.initImages();\n        this.initLinks();\n        this.initMinilines();\n      }\n\n      this.initInfo();\n      this.preenter();\n      gsap/* default.delayedCall */.ZP.delayedCall(this.appStore.firstNavigation ? 1.8 : 1, function () {\n        _this3.enter();\n\n        if (_this3.superScroller) _this3.superScroller._scroll.enable = true;\n        if (_this3.hash) _this3.scrollTo(_this3.hash);\n\n        _this3.beforeResize(window.innerWidth, window.innerHeight);\n      });\n\n      if (this.preloadItems.secondary.length > 0) {\n        this.preloadSecondary = preload_it_default()();\n        this.preloadSecondary.fetch(this.preloadItems.secondary);\n      }\n    }\n  }, {\n    key: \"scroll\",\n    value: function scroll() {\n      var _this4 = this;\n\n      if (this.$inner) {\n        if (this.appStore.isDesktop) {\n          // Superscroller\n          this.superScroller = new _default({\n            enable: false,\n            scroll: true,\n            scrollTarget: this.$inner,\n            bar: true,\n            barTarget: this.$scrollbar.children[0],\n            onRaf: function onRaf(scroll, percent) {\n              _this4.requestAnimationFrame();\n\n              if (_this4.appStore.current === 'home') {\n                if (_this4.appUi.$headerSubmenu) gsap/* default.to */.ZP.to(_this4.appUi.$headerSubmenu, {\n                  y: scroll.y * 2,\n                  ease: 'expo.out'\n                });\n              } else {\n                if (_this4.appUi.$logo) gsap/* default.to */.ZP.to(_this4.appUi.$logo, {\n                  y: scroll.y * 2,\n                  ease: 'expo.out'\n                });\n              }\n\n              if (_this4.appUi.$headerTrigger && _this4.appStore.current === 'home') {\n                if (scroll.y <= -window.innerHeight) gsap/* default.to */.ZP.to(_this4.appUi.$headerTrigger, {\n                  opacity: 1,\n                  ease: 'expo.out'\n                });else gsap/* default.to */.ZP.to(_this4.appUi.$headerTrigger, {\n                  opacity: 0.0001,\n                  pointerEvents: 'initial',\n                  ease: 'expo.out'\n                });\n              }\n\n              if (_this4.superTrigger) _this4.superTrigger.update();\n            }\n          }); // Scroll Trigger\n\n          this.superTrigger = ScrollTrigger/* default */.Z;\n          this.superTrigger.defaults({\n            scroller: this.$inner\n          });\n          this.superTrigger.scrollerProxy(this.$inner, {\n            scrollTop: function scrollTop(value) {\n              return -_this4.superScroller._scroll.livePosition.y;\n            },\n            getBoundingClientRect: function getBoundingClientRect() {\n              return {\n                top: 0,\n                left: 0,\n                width: window.innerWidth,\n                height: window.innerHeight\n              };\n            }\n          });\n          this.superTrigger.refresh();\n        } else {\n          // this.superTrigger = ScrollTrigger;\n          this.superTrigger = ScrollTrigger/* default */.Z;\n          this.superTrigger.refresh();\n          gsap/* default.ticker.add */.ZP.ticker.add(function () {\n            _this4.requestAnimationFrame();\n          });\n          this.superTriggerTl = gsap/* default.timeline */.ZP.timeline({\n            defaults: {\n              ease: 'none'\n            },\n            scrollTrigger: {\n              trigger: this.$app,\n              scrub: true,\n              start: 'top top',\n              end: 'bottom bottom',\n              onUpdate: function onUpdate(self) {\n                _this4.superScrollerMobile = self.progress * self.end; // if(this.appUi.$header)\n                //     gsap.to(this.appUi.$header, { y: -(self.progress * this.$inner.getBoundingClientRect().height) });\n                // if(this.appUi.$logo)\n                //     gsap.to(this.appUi.$logo, { y: -(self.progress * this.$inner.getBoundingClientRect().height) / 2 });\n                // if(this.appUi.$headerTriggerText && !this.appStore.isDesktop)\n                //     gsap.to(this.appUi.$headerTriggerText, { y: -(self.progress * this.$inner.getBoundingClientRect().height) / 2 });\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"preenter\",\n    value: function preenter() {}\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(hash) {\n      var $target = this.$el.querySelector(hash);\n\n      if ($target) {\n        if (this.appStore.isDesktop) {\n          var offset = $target.getBoundingClientRect().y + this.superScroller._scroll.livePosition.y;\n\n          this.superScroller.scrollAnimate(offset, 2, 'power4.inOut');\n        } else {\n          var _offset = $target.getBoundingClientRect().y + document.documentElement.scrollTop;\n\n          gsap/* default.to */.ZP.to(document.documentElement, {\n            scrollTop: _offset,\n            duration: 2,\n            ease: 'power4.inOut'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"requestAnimationFrame\",\n    value: function requestAnimationFrame() {\n      if (this.superTrigger) this.superTrigger.update();\n    }\n  }, {\n    key: \"setLabels\",\n    value: function setLabels() {\n      if (this.appStore.isDesktop) this.$labels = this.$el.querySelectorAll('.label:not(.promotion .label)');else this.$labels = this.$el.querySelectorAll('.label');\n\n      if (this.$labels) {\n        for (var i = 0; i < this.$labels.length; i++) {\n          new SplitText(this.$labels[i], {\n            type: 'lines, words',\n            linesClass: 'line line--++',\n            wordsClass: 'word word--++',\n            charsClass: 'char char--++'\n          }); // eslint-disable-line\n\n          this.$labels[i].classList.add('split');\n          var lines = this.$labels[i].querySelectorAll('.line');\n\n          for (var j = 0; j < lines.length; j++) {\n            var words = lines[j].querySelectorAll(':scope > .word,:scope > strong');\n\n            for (var k = 0; k < words.length; k++) {\n              gsap/* default.set */.ZP.set(words[k], {\n                y: '100%'\n              });\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setTitles\",\n    value: function setTitles() {\n      this.$titles = this.$el.querySelectorAll('.title:not(.post .title)');\n\n      if (this.$titles) {\n        for (var i = 0; i < this.$titles.length; i++) {\n          new SplitText(this.$titles[i], {\n            type: 'lines, words',\n            linesClass: 'line line--++',\n            wordsClass: 'word word--++',\n            charsClass: 'char char--++'\n          }); // eslint-disable-line\n\n          this.$titles[i].classList.add('split');\n          var lines = this.$titles[i].querySelectorAll('.line');\n\n          for (var j = 0; j < lines.length; j++) {\n            var words = lines[j].querySelectorAll(':scope > .word,:scope > strong');\n\n            for (var k = 0; k < words.length; k++) {\n              // if(words[k].tagName === 'DIV')\n              //     //gsap.set(words[k], { opacity: 0.0001 });\n              // else\n              if (words[k].tagName === 'STRONG') words[k].insertAdjacentHTML('beforeend', '<span class=\"mask\"></span>');\n            }\n          }\n        }\n      }\n\n      this.$titlesInfo = this.$el.querySelectorAll('.info .title');\n\n      if (this.$titlesInfo) {\n        for (var _i2 = 0; _i2 < this.$titlesInfo.length; _i2++) {\n          new SplitText(this.$titlesInfo[_i2], {\n            type: 'lines, words',\n            linesClass: 'line line--++',\n            wordsClass: 'word word--++',\n            charsClass: 'char char--++'\n          }); // eslint-disable-line\n\n          this.$titlesInfo[_i2].classList.add('split');\n\n          var _lines = this.$titlesInfo[_i2].querySelectorAll('.line');\n\n          for (var _j = 0; _j < _lines.length; _j++) {\n            var _words = _lines[_j].querySelectorAll(':scope > .word,:scope > strong');\n\n            for (var _k = 0; _k < _words.length; _k++) {\n              gsap/* default.set */.ZP.set(_words[_k], {\n                y: '100%'\n              });\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setDescriptions\",\n    value: function setDescriptions() {\n      this.$descriptions = this.$el.querySelectorAll('.wysiwyg:not(.principles .principles__item .info .wysiwyg, .features .features__item .info .wysiwyg)');\n\n      if (this.$descriptions) {\n        for (var i = 0; i < this.$descriptions.length; i++) {\n          gsap/* default.set */.ZP.set(this.$descriptions[i], {\n            y: this.appStore.isDesktop ? '5vw' : '20px',\n            scaleY: 1.1,\n            opacity: 0.0001,\n            willChange: 'transition, opacity'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setImages\",\n    value: function setImages() {\n      this.$imagesMask = this.$el.querySelectorAll('.image--mask');\n\n      for (var i = 0; i < this.$imagesMask.length; i++) {\n        gsap/* default.set */.ZP.set(this.$imagesMask[i], {\n          y: '-102%'\n        });\n        gsap/* default.set */.ZP.set(this.$imagesMask[i].children[0], {\n          y: '102%'\n        });\n      }\n\n      this.$imagesAppear = this.$el.querySelectorAll('.image--appear');\n\n      for (var _i3 = 0; _i3 < this.$imagesAppear.length; _i3++) {\n        gsap/* default.set */.ZP.set(this.$imagesAppear[_i3], {\n          y: '5vw'\n        });\n        gsap/* default.set */.ZP.set(this.$imagesAppear[_i3].children[0], {\n          scale: 1.2,\n          opacity: 0.0001\n        });\n      }\n    }\n  }, {\n    key: \"setLinks\",\n    value: function setLinks() {\n      var _this5 = this;\n\n      this.$links = this.$el.querySelectorAll('.link');\n\n      if (this.$links) {\n        for (var i = 0; i < this.$links.length; i++) {\n          gsap/* default.set */.ZP.set(this.$links[i], {\n            y: this.appStore.isDesktop ? '10vw' : '40px',\n            opacity: 0.0001\n          });\n          gsap/* default.set */.ZP.set(this.$links[i].children[0], {\n            opacity: 0.0001\n          });\n          gsap/* default.set */.ZP.set(this.$links[i].querySelector('svg'), {\n            opacity: 0.0001,\n            rotation: '450deg'\n          });\n          gsap/* default.set */.ZP.set(this.$links[i].querySelector('svg circle'), {\n            strokeDashoffset: '1181.24px'\n          });\n          this.domEvents.add(this.$links[i], 'mouseenter', function (e, a, el) {\n            _this5.enterLink(e, a, el);\n          });\n          this.domEvents.add(this.$links[i], 'mouseleave', function (e, a, el) {\n            _this5.leaveLink(e, a, el);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setMinilines\",\n    value: function setMinilines() {\n      this.$minilines = this.$el.querySelectorAll('.miniline');\n\n      if (this.$minilines) {\n        for (var i = 0; i < this.$minilines.length; i++) {\n          gsap/* default.set */.ZP.set(this.$minilines[i], {\n            scaleX: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"enterLink\",\n    value: function enterLink(e, a, el) {\n      // gsap.to(el.children[1], { x: '-1rem', ease: 'expo.out', duration: 0.8 });\n      gsap/* default.killTweensOf */.ZP.killTweensOf([el.querySelector('svg'), el.querySelector('svg circle')]);\n      gsap/* default.to */.ZP.to(el.querySelector('svg'), {\n        rotation: '450deg',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('svg circle'), {\n        strokeDashoffset: '1181.24px',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n    }\n  }, {\n    key: \"leaveLink\",\n    value: function leaveLink(e, a, el) {\n      // gsap.to(el.children[1], { x: '0', ease: 'expo.out', duration: 0.8 });\n      gsap/* default.killTweensOf */.ZP.killTweensOf([el.querySelector('svg'), el.querySelector('svg circle')]);\n      gsap/* default.to */.ZP.to(el.querySelector('svg'), {\n        rotation: '0deg',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('svg circle'), {\n        strokeDashoffset: '0px',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n    }\n  }, {\n    key: \"initLabels\",\n    value: function initLabels() {\n      var _this6 = this;\n\n      if (this.$labels) {\n        var _loop = function _loop(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this6.$labels[i],\n            // start: 'top 80%',\n            onEnter: function onEnter() {\n              var lines = _this6.$labels[i].querySelectorAll('.line');\n\n              for (var j = 0; j < lines.length; j++) {\n                var words = lines[j].querySelectorAll(':scope > .word, :scope > strong');\n\n                for (var k = 0; k < words.length; k++) {\n                  gsap/* default.to */.ZP.to(words[k], {\n                    y: 0,\n                    ease: 'expo.out',\n                    duration: 1.4,\n                    delay: 0.1 + k * 0.05\n                  });\n                }\n              }\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$labels.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: \"initTitles\",\n    value: function initTitles() {\n      var _this7 = this;\n\n      if (this.$titles) {\n        var _loop2 = function _loop2(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this7.$titles[i],\n            // start: 'top 80%',\n            onEnter: function onEnter() {\n              var lines = _this7.$titles[i].querySelectorAll('.line');\n\n              for (var j = 0; j < lines.length; j++) {\n                var words = lines[j].querySelectorAll(':scope > .word, :scope > strong');\n\n                for (var k = 0; k < words.length; k++) {\n                  // if(words[k].tagName === 'DIV')\n                  //     gsap.to(words[k], { opacity: 1, ease: 'power2.out', delay: (j * 0.1) + (k * 0.05) });\n                  // else\n                  if (words[k].tagName === 'STRONG') gsap/* default.to */.ZP.to(words[k].querySelector('.mask'), {\n                    scaleX: 0,\n                    ease: 'expo.inOut',\n                    duration: 1.2,\n                    delay: j * 0.1 + k * 0.05\n                  });\n                }\n              }\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$titles.length; i++) {\n          _loop2(i);\n        }\n      }\n\n      if (this.$titlesInfo) {\n        var _loop3 = function _loop3(_i4) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this7.$titlesInfo[_i4],\n            // start: 'top 80%',\n            onEnter: function onEnter() {\n              var lines = _this7.$titlesInfo[_i4].querySelectorAll('.line');\n\n              for (var j = 0; j < lines.length; j++) {\n                var words = lines[j].querySelectorAll(':scope > .word, :scope > strong');\n\n                for (var k = 0; k < words.length; k++) {\n                  gsap/* default.to */.ZP.to(words[k], {\n                    y: 0,\n                    ease: 'expo.out',\n                    duration: 1.4,\n                    delay: j * 0.1 + k * 0.05\n                  });\n                }\n              }\n            }\n          });\n        };\n\n        for (var _i4 = 0; _i4 < this.$titlesInfo.length; _i4++) {\n          _loop3(_i4);\n        }\n      }\n    }\n  }, {\n    key: \"initDescriptions\",\n    value: function initDescriptions() {\n      var _this8 = this;\n\n      if (this.$descriptions) {\n        var _loop4 = function _loop4(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this8.$descriptions[i],\n            start: _this8.appStore.isDesktop ? 'top bottom' : 'top 80%',\n            once: true,\n            onEnter: function onEnter() {\n              gsap/* default.to */.ZP.to(_this8.$descriptions[i], {\n                y: '0',\n                scaleY: 1,\n                opacity: 1,\n                duration: 2,\n                ease: 'expo.out',\n                clearProps: 'all'\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$descriptions.length; i++) {\n          _loop4(i);\n        }\n      }\n    }\n  }, {\n    key: \"initImages\",\n    value: function initImages() {\n      var _this9 = this;\n\n      var _loop5 = function _loop5(i) {\n        ScrollTrigger/* default.create */.Z.create({\n          trigger: _this9.$imagesMask[i],\n          start: 'top 80%',\n          once: true,\n          onEnter: function onEnter() {\n            gsap/* default.to */.ZP.to(_this9.$imagesMask[i], {\n              y: '0%',\n              duration: 1.8,\n              ease: 'expo.inOut',\n              delay: 0\n            });\n            gsap/* default.to */.ZP.to(_this9.$imagesMask[i].children[0], {\n              y: '0%',\n              scale: 1,\n              duration: 1.8,\n              ease: 'expo.inOut',\n              delay: 0\n            });\n          }\n        });\n      };\n\n      for (var i = 0; i < this.$imagesMask.length; i++) {\n        _loop5(i);\n      }\n\n      var _loop6 = function _loop6(_i5) {\n        ScrollTrigger/* default.create */.Z.create({\n          trigger: _this9.$imagesAppear[_i5],\n          start: 'top bottom',\n          once: true,\n          onEnter: function onEnter() {\n            gsap/* default.to */.ZP.to(_this9.$imagesAppear[_i5], {\n              y: '0%',\n              duration: 2,\n              ease: 'expo.out',\n              delay: 0\n            });\n            gsap/* default.to */.ZP.to(_this9.$imagesAppear[_i5].children[0], {\n              scale: 1,\n              opacity: 1,\n              duration: 1.2,\n              ease: 'expo.out',\n              delay: 0\n            });\n          }\n        });\n      };\n\n      for (var _i5 = 0; _i5 < this.$imagesAppear.length; _i5++) {\n        _loop6(_i5);\n      }\n    }\n  }, {\n    key: \"initLinks\",\n    value: function initLinks() {\n      var _this10 = this;\n\n      if (this.$links) {\n        var _loop7 = function _loop7(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this10.$links[i],\n            start: 'top bottom',\n            once: true,\n            onEnter: function onEnter() {\n              gsap/* default.to */.ZP.to(_this10.$links[i], {\n                y: 0,\n                opacity: 1,\n                duration: 2,\n                ease: 'expo.out'\n              });\n              gsap/* default.to */.ZP.to(_this10.$links[i].children[0], {\n                opacity: 1,\n                duration: 2,\n                ease: 'expo.out'\n              });\n              gsap/* default.to */.ZP.to(_this10.$links[i].querySelector('svg'), {\n                opacity: 1,\n                rotation: '0',\n                duration: 2,\n                ease: 'expo.out'\n              });\n              gsap/* default.to */.ZP.to(_this10.$links[i].querySelector('svg circle'), {\n                strokeDashoffset: '0px',\n                duration: 2,\n                ease: 'expo.out'\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$links.length; i++) {\n          _loop7(i);\n        }\n      }\n    }\n  }, {\n    key: \"initMinilines\",\n    value: function initMinilines() {\n      var _this11 = this;\n\n      if (this.$minilines) {\n        var _loop8 = function _loop8(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this11.$minilines[i],\n            start: 'top 80%',\n            once: true,\n            onEnter: function onEnter() {\n              gsap/* default.to */.ZP.to(_this11.$minilines[i], {\n                scaleX: 1,\n                duration: 1,\n                ease: 'expo.out'\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$minilines.length; i++) {\n          _loop8(i);\n        }\n      }\n    }\n  }, {\n    key: \"initInfo\",\n    value: function initInfo() {\n      var _this12 = this;\n\n      // Check infotrigger sidebar element\n      this.$infotrigger = this.$el.querySelector('.infotrigger');\n\n      if (this.$infotrigger) {\n        gsap/* default.to */.ZP.to(this.$infotrigger, {\n          opacity: 1,\n          ease: 'power2.out',\n          duration: 0.8,\n          delay: 1\n        });\n        this.domEvents.add(this.$infotrigger, 'click', function (e, a, el) {\n          _this12.appUi.openInfo(e);\n        });\n      } // Check infotrigger button elements\n\n\n      this.$buttontriggers = this.$el.querySelectorAll('.button--infotrigger');\n\n      for (var i = 0; i < this.$buttontriggers.length; i++) {\n        this.domEvents.add(this.$buttontriggers[i], 'click', function (e, a, el) {\n          _this12.appUi.openInfo(e);\n        });\n      }\n\n      this.appUi.info.isOpen = false;\n    }\n  }, {\n    key: \"beforeResize\",\n    value: function beforeResize(width, height) {\n      if (this.superScroller) this.superScroller.resize();\n      this.resize(width, height);\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {} // eslint-disable-line\n\n  }, {\n    key: \"enter\",\n    value: function enter() {} // eslint-disable-line\n\n  }, {\n    key: \"onLeave\",\n    value: function onLeave() {\n      this.leave();\n    }\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      if (this.domEvents) this.domEvents.destroy();\n      if (this.superScroller) this.superScroller.destroy();\n      if (this.superDragger) this.superDragger.destroy();\n    }\n  }, {\n    key: \"onLeaveCompleted\",\n    value: function onLeaveCompleted() {\n      this.afterLeave();\n    }\n  }, {\n    key: \"afterLeave\",\n    value: function afterLeave() {} // eslint-disable-line\n\n  }]);\n\n  return Renderer;\n}(highway_module/* default.Renderer */.Z.Renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const renderer = (Renderer);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererDefault.js\nfunction rendererDefault_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererDefault_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererDefault_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererDefault_typeof(obj); }\n\nfunction rendererDefault_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererDefault_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererDefault_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererDefault_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererDefault_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererDefault_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererDefault_setPrototypeOf(subClass, superClass); }\n\nfunction rendererDefault_setPrototypeOf(o, p) { rendererDefault_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererDefault_setPrototypeOf(o, p); }\n\nfunction rendererDefault_createSuper(Derived) { var hasNativeReflectConstruct = rendererDefault_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererDefault_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererDefault_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererDefault_possibleConstructorReturn(this, result); }; }\n\nfunction rendererDefault_possibleConstructorReturn(self, call) { if (call && (rendererDefault_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererDefault_assertThisInitialized(self); }\n\nfunction rendererDefault_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererDefault_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererDefault_getPrototypeOf(o) { rendererDefault_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererDefault_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n // Other\n// import Slider from '../classes/slider';\n// import SplitText from '../classes/splitText';\n\nvar RendererDefault = /*#__PURE__*/function (_Renderer) {\n  rendererDefault_inherits(RendererDefault, _Renderer);\n\n  var _super = rendererDefault_createSuper(RendererDefault);\n\n  function RendererDefault() {\n    rendererDefault_classCallCheck(this, RendererDefault);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererDefault_createClass(RendererDefault, [{\n    key: \"selectors\",\n    value: function selectors() {} // eslint-disable-line\n\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: \"enter\",\n    value: function enter() {} // eslint-disable-line\n\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererDefault;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererDefault = (RendererDefault);\n;// CONCATENATED MODULE: ./app/src/js/classes/superDragger.js\nfunction superDragger_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction superDragger_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction superDragger_createClass(Constructor, protoProps, staticProps) { if (protoProps) superDragger_defineProperties(Constructor.prototype, protoProps); if (staticProps) superDragger_defineProperties(Constructor, staticProps); return Constructor; }\n\n //empty function\n\nvar superDragger_noop = function noop() {}; //eslint-disable-line\n\n\nvar lerp = function lerp(a, b, n) {\n  return (1 - n) * a + n * b;\n};\n\nvar superDragger_default = /*#__PURE__*/function () {\n  function _default(options) {\n    var _this = this;\n\n    superDragger_classCallCheck(this, _default);\n\n    //hook functions\n    this._onRaf = options.onRaf || superDragger_noop;\n    this._onMouseEnter = options.onMouseEnter || superDragger_noop;\n    this._onMouseLeave = options.onMouseLeave || superDragger_noop;\n    this._onDragStart = options.onDragStart || superDragger_noop;\n    this._onDragMove = options.onDragMove || superDragger_noop;\n    this._onDragEnd = options.onDragEnd || superDragger_noop;\n    this._onSnap = options.onSnap || superDragger_noop;\n    this._onSnapLimits = options._onSnapLimits || superDragger_noop;\n    this.rAF = undefined;\n    this._drag = {\n      enable: typeof options.enable !== 'undefined' ? options.enable : true,\n      el: options.el,\n      elClickables: options.elClickables || [],\n      inner: options.inner || options.el.children[0],\n      ease: options.ease || 0.1,\n      speed: options.speed || 2,\n      dragging: false,\n      width: 0,\n      height: 0,\n      velocity: 0,\n      direction: 0,\n      on: {\n        x: 0,\n        y: 0\n      },\n      off: {\n        x: 0,\n        y: 0\n      },\n      offset: {\n        x: 0,\n        y: 0\n      },\n      movement: {\n        x: 0,\n        y: 0\n      },\n      position: {\n        x: 0,\n        y: 0\n      },\n      lastPosition: {\n        x: 0,\n        y: 0\n      },\n      livePosition: {\n        x: 0,\n        y: 0\n      },\n      min: {\n        x: 0,\n        y: 0\n      },\n      max: {\n        x: 0,\n        y: 0\n      },\n      total: 0,\n      snap: typeof options.snap !== 'undefined' ? options.snap : false,\n      snapPositions: [],\n      snapLimits: [],\n      snapAnimating: false,\n      inertia: typeof options.inertia !== 'undefined' ? options.inertia : 0.4,\n      elasticity: typeof options.elasticity !== 'undefined' ? options.elasticity : false,\n      elasticityType: typeof options.elasticityType !== 'undefined' ? options.elasticityType : 1\n    };\n    if (this._drag.snap && this._drag.inertia === 0) throw Error('If snap is true, inertia should be great than 0');\n\n    this.raf = function () {\n      _this._onRaf(_this._drag); //Move inner\n\n\n      _this._drag.livePosition.x = lerp(_this._drag.livePosition.x, _this._drag.position.x, _this._drag.ease);\n      _this.$dragInner.style.transform = \"translate3d(\".concat(_this._drag.livePosition.x, \"px, 0, 0)\");\n\n      if (_this._drag.elasticity) {\n        //Check velocity\n        var movementX = Math.abs(_this._drag.livePosition.x - _this._drag.position.x);\n        var movement = Math.sqrt(movementX * movementX + movementX * movementX);\n        var velocity = movement / 10;\n        _this._drag.velocity = lerp(_this._drag.velocity, velocity, _this._drag.ease * 2); //Do elasticity\n\n        var elasticity = _this._drag.velocity * -_this._drag.direction;\n\n        for (var i = 0; i < _this.$dragItems.length; i++) {\n          if (_this._drag.elasticityType === 1 ? _this._drag.direction < 0 : _this._drag.direction > 0) _this.$dragItems[i].style.transform = \"translate3d(\".concat(i * elasticity, \"px, 0, 0)\");else _this.$dragItems[i].style.transform = \"translate3d(\".concat((_this.$dragItems.length - i) * elasticity, \"px, 0, 0)\");\n        }\n      }\n    };\n\n    this.selectors();\n    this.init();\n  }\n\n  superDragger_createClass(_default, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$drag = this._drag.el;\n      this.$dragInner = this._drag.inner;\n      this.$dragItems = this._drag.inner.children;\n      this.$dragClickables = this._drag.elClickables;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      this.setBounds(); //add requestAnimationFrame\n\n      gsap/* gsap.ticker.add */.p8.ticker.add(this.raf); //add events\n      //this.$dragInner.addEventListener('click', (e) => { this.click(e); });\n\n      for (var i = 0; i < this.$dragClickables.length; i++) {\n        this.$dragClickables[i].addEventListener('click', function (e) {\n          _this2.click(e);\n        }, true);\n      }\n\n      this.$dragInner.addEventListener('mousedown', function (e) {\n        _this2.on(e);\n      });\n      this.$drag.addEventListener('mouseenter', function (e) {\n        _this2.enter(e);\n      });\n      this.$drag.addEventListener('mouseleave', function (e) {\n        _this2.leave(e);\n      });\n      document.addEventListener('mousemove', function (e) {\n        _this2.move(e);\n      });\n      document.addEventListener('mouseup', function (e) {\n        _this2.off(e);\n      });\n      document.addEventListener('resize', function (e) {\n        _this2.resize(e);\n      });\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds() {\n      var dragBounding = this.$drag.getBoundingClientRect();\n      var dragInnerBounding = this.$dragInner.getBoundingClientRect();\n      this._drag.width = dragBounding.width;\n      this._drag.height = dragBounding.height;\n      this._drag.min.x = dragBounding.width - dragInnerBounding.width;\n      this._drag.max.x = 0;\n      this._drag.offset.x = dragBounding.x; //Check limits for inertia\n\n      this._drag.snapLimits.push(0);\n\n      this._drag.snapLimits.push(dragBounding.width - dragInnerBounding.width);\n\n      if (this._drag.snap) {\n        for (var i = 0; i < this.$dragItems.length; i++) {\n          var bounds = this.$dragItems[i].getBoundingClientRect();\n          var snap = bounds.x - this._drag.offset.x;\n\n          this._drag.snapPositions.push(-snap);\n        }\n      }\n    }\n  }, {\n    key: \"click\",\n    value: function click(e) {\n      if (Math.abs(this._drag.on.x - this._drag.off.x) > 10) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this._onMouseEnter();\n    }\n  }, {\n    key: \"on\",\n    value: function on(e) {\n      var _this3 = this;\n\n      this._drag.dragging = true;\n      this._drag.on.x = e.clientX;\n      this.onTimeout = setTimeout(function () {\n        _this3._onDragStart();\n\n        _this3.$drag.classList.add('is--dragging');\n      }, 120);\n    }\n  }, {\n    key: \"move\",\n    value: function move(e) {\n      e.preventDefault();\n      if (!this._drag.dragging || !this._drag.enable) return;\n\n      this._onDragMove();\n\n      this._drag.movement = e.clientX - this._drag.on.x;\n      this._drag.direction = Math.sign(e.clientX - this._drag.on.x);\n      this._drag.position.x = this._drag.lastPosition.x + e.clientX - this._drag.on.x;\n      this._drag.position.x = Math.min(this._drag.max.x + this._drag.width / 4 * this._drag.inertia, Math.max(this._drag.position.x, this._drag.min.x - this._drag.width / 4 * this._drag.inertia));\n    }\n  }, {\n    key: \"off\",\n    value: function off(e) {\n      clearTimeout(this.onTimeout);\n      if (!this._drag.dragging) return;\n      this._drag.dragging = false;\n      this._drag.off.x = e.clientX;\n      this._drag.lastPosition.x = this._drag.position.x;\n\n      this._onDragEnd();\n\n      this.$drag.classList.remove('is--dragging');\n\n      if (this._drag.position.x > 0 || this._drag.position.x < this._drag.min.x) {\n        this.snapLimits();\n      } else {\n        if (this._drag.snap) this.snap();\n      }\n    }\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      this._onMouseLeave();\n    }\n  }, {\n    key: \"snap\",\n    value: function snap() {\n      //this._drag.snapAnimating = true;\n      var goal = this._drag.position.x;\n\n      var closest = this._drag.snapPositions.reduce(function (prev, curr) {\n        return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\n      });\n\n      this._drag.position.x = closest;\n      this._drag.lastPosition.x = closest;\n\n      this._onSnap();\n    }\n  }, {\n    key: \"snapLimits\",\n    value: function snapLimits() {\n      //this._drag.snapAnimating = true;\n      var goal = this._drag.position.x;\n\n      var closest = this._drag.snapLimits.reduce(function (prev, curr) {\n        return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\n      });\n\n      this._drag.position.x = closest;\n      this._drag.lastPosition.x = closest;\n\n      this._onSnapLimits();\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(value1, value2, amount) {\n      amount = amount < 0 ? 0 : amount;\n      amount = amount > 1 ? 1 : amount;\n      return value1 + (value2 - value1) * amount;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      this.setBounds();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      //empty options\n      this._drag = {}; //remove requestAnimationFrame\n\n      gsap/* gsap.ticker.remove */.p8.ticker.remove(this.raf); //Remove events\n\n      document.removeEventListener('mousedown', this.on);\n      document.removeEventListener('resize', this.resize);\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/gsap/Draggable.js + 1 modules\nvar Draggable = __webpack_require__(354);\n;// CONCATENATED MODULE: ./app/src/js/utils/VelocityTracker.js\nfunction VelocityTracker_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction VelocityTracker_createClass(Constructor, protoProps, staticProps) { if (protoProps) VelocityTracker_defineProperties(Constructor.prototype, protoProps); if (staticProps) VelocityTracker_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction VelocityTracker_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * VelocityTracker: 3.6.1\n * https://greensock.com\n *\n * Copyright 2008-2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar VelocityTracker_gsap,\n    VelocityTracker_coreInitted,\n    VelocityTracker_toArray,\n    _getUnit,\n    _first,\n    _ticker,\n    _time1,\n    _time2,\n    _getCache,\n    _getGSAP = function _getGSAP() {\n  return VelocityTracker_gsap || typeof window !== \"undefined\" && (VelocityTracker_gsap = window.gsap);\n},\n    _lookup = {},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _getID = function _getID(target) {\n  return _getCache(target).id;\n},\n    _getByTarget = function _getByTarget(target) {\n  return _lookup[_getID(typeof target === \"string\" ? VelocityTracker_toArray(target)[0] : target)];\n},\n    _onTick = function _onTick(time) {\n  var pt = _first,\n      val; //if the frame rate is too high, we won't be able to track the velocity as well, so only update the values about 20 times per second\n\n  if (time - _time1 >= 0.05) {\n    _time2 = _time1;\n    _time1 = time;\n\n    while (pt) {\n      val = pt.g(pt.t, pt.p);\n\n      if (val !== pt.v1 || time - pt.t1 > 0.2) {\n        //use a threshold of 0.2 seconds for zeroing-out velocity. If we only use 0.05 and things update slightly slower, like some Android devices dispatch \"touchmove\" events sluggishly so 2 or 3 ticks of the gsap.ticker may elapse inbetween, thus it may appear like the object is not moving but it actually is but it's not updating as frequently. A threshold of 0.2 seconds seems to be a good balance. We want to update things frequently (0.05 seconds) when they're moving so that we can respond to fast motions accurately, but we want to be more resistant to go back to a zero velocity.\n        pt.v2 = pt.v1;\n        pt.v1 = val;\n        pt.t2 = pt.t1;\n        pt.t1 = time;\n      }\n\n      pt = pt._next;\n    }\n  }\n},\n    _types = {\n  deg: 360,\n  rad: Math.PI * 2\n},\n    VelocityTracker_initCore = function _initCore() {\n  VelocityTracker_gsap = _getGSAP();\n\n  if (VelocityTracker_gsap) {\n    VelocityTracker_toArray = VelocityTracker_gsap.utils.toArray;\n    _getUnit = VelocityTracker_gsap.utils.getUnit;\n    _getCache = VelocityTracker_gsap.core.getCache;\n    _ticker = VelocityTracker_gsap.ticker;\n    VelocityTracker_coreInitted = 1;\n  }\n};\n\nvar PropTracker = function PropTracker(target, property, type, next) {\n  VelocityTracker_classCallCheck(this, PropTracker);\n\n  this.t = target;\n  this.p = property;\n  this.g = target._gsap.get;\n  this.rCap = _types[type || _getUnit(this.g(target, property))]; //rotational cap (for degrees, \"deg\", it's 360 and for radians, \"rad\", it's Math.PI * 2)\n\n  this.v1 = this.v2 = 0;\n  this.t1 = this.t2 = _ticker.time;\n\n  if (next) {\n    this._next = next;\n    next._prev = this;\n  }\n};\n\nvar VelocityTracker = /*#__PURE__*/function () {\n  function VelocityTracker(target, property) {\n    VelocityTracker_classCallCheck(this, VelocityTracker);\n\n    if (!VelocityTracker_coreInitted) {\n      VelocityTracker_initCore();\n    }\n\n    this.target = VelocityTracker_toArray(target)[0];\n    _lookup[_getID(this.target)] = this;\n    this._props = {};\n    property && this.add(property);\n  }\n\n  VelocityTracker_createClass(VelocityTracker, [{\n    key: \"get\",\n    value: function get(property, skipRecentTick) {\n      var pt = this._props[property] || console.warn(\"Not tracking \" + property + \" velocity.\"),\n          val,\n          dif,\n          rotationCap;\n      val = parseFloat(skipRecentTick ? pt.v1 : pt.g(pt.t, pt.p));\n      dif = val - parseFloat(pt.v2);\n      rotationCap = pt.rCap;\n\n      if (rotationCap) {\n        //rotational values need special interpretation so that if, for example, they go from 179 to -178 degrees it is interpreted as a change of 3 instead of -357.\n        dif = dif % rotationCap;\n\n        if (dif !== dif % (rotationCap / 2)) {\n          dif = dif < 0 ? dif + rotationCap : dif - rotationCap;\n        }\n      }\n\n      return _round(dif / ((skipRecentTick ? pt.t1 : _ticker.time) - pt.t2));\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var result = {},\n          props = this._props,\n          p;\n\n      for (p in props) {\n        result[p] = this.get(p);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"isTracking\",\n    value: function isTracking(property) {\n      return property in this._props;\n    }\n  }, {\n    key: \"add\",\n    value: function add(property, type) {\n      if (!(property in this._props)) {\n        if (!_first) {\n          _ticker.add(_onTick);\n\n          _time1 = _time2 = _ticker.time;\n        }\n\n        _first = this._props[property] = new PropTracker(this.target, property, type, _first);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(property) {\n      var pt = this._props[property],\n          prev,\n          next;\n\n      if (pt) {\n        prev = pt._prev;\n        next = pt._next;\n\n        if (prev) {\n          prev._next = next;\n        }\n\n        if (next) {\n          next._prev = prev;\n        } else if (_first === pt) {\n          _ticker.remove(_onTick);\n\n          _first = 0;\n        }\n\n        delete this._props[property];\n      }\n    }\n  }, {\n    key: \"kill\",\n    value: function kill(shallow) {\n      for (var p in this._props) {\n        this.remove(p);\n      }\n\n      if (!shallow) {\n        delete _lookup[_getID(this.target)];\n      }\n    }\n  }], [{\n    key: \"register\",\n    value: function register(core) {\n      VelocityTracker_gsap = core;\n\n      VelocityTracker_initCore();\n    }\n  }, {\n    key: \"track\",\n    value: function track(targets, properties, types) {\n      if (!VelocityTracker_coreInitted) {\n        VelocityTracker_initCore();\n      }\n\n      var result = [],\n          targs = VelocityTracker_toArray(targets),\n          a = properties.split(\",\"),\n          t = (types || \"\").split(\",\"),\n          i = targs.length,\n          tracker,\n          j;\n\n      while (i--) {\n        tracker = _getByTarget(targs[i]) || new VelocityTracker(targs[i]);\n        j = a.length;\n\n        while (j--) {\n          tracker.add(a[j], t[j] || t[0]);\n        }\n\n        result.push(tracker);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"untrack\",\n    value: function untrack(targets, properties) {\n      var props = (properties || \"\").split(\",\");\n\n      VelocityTracker_toArray(targets).forEach(function (target) {\n        var tracker = _getByTarget(target);\n\n        if (tracker) {\n          if (!props.length) {\n            tracker.kill(1);\n          } else {\n            props.forEach(function (p) {\n              return tracker.remove(p);\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"isTracking\",\n    value: function isTracking(target, property) {\n      var tracker = _getByTarget(target);\n\n      return tracker && tracker.isTracking(property);\n    }\n  }, {\n    key: \"getVelocity\",\n    value: function getVelocity(target, property) {\n      var tracker = _getByTarget(target);\n\n      return !tracker || !tracker.isTracking(property) ? console.warn(\"Not tracking velocity of \" + property) : tracker.get(property);\n    }\n  }]);\n\n  return VelocityTracker;\n}();\nVelocityTracker.getByTarget = _getByTarget;\n_getGSAP() && VelocityTracker_gsap.registerPlugin(VelocityTracker);\n\n;// CONCATENATED MODULE: ./app/src/js/classes/InertiaPlugin.js\nfunction InertiaPlugin_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { InertiaPlugin_typeof = function _typeof(obj) { return typeof obj; }; } else { InertiaPlugin_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return InertiaPlugin_typeof(obj); }\n\n/*!\n * InertiaPlugin 3.6.1\n * https://greensock.com\n *\n * @license Copyright 2008-2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar InertiaPlugin_gsap,\n    InertiaPlugin_coreInitted,\n    _parseEase,\n    InertiaPlugin_toArray,\n    _power3,\n    _config,\n    InertiaPlugin_getUnit,\n    PropTween,\n    InertiaPlugin_getCache,\n    _checkPointRatio,\n    _clamp,\n    _processingVars,\n    _getTracker = VelocityTracker.getByTarget,\n    InertiaPlugin_getGSAP = function _getGSAP() {\n  return InertiaPlugin_gsap || typeof window !== \"undefined\" && (InertiaPlugin_gsap = window.gsap) && InertiaPlugin_gsap.registerPlugin && InertiaPlugin_gsap;\n},\n    _isString = function _isString(value) {\n  return typeof value === \"string\";\n},\n    _isNumber = function _isNumber(value) {\n  return typeof value === \"number\";\n},\n    _isObject = function _isObject(value) {\n  return InertiaPlugin_typeof(value) === \"object\";\n},\n    _isFunction = function _isFunction(value) {\n  return typeof value === \"function\";\n},\n    InertiaPlugin_bonusValidated = 1,\n    //<name>InertiaPlugin</name>\nInertiaPlugin_isArray = Array.isArray,\n    _emptyFunc = function _emptyFunc(p) {\n  return p;\n},\n    _bigNum = 1e10,\n    _tinyNum = 1 / _bigNum,\n    _checkPoint = 0.05,\n    InertiaPlugin_round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _extend = function _extend(obj, defaults, exclude) {\n  for (var p in defaults) {\n    if (!(p in obj) && p !== exclude) {\n      obj[p] = defaults[p];\n    }\n  }\n\n  return obj;\n},\n    _deepClone = function _deepClone(obj) {\n  var copy = {},\n      p,\n      v;\n\n  for (p in obj) {\n    copy[p] = _isObject(v = obj[p]) ? _deepClone(v) : v;\n  }\n\n  return copy;\n},\n    _getClosest = function _getClosest(n, values, max, min, radius) {\n  var i = values.length,\n      closest = 0,\n      absDif = _bigNum,\n      val,\n      dif,\n      p,\n      dist;\n\n  if (_isObject(n)) {\n    while (i--) {\n      val = values[i];\n      dif = 0;\n\n      for (p in n) {\n        dist = val[p] - n[p];\n        dif += dist * dist;\n      }\n\n      if (dif < absDif) {\n        closest = i;\n        absDif = dif;\n      }\n    }\n\n    if ((radius || _bigNum) < _bigNum && radius < Math.sqrt(absDif)) {\n      return n;\n    }\n  } else {\n    while (i--) {\n      val = values[i];\n      dif = val - n;\n\n      if (dif < 0) {\n        dif = -dif;\n      }\n\n      if (dif < absDif && val >= min && val <= max) {\n        closest = i;\n        absDif = dif;\n      }\n    }\n  }\n\n  return values[closest];\n},\n    _parseEnd = function _parseEnd(curProp, end, max, min, name, radius) {\n  if (curProp.end === \"auto\") {\n    return curProp;\n  }\n\n  var endVar = curProp.end,\n      adjustedEnd,\n      p;\n  max = isNaN(max) ? _bigNum : max;\n  min = isNaN(min) ? -_bigNum : min;\n\n  if (_isObject(end)) {\n    //for objects, like {x, y} where they're linked and we must pass an object to the function or find the closest value in an array.\n    adjustedEnd = end.calculated ? end : (_isFunction(endVar) ? endVar(end) : _getClosest(end, endVar, max, min, radius)) || end;\n\n    if (!end.calculated) {\n      for (p in adjustedEnd) {\n        end[p] = adjustedEnd[p];\n      }\n\n      end.calculated = true;\n    }\n\n    adjustedEnd = adjustedEnd[name];\n  } else {\n    adjustedEnd = _isFunction(endVar) ? endVar(end) : InertiaPlugin_isArray(endVar) ? _getClosest(end, endVar, max, min, radius) : parseFloat(endVar);\n  }\n\n  if (adjustedEnd > max) {\n    adjustedEnd = max;\n  } else if (adjustedEnd < min) {\n    adjustedEnd = min;\n  }\n\n  return {\n    max: adjustedEnd,\n    min: adjustedEnd,\n    unitFactor: curProp.unitFactor\n  };\n},\n    _getNumOrDefault = function _getNumOrDefault(vars, property, defaultValue) {\n  return isNaN(vars[property]) ? defaultValue : +vars[property];\n},\n    _calculateChange = function _calculateChange(velocity, duration) {\n  return duration * _checkPoint * velocity / _checkPointRatio;\n},\n    _calculateDuration = function _calculateDuration(start, end, velocity) {\n  return Math.abs((end - start) * _checkPointRatio / velocity / _checkPoint);\n},\n    _reservedProps = {\n  resistance: 1,\n  checkpoint: 1,\n  preventOvershoot: 1,\n  linkedProps: 1,\n  radius: 1,\n  duration: 1\n},\n    _processLinkedProps = function _processLinkedProps(target, vars, getVal, resistance) {\n  if (vars.linkedProps) {\n    //when there are linkedProps (typically \"x,y\" where snapping has to factor in multiple properties, we must first populate an object with all of those end values, then feed it to the function that make any necessary alterations. So the point of this first loop is to simply build an object (like {x:100, y:204.5}) for feeding into that function which we'll do later in the \"real\" loop.\n    var linkedPropNames = vars.linkedProps.split(\",\"),\n        linkedProps = {},\n        i,\n        p,\n        curProp,\n        curVelocity,\n        tracker,\n        curDuration;\n\n    for (i = 0; i < linkedPropNames.length; i++) {\n      p = linkedPropNames[i];\n      curProp = vars[p];\n\n      if (curProp) {\n        if (_isNumber(curProp.velocity)) {\n          curVelocity = curProp.velocity;\n        } else {\n          tracker = tracker || _getTracker(target);\n          curVelocity = tracker && tracker.isTracking(p) ? tracker.get(p) : 0;\n        }\n\n        curDuration = Math.abs(curVelocity / _getNumOrDefault(curProp, \"resistance\", resistance));\n        linkedProps[p] = parseFloat(getVal(target, p)) + _calculateChange(curVelocity, curDuration);\n      }\n    }\n\n    return linkedProps;\n  }\n},\n    _calculateTweenDuration = function _calculateTweenDuration(target, vars) {\n  var maxDuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  var minDuration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.2;\n  var overshootTolerance = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var recordEnd = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  _isString(target) && (target = InertiaPlugin_toArray(target)[0]);\n\n  if (!target) {\n    return 0;\n  }\n\n  var duration = 0,\n      clippedDuration = _bigNum,\n      inertiaVars = vars.inertia || vars,\n      getVal = InertiaPlugin_getCache(target).get,\n      resistance = _getNumOrDefault(inertiaVars, \"resistance\", _config.resistance),\n      p,\n      curProp,\n      curDuration,\n      curVelocity,\n      curVal,\n      end,\n      curClippedDuration,\n      tracker,\n      unitFactor,\n      linkedProps; //when there are linkedProps (typically \"x,y\" where snapping has to factor in multiple properties, we must first populate an object with all of those end values, then feed it to the function that make any necessary alterations. So the point of this first loop is to simply build an object (like {x:100, y:204.5}) for feeding into that function which we'll do later in the \"real\" loop.\n\n\n  linkedProps = _processLinkedProps(target, inertiaVars, getVal, resistance);\n\n  for (p in inertiaVars) {\n    if (!_reservedProps[p]) {\n      curProp = inertiaVars[p];\n\n      if (!_isObject(curProp)) {\n        tracker = tracker || _getTracker(target);\n\n        if (tracker && tracker.isTracking(p)) {\n          curProp = _isNumber(curProp) ? {\n            velocity: curProp\n          } : {\n            velocity: tracker.get(p)\n          }; //if we're tracking this property, we should use the tracking velocity and then use the numeric value that was passed in as the min and max so that it tweens exactly there.\n        } else {\n          curVelocity = +curProp || 0;\n          curDuration = Math.abs(curVelocity / resistance);\n        }\n      }\n\n      if (_isObject(curProp)) {\n        if (_isNumber(curProp.velocity)) {\n          curVelocity = curProp.velocity;\n        } else {\n          tracker = tracker || _getTracker(target);\n          curVelocity = tracker && tracker.isTracking(p) ? tracker.get(p) : 0;\n        }\n\n        curDuration = _clamp(minDuration, maxDuration, Math.abs(curVelocity / _getNumOrDefault(curProp, \"resistance\", resistance)));\n        curVal = parseFloat(getVal(target, p)) || 0;\n        end = curVal + _calculateChange(curVelocity, curDuration);\n\n        if (\"end\" in curProp) {\n          curProp = _parseEnd(curProp, linkedProps && p in linkedProps ? linkedProps : end, curProp.max, curProp.min, p, inertiaVars.radius);\n\n          if (recordEnd) {\n            _processingVars === vars && (_processingVars = inertiaVars = _deepClone(vars));\n            inertiaVars[p] = _extend(curProp, inertiaVars[p], \"end\");\n          }\n        }\n\n        if (\"max\" in curProp && end > +curProp.max + _tinyNum) {\n          unitFactor = curProp.unitFactor || _config.unitFactors[p] || 1; //some values are measured in special units like radians in which case our thresholds need to be adjusted accordingly.\n          //if the value is already exceeding the max or the velocity is too low, the duration can end up being uncomfortably long but in most situations, users want the snapping to occur relatively quickly (0.75 seconds), so we implement a cap here to make things more intuitive. If the max and min match, it means we're animating to a particular value and we don't want to shorten the time unless the velocity is really slow. Example: a rotation where the start and natural end value are less than the snapping spot, but the natural end is pretty close to the snap.\n\n          curClippedDuration = curVal > curProp.max && curProp.min !== curProp.max || curVelocity * unitFactor > -15 && curVelocity * unitFactor < 45 ? minDuration + (maxDuration - minDuration) * 0.1 : _calculateDuration(curVal, curProp.max, curVelocity);\n\n          if (curClippedDuration + overshootTolerance < clippedDuration) {\n            clippedDuration = curClippedDuration + overshootTolerance;\n          }\n        } else if (\"min\" in curProp && end < +curProp.min - _tinyNum) {\n          unitFactor = curProp.unitFactor || _config.unitFactors[p] || 1; //some values are measured in special units like radians in which case our thresholds need to be adjusted accordingly.\n          //if the value is already exceeding the min or if the velocity is too low, the duration can end up being uncomfortably long but in most situations, users want the snapping to occur relatively quickly (0.75 seconds), so we implement a cap here to make things more intuitive.\n\n          curClippedDuration = curVal < curProp.min && curProp.min !== curProp.max || curVelocity * unitFactor > -45 && curVelocity * unitFactor < 15 ? minDuration + (maxDuration - minDuration) * 0.1 : _calculateDuration(curVal, curProp.min, curVelocity);\n\n          if (curClippedDuration + overshootTolerance < clippedDuration) {\n            clippedDuration = curClippedDuration + overshootTolerance;\n          }\n        }\n\n        curClippedDuration > duration && (duration = curClippedDuration);\n      }\n\n      curDuration > duration && (duration = curDuration);\n    }\n  }\n\n  duration > clippedDuration && (duration = clippedDuration);\n  return duration > maxDuration ? maxDuration : duration < minDuration ? minDuration : duration;\n},\n    InertiaPlugin_initCore = function _initCore() {\n  InertiaPlugin_gsap = InertiaPlugin_getGSAP();\n\n  if (InertiaPlugin_gsap) {\n    _parseEase = InertiaPlugin_gsap.parseEase;\n    InertiaPlugin_toArray = InertiaPlugin_gsap.utils.toArray;\n    InertiaPlugin_getUnit = InertiaPlugin_gsap.utils.getUnit;\n    InertiaPlugin_getCache = InertiaPlugin_gsap.core.getCache;\n    _clamp = InertiaPlugin_gsap.utils.clamp;\n    _power3 = _parseEase(\"power3\");\n    _checkPointRatio = _power3(0.05);\n    PropTween = InertiaPlugin_gsap.core.PropTween;\n    InertiaPlugin_gsap.config({\n      resistance: 100,\n      unitFactors: {\n        time: 1000,\n        totalTime: 1000,\n        progress: 1000,\n        totalProgress: 1000\n      }\n    });\n    _config = InertiaPlugin_gsap.config();\n    InertiaPlugin_gsap.registerPlugin(VelocityTracker);\n    InertiaPlugin_coreInitted = 1;\n  }\n};\n\nvar InertiaPlugin = {\n  version: \"3.6.1\",\n  name: \"inertia\",\n  register: function register(core) {\n    InertiaPlugin_gsap = core;\n\n    InertiaPlugin_initCore();\n  },\n  init: function init(target, vars, tween, index, targets) {\n    InertiaPlugin_coreInitted || InertiaPlugin_initCore();\n\n    var tracker = _getTracker(target);\n\n    if (vars === \"auto\") {\n      if (!tracker) {\n        console.warn(\"No inertia tracking on \" + target + \". InertiaPlugin.track(target) first.\");\n        return;\n      }\n\n      vars = tracker.getAll();\n    }\n\n    this.target = target;\n    this.tween = tween;\n    _processingVars = vars; // gets swapped inside _calculateTweenDuration() if there's a function-based value encountered (to avoid double-calling it)\n\n    var cache = target._gsap,\n        getVal = cache.get,\n        dur = vars.duration,\n        durIsObj = _isObject(dur),\n        preventOvershoot = vars.preventOvershoot || durIsObj && dur.overshoot === 0,\n        resistance = _getNumOrDefault(vars, \"resistance\", _config.resistance),\n        duration = _isNumber(dur) ? dur : _calculateTweenDuration(target, vars, durIsObj && dur.max || 10, durIsObj && dur.min || 0.2, durIsObj && \"overshoot\" in dur ? +dur.overshoot : preventOvershoot ? 0 : 1, true),\n        p,\n        curProp,\n        curVal,\n        unit,\n        velocity,\n        change1,\n        end,\n        change2,\n        linkedProps;\n\n    vars = _processingVars;\n    _processingVars = 0; //when there are linkedProps (typically \"x,y\" where snapping has to factor in multiple properties, we must first populate an object with all of those end values, then feed it to the function that make any necessary alterations. So the point of this first loop is to simply build an object (like {x:100, y:204.5}) for feeding into that function which we'll do later in the \"real\" loop.\n\n    linkedProps = _processLinkedProps(target, vars, getVal, resistance);\n\n    for (p in vars) {\n      if (!_reservedProps[p]) {\n        curProp = vars[p];\n        _isFunction(curProp) && (curProp = curProp(index, target, targets));\n\n        if (_isNumber(curProp)) {\n          velocity = curProp;\n        } else if (_isObject(curProp) && !isNaN(curProp.velocity)) {\n          velocity = +curProp.velocity;\n        } else {\n          if (tracker && tracker.isTracking(p)) {\n            velocity = tracker.get(p);\n          } else {\n            console.warn(\"ERROR: No velocity was defined for \" + target + \" property: \" + p);\n          }\n        }\n\n        change1 = _calculateChange(velocity, duration);\n        change2 = 0;\n        curVal = getVal(target, p);\n        unit = InertiaPlugin_getUnit(curVal);\n        curVal = parseFloat(curVal);\n\n        if (_isObject(curProp)) {\n          end = curVal + change1;\n\n          if (\"end\" in curProp) {\n            curProp = _parseEnd(curProp, linkedProps && p in linkedProps ? linkedProps : end, curProp.max, curProp.min, p, vars.radius);\n          }\n\n          if (\"max\" in curProp && +curProp.max < end) {\n            if (preventOvershoot || curProp.preventOvershoot) {\n              change1 = curProp.max - curVal;\n            } else {\n              change2 = curProp.max - curVal - change1;\n            }\n          } else if (\"min\" in curProp && +curProp.min > end) {\n            if (preventOvershoot || curProp.preventOvershoot) {\n              change1 = curProp.min - curVal;\n            } else {\n              change2 = curProp.min - curVal - change1;\n            }\n          }\n        }\n\n        this._props.push(p);\n\n        this._pt = new PropTween(this._pt, target, p, curVal, 0, _emptyFunc, 0, cache.set(target, p, this));\n        this._pt.u = unit || 0;\n        this._pt.c1 = change1;\n        this._pt.c2 = change2;\n      }\n    }\n\n    tween.duration(duration);\n    return InertiaPlugin_bonusValidated;\n  },\n  render: function render(ratio, data) {\n    var pt = data._pt;\n    ratio = _power3(data.tween._time / data.tween._dur);\n\n    while (pt) {\n      pt.set(pt.t, pt.p, InertiaPlugin_round(pt.s + pt.c1 * ratio + pt.c2 * ratio * ratio) + pt.u, pt.d, ratio);\n      pt = pt._next;\n    }\n  }\n};\n\"track,untrack,isTracking,getVelocity,getByTarget\".split(\",\").forEach(function (name) {\n  return InertiaPlugin[name] = VelocityTracker[name];\n});\nInertiaPlugin_getGSAP() && InertiaPlugin_gsap.registerPlugin(InertiaPlugin);\n\n;// CONCATENATED MODULE: ./app/src/js/classes/Draggable.js\nfunction Draggable_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Draggable_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Draggable_createClass(Constructor, protoProps, staticProps) { if (protoProps) Draggable_defineProperties(Constructor.prototype, protoProps); if (staticProps) Draggable_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Gsap\n\n\n\ngsap/* gsap.registerPlugin */.p8.registerPlugin(Draggable/* Draggable */._);\ngsap/* gsap.registerPlugin */.p8.registerPlugin(InertiaPlugin); //empty function\n\nvar Draggable_noop = function noop() {}; //eslint-disable-line\n\n\nvar Draggable_lerp = function lerp(a, b, n) {\n  return (1 - n) * a + n * b;\n}; // Utilities\n\n\n\n\nvar Draggable_default = /*#__PURE__*/function () {\n  function _default(options) {\n    Draggable_classCallCheck(this, _default);\n\n    //hook functions\n    this._onDragStart = options.onDragStart || Draggable_noop;\n    this._onDrag = options.onDrag || Draggable_noop;\n    this._onDragEnd = options.onDragEnd || Draggable_noop;\n    this._onProgress = options.onProgress || Draggable_noop;\n    this._onPress = options.onPress || Draggable_noop;\n    this._onRelease = options.onRelease || Draggable_noop; // this._onSnap = options.onSnap || noop;\n    // this._onSnapLimits = options._onSnapLimits || noop;\n\n    this.slider = options.target;\n    this.sliderContent = options.targetInner;\n    this.snap = typeof options.snap !== 'undefined' ? options.snap : false;\n    this.item = this.sliderContent.querySelector('.slider__item');\n    this.draggable = null;\n    this.divNode = null;\n    this.current = 0;\n    this.last = 0; // this.BoundItemWidth = this.item.getBoundingClientRect().width;\n    // this.styleRightItem = window.getComputedStyle(this.sliderContent.querySelector('a'), null);\n    // this.SnapItem = this.BoundItemWidth + (parseInt(this.styleRightItem.marginRight, 10));\n\n    this.init();\n  } // eslint-disable-next-line no-empty-function\n\n\n  Draggable_createClass(_default, [{\n    key: \"events\",\n    value: function events() {}\n  }, {\n    key: \"createDraggable\",\n    value: function createDraggable() {\n      var _this = this;\n\n      this.draggable = Draggable/* Draggable.create */._.create(this.sliderContent, {\n        type: 'x',\n        lockAxis: true,\n        autoScroll: true,\n        dragResistance: 0.1,\n        edgeResistance: 0.8,\n        bounds: this.slider,\n        inertia: true,\n        throwProps: true,\n        snap: function snap(value) {\n          return _this.snap ? Math.round(value / -_this.item.offsetWidth) * -_this.item.offsetWidth : value;\n        },\n        onDrag: function onDrag() {\n          _this._onDrag(_this);\n        },\n        onThrowUpdate: function onThrowUpdate() {\n          _this._onDrag();\n        },\n        onDragStart: function onDragStart() {\n          _this._onDragStart();\n        },\n        onDragEnd: function onDragEnd() {\n          _this._onDragEnd();\n        },\n        onProgress: function onProgress(e) {\n          _this._onProgress(e);\n        },\n        onPress: function onPress(e) {\n          _this._onPress(e);\n        },\n        onRelease: function onRelease(e) {\n          _this._onRelease(e);\n        } // snap: {\n        //     x: (endValue) => {\n        //         return Math.round(endValue / this.SnapItem) * this.SnapItem;\n        //     },\n        // },\n        // onPress: (e) =>\n        // {\n        //     gsap.to(this.sliderContent, { scale: 0.9, ease: 'power1.out', duration: 1 });\n        //     // gsap.to(this.$circle, { scale: .8, ease: 'power1.out', duration: .5 });\n        //     // this.$circle.querySelector('.label').innerHTML = \"\";\n        //     // this.$circle.querySelector('.label').appendChild(\n        //     //     this.$circle.querySelector('.label').ownerDocument.importNode(this.doc.documentElement, true));\n        // },\n        // onRelease: () =>\n        // {\n        //     gsap.to(this.sliderContent, { scale: 1, ease: 'power1.out', duration: 1 });\n        //     // gsap.to(this.$circle, { scale: 1, ease: 'power1.out', duration: .5 });\n        //     // this.$circle.querySelector('.label').innerHTML = \"DRAG\";\n        // }\n\n      });\n    } // set up dots\n\n  }, {\n    key: \"setupDots\",\n    value: function setupDots() {\n      for (var i = 0; i < this.slides.length; i++) {\n        this.divNode = document.createElement('div');\n        this.divNode.classList.add('nav_dot');\n        this.divNode.id = 'dot_' + i + '';\n        this.$navDots.appendChild(this.divNode); // this.divNode = ;\n        // this.$navDots.prepend('<div class=\"nav_dot\" id=\"dot_' + i + '\"></div>');\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {// this.BoundItemWidth = this.item.getBoundingClientRect().width;\n      // this.styleRightItem = window.getComputedStyle(this.sliderContent.querySelector('a'), null);\n      // this.SnapItem = this.BoundItemWidth + (parseInt(this.styleRightItem.marginRight, 10));\n      //gsap.to(this.slider, { x: 0, ease: 'power4.inOut', duration: 1 });\n      // this.BoundItemWidth = this.item.getBoundingClientRect().width;\n      // this.styleRightItem = window.getComputedStyle(this.sliderContent.querySelector('a'), null);\n      // this.SnapItem = this.BoundItemWidth + (parseInt(this.styleRightItem.marginRight, 10));\n      // if (window.innerWidth >= 1025) {\n      //     this.draggable[0].disable();\n      //     gsap.to(this.slider, { x: 0, ease: 'power4.inOut', duration: 1 });\n      // }\n      // else\n      //     this.draggable[0].enable();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.draggable.kill();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.createDraggable(); // this.setupDots();\n    }\n  }]);\n\n  return _default;\n}();\n\n\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererHome.js\nfunction rendererHome_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererHome_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererHome_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererHome_typeof(obj); }\n\nfunction rendererHome_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererHome_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererHome_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererHome_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererHome_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererHome_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererHome_setPrototypeOf(subClass, superClass); }\n\nfunction rendererHome_setPrototypeOf(o, p) { rendererHome_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererHome_setPrototypeOf(o, p); }\n\nfunction rendererHome_createSuper(Derived) { var hasNativeReflectConstruct = rendererHome_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererHome_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererHome_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererHome_possibleConstructorReturn(this, result); }; }\n\nfunction rendererHome_possibleConstructorReturn(self, call) { if (call && (rendererHome_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererHome_assertThisInitialized(self); }\n\nfunction rendererHome_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererHome_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererHome_getPrototypeOf(o) { rendererHome_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererHome_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n // Other\n// import Slider from '../classes/slider';\n// import SplitText from '../classes/splitText';\n\nvar RendererHome = /*#__PURE__*/function (_Renderer) {\n  rendererHome_inherits(RendererHome, _Renderer);\n\n  var _super = rendererHome_createSuper(RendererHome);\n\n  function RendererHome() {\n    rendererHome_classCallCheck(this, RendererHome);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererHome_createClass(RendererHome, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$hero = this.$el.querySelector('.home__hero');\n      this.$poster = this.$el.querySelector('.home__poster');\n      this.$masterworks = this.$el.querySelector('.home__masterworks');\n      this.$related = this.$el.querySelector('.home__related');\n    }\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {// if(this.appStore.isDesktop)\n      //     gsap.set(this.$hero.querySelector('.logo'), { opacity: 0.0001 });\n      // gsap.set(this.$hero.querySelector('.title'), { opacity: 0.0001 });\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      // if(this.appStore.isDesktop)\n      //     gsap.to(this.$hero.querySelector('.logo'), { opacity: 1, duration: 1, ease: 'power2.out' });\n      // gsap.to(this.$hero.querySelector('.title'), { opacity: 1, duration: 1, ease: 'power2.out' });\n      if (this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.appUi.$headerSubmenu, {\n        opacity: 1,\n        duration: 1,\n        ease: 'power2.out'\n      });\n      if (this.appStore.isDesktop) this.initHero();\n      this.initScrolltitle();\n      this.initParallaxPoster();\n      this.initMasterworks();\n      this.initRelated();\n    }\n  }, {\n    key: \"initHero\",\n    value: function initHero() {\n      if (this.$hero) {\n        this.$heroOuters = this.$hero.querySelectorAll('.outer');\n        var heroTimeline = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: this.$hero,\n            scrub: true,\n            start: 'top top',\n            end: window.innerHeight * 2 + 'px top'\n          }\n        });\n\n        for (var i = 0; i < this.$heroOuters.length; i++) {\n          heroTimeline.to(this.$heroOuters[i], {\n            y: i * 15 + 'vw'\n          }, 0);\n        }\n      }\n    }\n  }, {\n    key: \"initScrolltitle\",\n    value: function initScrolltitle() {\n      var _this = this;\n\n      this.scrolltitles = [];\n      this.$scrolltitles = this.$el.querySelectorAll('.scrolltitle');\n\n      if (this.$scrolltitles) {\n        var _loop = function _loop(i) {\n          var speed = _this.$scrolltitles[i].dataset.speed;\n          var scrolltitle = {};\n          scrolltitle.$scrolltitlesItems = _this.$scrolltitles[i].children;\n          _this.$scrolltitles[i].style.width = scrolltitle.$scrolltitlesItems[0].offsetWidth + 'px';\n          scrolltitle.scrollTitleInnerLeft = gsap/* default.timeline */.ZP.timeline({\n            paused: false,\n            defaults: {\n              ease: 'none',\n              duration: _this.appStore.isDesktop ? scrolltitle.$scrolltitlesItems[0].offsetWidth / 300 : scrolltitle.$scrolltitlesItems[0].offsetWidth / 100,\n              repeat: '-1',\n              onReverseComplete: function onReverseComplete() {\n                scrolltitle.scrollTitleInnerLeft.pause();\n                scrolltitle.scrollTitleInnerRight.play();\n              }\n            }\n          });\n\n          for (var j = 0; j < scrolltitle.$scrolltitlesItems.length; j++) {\n            scrolltitle.scrollTitleInnerLeft.to(scrolltitle.$scrolltitlesItems[j], {\n              x: -100 * speed + '%'\n            }, 0);\n          }\n\n          scrolltitle.scrollTitleInnerRight = gsap/* default.timeline */.ZP.timeline({\n            paused: true,\n            defaults: {\n              ease: 'none',\n              duration: _this.appStore.isDesktop ? scrolltitle.$scrolltitlesItems[0].offsetWidth / 300 : scrolltitle.$scrolltitlesItems[0].offsetWidth / 100,\n              repeat: '-1',\n              onReverseComplete: function onReverseComplete() {\n                scrolltitle.scrollTitleInnerRight.pause();\n                scrolltitle.scrollTitleInnerLeft.play();\n              }\n            }\n          });\n\n          for (var _j = 0; _j < scrolltitle.$scrolltitlesItems.length; _j++) {\n            scrolltitle.scrollTitleInnerRight.to(scrolltitle.$scrolltitlesItems[_j], {\n              x: 100 * speed + '%'\n            }, 0);\n          }\n\n          if (_this.appStore.isDesktop) {\n            scrolltitle.scrollTitleOuter = gsap/* default.timeline */.ZP.timeline({\n              defaults: {\n                ease: 'none'\n              },\n              scrollTrigger: {\n                trigger: _this.$scrolltitles[i],\n                scrub: true,\n                start: 'top bottom',\n                end: 'bottom top',\n                onUpdate: function onUpdate(self) {\n                  // this.scrollTitleInner.timeScale(self.direction);\n                  if (!scrolltitle.scrollTitleInnerLeft.paused()) scrolltitle.scrollTitleInnerLeft.reversed(self.direction !== 1);\n                  if (!scrolltitle.scrollTitleInnerRight.paused()) scrolltitle.scrollTitleInnerRight.reversed(self.direction === 1);\n                }\n              }\n            });\n            scrolltitle.scrollTitleOuter.fromTo(_this.$scrolltitles[i], {\n              x: window.innerWidth * 0.2 * speed\n            }, {\n              x: -window.innerWidth * 0.2 * speed\n            }, 0);\n\n            _this.scrolltitles.push(scrolltitle);\n          }\n        };\n\n        for (var i = 0; i < this.$scrolltitles.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: \"initParallaxPoster\",\n    value: function initParallaxPoster() {\n      if (this.$poster) {\n        this.$posterImage = this.$poster.querySelector('.image');\n        this.$posterTitle = this.$poster.querySelector('.supertitle');\n        this.timelineParallaxPoster = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: this.$posterImage,\n            scrub: true,\n            start: '-=' + window.innerWidth * 0.05 + ' bottom',\n            end: this.$posterImage.getBoundingClientRect().height - window.innerWidth * 0.05 + ' top'\n          }\n        });\n        var top = this.$posterImage.getBoundingClientRect().height / 2 - this.$posterTitle.getBoundingClientRect().height / 2;\n        var offset = this.$posterImage.getBoundingClientRect().height / 2 - this.$posterTitle.getBoundingClientRect().height / 2 - window.innerWidth * 0.05;\n        this.$posterTitle.style.top = top + 'px';\n        this.timelineParallaxPoster.set(this.$posterTitle, {\n          y: -offset\n        }, 0);\n        this.timelineParallaxPoster.to(this.$posterTitle, {\n          y: offset\n        }, 0);\n      }\n    }\n  }, {\n    key: \"initMasterworks\",\n    value: function initMasterworks() {\n      if (this.$masterworks) {\n        gsap/* default.set */.ZP.set(this.$masterworks.querySelector('.background__bg'), {\n          y: '-10vw',\n          scale: 1.2\n        });\n        var backgroundTimeline = gsap/* default.timeline */.ZP.timeline({\n          scrollTrigger: {\n            trigger: this.$masterworks.querySelector('.background'),\n            start: 'top bottom',\n            end: 'bottom top',\n            scrub: true // onToggle: (isActive) =>\n            // {\n            //     isActive ? this.$videoCover.querySelector('.video__player video').play() : this.$videoCover.querySelector('.video__player video').pause();\n            // }\n\n          },\n          defaults: {\n            duration: 1,\n            ease: 'none'\n          }\n        });\n        backgroundTimeline.to(this.$masterworks.querySelector('.background__bg'), {\n          y: '10vw',\n          scale: 1,\n          duration: 1\n        }, 0);\n      }\n    }\n  }, {\n    key: \"initRelated\",\n    value: function initRelated() {\n      var _this2 = this;\n\n      // Selectors\n      this.$relatedSlider = this.$related.querySelector('.slider');\n      this.$relatedSliderInner = this.$related.querySelector('.slider__inner');\n      this.$relatedSliderItems = this.$related.querySelectorAll('.slider__item');\n      this.$relatedPromotions = this.$related.querySelectorAll('.promotion');\n\n      if (this.appStore.isDesktop) {\n        for (var i = 0; i < this.$relatedPromotions.length; i++) {\n          this.domEvents.add(this.$relatedPromotions[i], 'mouseenter', function (e, a, el) {\n            _this2.promotionEnter(el);\n          });\n          this.domEvents.add(this.$relatedPromotions[i], 'mouseleave', function (e, a, el) {\n            _this2.promotionLeave(el);\n          });\n        }\n\n        if (this.$relatedSliderItems.length > 4) {\n          this.$relatedSliderInner.style.justifyContent = 'flex-start';\n          this.$relatedSliderInner.style.minWidth = 'auto';\n          this.domEvents.add(this.$relatedSliderInner, 'mouseenter', function (e, a, el) {\n            _this2.appUi.enterDragCursor();\n          });\n          this.domEvents.add(this.$relatedSliderInner, 'mouseleave', function (e, a, el) {\n            _this2.appUi.leaveDragCursor();\n          });\n          this.relatedDraggable = new superDragger_default({\n            el: this.$relatedSlider,\n            elClickables: this.$relatedPromotions,\n            inner: this.$relatedSliderInner,\n            onDragStart: function onDragStart() {\n              _this2.superScroller._scroll.enable = false;\n\n              for (var _i = 0; _i < _this2.$relatedPromotions.length; _i++) {\n                gsap/* default.to */.ZP.to(_this2.$relatedPromotions[_i], {\n                  scale: 0.94,\n                  opacity: 1,\n                  ease: 'expo.out',\n                  duration: 0.6\n                });\n                gsap/* default.to */.ZP.to(_this2.$relatedPromotions[_i].querySelector('.inner .background__bg'), {\n                  scale: 1,\n                  opacity: 1,\n                  ease: 'expo.out',\n                  duration: 0.6\n                });\n              }\n            },\n            onDragEnd: function onDragEnd() {\n              _this2.superScroller._scroll.enable = true;\n\n              for (var _i2 = 0; _i2 < _this2.$relatedPromotions.length; _i2++) {\n                gsap/* default.to */.ZP.to(_this2.$relatedPromotions[_i2], {\n                  scale: 1,\n                  opacity: 1,\n                  ease: 'expo.out',\n                  duration: 0.6\n                });\n                gsap/* default.to */.ZP.to(_this2.$relatedPromotions[_i2].querySelector('.inner .background__bg'), {\n                  scale: 1.1,\n                  ease: 'expo.out',\n                  duration: 0.6\n                });\n              }\n            }\n          });\n        }\n      } else {\n        this.$relatedSliderInner.style.justifyContent = 'flex-start';\n        this.$relatedSliderInner.style.minWidth = 'auto';\n        this.relatedDraggable = new Draggable_default({\n          target: this.$relatedSlider,\n          targetInner: this.$relatedSliderInner,\n          snap: true\n        });\n      }\n    }\n  }, {\n    key: \"promotionEnter\",\n    value: function promotionEnter(el) {\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .background__bg'), {\n        scale: 1,\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n    }\n  }, {\n    key: \"promotionLeave\",\n    value: function promotionLeave(el) {\n      if (this.relatedDraggable && this.relatedDraggable._drag.dragging) return;\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .background__bg'), {\n        scale: 1.1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererHome;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererHome = (RendererHome);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererAbout.js\nfunction rendererAbout_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererAbout_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererAbout_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererAbout_typeof(obj); }\n\nfunction rendererAbout_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererAbout_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererAbout_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererAbout_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererAbout_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererAbout_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererAbout_setPrototypeOf(subClass, superClass); }\n\nfunction rendererAbout_setPrototypeOf(o, p) { rendererAbout_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererAbout_setPrototypeOf(o, p); }\n\nfunction rendererAbout_createSuper(Derived) { var hasNativeReflectConstruct = rendererAbout_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererAbout_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererAbout_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererAbout_possibleConstructorReturn(this, result); }; }\n\nfunction rendererAbout_possibleConstructorReturn(self, call) { if (call && (rendererAbout_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererAbout_assertThisInitialized(self); }\n\nfunction rendererAbout_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererAbout_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererAbout_getPrototypeOf(o) { rendererAbout_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererAbout_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n\n // Other\n// import Slider from '../classes/slider';\n\n\n\nvar RendererAbout = /*#__PURE__*/function (_Renderer) {\n  rendererAbout_inherits(RendererAbout, _Renderer);\n\n  var _super = rendererAbout_createSuper(RendererAbout);\n\n  function RendererAbout() {\n    rendererAbout_classCallCheck(this, RendererAbout);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererAbout_createClass(RendererAbout, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$hero = this.$el.querySelector('.about__hero');\n      if (this.$hero) this.$heroImages = this.$hero.querySelectorAll('.image');\n    }\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {\n      if (this.appStore.isDesktop) this.setCta();\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      if (this.appStore.isDesktop) this.initCta();\n    }\n  }, {\n    key: \"setCta\",\n    value: function setCta() {\n      this.$cta = this.$el.querySelector('.cta');\n\n      if (this.$cta) {\n        gsap/* default.set */.ZP.set(this.$cta.querySelector('.mask'), {\n          scaleY: 0\n        });\n        gsap/* default.set */.ZP.set(this.$cta.querySelector('.button'), {\n          y: '5vw'\n        });\n      }\n    }\n  }, {\n    key: \"initCta\",\n    value: function initCta() {\n      var _this = this;\n\n      if (this.$cta) {\n        ScrollTrigger/* default.create */.Z.create({\n          trigger: this.$cta,\n          start: 'top bottom',\n          once: true,\n          onEnter: function onEnter() {\n            gsap/* default.to */.ZP.to(_this.$cta.querySelector('.mask'), {\n              scaleY: 1,\n              duration: 2,\n              ease: 'expo.inOut'\n            });\n            gsap/* default.to */.ZP.to(_this.$cta.querySelector('.button'), {\n              y: 0,\n              duration: 2,\n              ease: 'expo.inOut'\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererAbout;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererAbout = (RendererAbout);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererPhilosophy.js\nfunction rendererPhilosophy_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererPhilosophy_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererPhilosophy_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererPhilosophy_typeof(obj); }\n\nfunction rendererPhilosophy_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererPhilosophy_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererPhilosophy_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererPhilosophy_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererPhilosophy_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererPhilosophy_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererPhilosophy_setPrototypeOf(subClass, superClass); }\n\nfunction rendererPhilosophy_setPrototypeOf(o, p) { rendererPhilosophy_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererPhilosophy_setPrototypeOf(o, p); }\n\nfunction rendererPhilosophy_createSuper(Derived) { var hasNativeReflectConstruct = rendererPhilosophy_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererPhilosophy_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererPhilosophy_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererPhilosophy_possibleConstructorReturn(this, result); }; }\n\nfunction rendererPhilosophy_possibleConstructorReturn(self, call) { if (call && (rendererPhilosophy_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererPhilosophy_assertThisInitialized(self); }\n\nfunction rendererPhilosophy_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererPhilosophy_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererPhilosophy_getPrototypeOf(o) { rendererPhilosophy_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererPhilosophy_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n\n // Other\n// import Slider from '../classes/slider';\n\n\n\nvar RendererPhilosophy = /*#__PURE__*/function (_Renderer) {\n  rendererPhilosophy_inherits(RendererPhilosophy, _Renderer);\n\n  var _super = rendererPhilosophy_createSuper(RendererPhilosophy);\n\n  function RendererPhilosophy() {\n    rendererPhilosophy_classCallCheck(this, RendererPhilosophy);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererPhilosophy_createClass(RendererPhilosophy, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$mision = this.$el.querySelector('.philosophy__mision');\n\n      if (this.$mision) {\n        this.$misionTitles = this.$mision.querySelectorAll('.supertitle');\n        this.$misionImage = this.$mision.querySelector('.image');\n      }\n\n      this.$vision = this.$el.querySelector('.philosophy__vision');\n\n      if (this.$vision) {\n        this.$visionTitles = this.$vision.querySelectorAll('.supertitle');\n        this.$visionImage = this.$vision.querySelector('.image');\n      }\n\n      this.$quote = this.$el.querySelector('.philosophy__quote');\n\n      if (this.$quote) {\n        this.$quoteIcon = this.$quote.querySelector('.quote__icon');\n        this.$quoteText = this.$quote.querySelector('quote__text');\n      }\n\n      this.$assets = this.$el.querySelector('.philosophy__assets');\n\n      if (this.$assets) {\n        if (this.appStore.isDesktop) this.$assetsTitles = this.$assets.querySelectorAll('.supertitle');else this.$assetsTitle = this.$assets.querySelector('.supertitle');\n        this.$assetsImages = this.$assets.querySelectorAll('.image');\n      }\n\n      this.$principles = this.$el.querySelector('.philosophy__principles');\n\n      if (this.$principles) {\n        this.$principlesTitle = this.$principles.querySelector('.supertitle');\n        this.$principlesItems = this.$principles.querySelectorAll('.principles__item');\n      }\n    }\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {\n      if (this.appStore.isDesktop) this.setSupertitles();else this.setSupertitlesMobile();\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      if (this.appStore.isDesktop) this.initSupertitles();else this.initSupertitlesMobile();\n      this.initQuote();\n      this.initPrinciples();\n    }\n  }, {\n    key: \"setSupertitles\",\n    value: function setSupertitles() {\n      gsap/* default.set */.ZP.set(this.$misionImage.children[0], {\n        scale: 1.2\n      }, 0);\n      this.$supertitles = this.$el.querySelectorAll('.supertitle');\n\n      if (this.$supertitles) {\n        for (var $i = 0; $i < this.$supertitles.length; $i++) {\n          new SplitText(this.$supertitles[$i], {\n            type: 'chars',\n            linesClass: 'line line--++',\n            wordsClass: 'word word--++',\n            charsClass: 'char char--++'\n          }); // eslint-disable-line\n\n          this.$supertitles[$i].classList.add('split', 'split--chars'); // for(let j = 0; j < this.$supertitles[$i].querySelectorAll('.supertitle .line').length; j++)\n          // {\n          //     this.$supertitles[$i].querySelectorAll('.supertitle .line')[j].insertAdjacentHTML('beforeend', '<span class=\"underline\"></span>');\n          //     this.$supertitles[$i].querySelectorAll('.supertitle .line')[j].insertAdjacentHTML('afterend', '<span class=\"break\"></span>');\n          // }\n        }\n      }\n\n      this.$mision.style.paddingTop = window.innerHeight / 2 - this.$misionTitles[0].getBoundingClientRect().height / 2 + 'px';\n      this.$assets.querySelector('.columns--inner-2').style.paddingTop = this.$assetsImages[0].getBoundingClientRect().height + 'px';\n    }\n  }, {\n    key: \"initQuote\",\n    value: function initQuote() {\n      if (this.$quote) {\n        gsap/* default.set */.ZP.set(this.$quoteIcon, {\n          y: '2.5vw'\n        }, 0);\n        var quoteTimeline = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: this.$quote,\n            scrub: true,\n            start: 'top bottom',\n            end: 'bottom top'\n          }\n        });\n        quoteTimeline.to(this.$quoteIcon, {\n          y: '-2.5vw'\n        }, 0);\n      }\n    }\n  }, {\n    key: \"initSupertitles\",\n    value: function initSupertitles() {\n      // Mision\n      var misionStart = window.innerHeight / 2 - this.$misionTitles[0].getBoundingClientRect().height / 2;\n      var misionEnd = window.innerHeight / 2 + this.$misionTitles[0].getBoundingClientRect().height / 2;\n      var misionOffset = this.$misionImage.getBoundingClientRect().y + this.$misionImage.getBoundingClientRect().height - this.$misionTitles[0].getBoundingClientRect().top;\n      var misionTimeline = gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          ease: 'none'\n        },\n        scrollTrigger: {\n          trigger: this.$misionTitles[0],\n          scrub: true,\n          start: 'top ' + misionStart + 'px',\n          end: misionOffset + 'px ' + misionEnd + 'px'\n        }\n      });\n      misionTimeline.to(this.$misionTitles[0], {\n        y: (misionOffset - this.$misionTitles[0].getBoundingClientRect().height) / 2,\n        duration: 0.5\n      }, 0);\n      misionTimeline.to(this.$misionTitles[1], {\n        y: misionOffset - this.$misionTitles[0].getBoundingClientRect().height,\n        duration: 1\n      }, 0);\n      misionTimeline.to(this.$misionImage.children[0], {\n        scale: 1,\n        duration: 1\n      }, 0); // Vision\n\n      var visionStart = window.innerHeight / 2 - this.$visionTitles[0].getBoundingClientRect().height / 2;\n      var visionEnd = window.innerHeight / 2 + this.$visionTitles[0].getBoundingClientRect().height / 2;\n      var visionOffset = this.$visionImage.getBoundingClientRect().top + this.$visionImage.getBoundingClientRect().height - this.$visionTitles[0].getBoundingClientRect().top;\n      gsap/* default.set */.ZP.set(this.$visionImage.children[0], {\n        scale: 1.2\n      }, 0);\n      var visionTimeline = gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          ease: 'none'\n        },\n        scrollTrigger: {\n          trigger: this.$visionTitles[0],\n          scrub: true,\n          start: 'top ' + visionStart + 'px',\n          end: visionOffset + 'px ' + visionEnd + 'px'\n        }\n      });\n      visionTimeline.to(this.$visionTitles[0], {\n        y: (visionOffset - this.$visionTitles[0].getBoundingClientRect().height) / 2,\n        duration: 0.5\n      }, 0);\n      visionTimeline.to(this.$visionTitles[1], {\n        y: visionOffset - this.$visionTitles[0].getBoundingClientRect().height,\n        duration: 1\n      }, 0);\n      visionTimeline.to(this.$visionImage.children[0], {\n        scale: 1,\n        duration: 1\n      }, 0); // gsap.set(this.$visionImage.children[0], { scale: 1.2 }, 0);\n      // const visionTimeline2 = gsap.timeline({\n      //     defaults: { ease: 'none' },\n      //     scrollTrigger: {\n      //         trigger: this.$visionTitles[0],\n      //         scrub: true,\n      //         start: 'top bottom',\n      //         end: visionOffset + 'px ' + visionEnd + 'px',\n      //     }\n      // });\n      // visionTimeline2.to(this.$visionImage.children[0], { scale: 1, duration: 1 }, 0);\n      // Assets\n\n      var assetsStart = window.innerHeight / 2 - this.$assetsTitles[0].getBoundingClientRect().height / 2;\n      var assetsEnd = window.innerHeight / 2 + this.$assetsTitles[0].getBoundingClientRect().height / 2;\n      var assetsActiOffset = this.$assetsTitles[0].getBoundingClientRect().height + window.innerWidth * 0.125;\n      var assetsVosOffset = this.$assetsTitles[1].getBoundingClientRect().height + this.$assetsImages[0].getBoundingClientRect().height + window.innerWidth * 0.125;\n      var assetsActiTimeline = gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          ease: 'none'\n        },\n        scrollTrigger: {\n          trigger: this.$assetsTitles[0],\n          scrub: true,\n          start: 'top ' + assetsStart + 'px',\n          end: assetsActiOffset + 'px ' + assetsEnd + 'px'\n        }\n      });\n      assetsActiTimeline.to(this.$assetsTitles[0], {\n        y: assetsActiOffset - this.$assetsTitles[0].getBoundingClientRect().height,\n        duration: 0.5\n      }, 0);\n      var assetsVosTimeline = gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          ease: 'none'\n        },\n        scrollTrigger: {\n          trigger: this.$assetsTitles[1],\n          scrub: true,\n          start: 'top ' + assetsStart + 'px',\n          end: assetsVosOffset + 'px ' + assetsEnd + 'px'\n        }\n      });\n      assetsVosTimeline.to(this.$assetsTitles[1], {\n        y: assetsVosOffset - this.$assetsTitles[1].getBoundingClientRect().height,\n        duration: 0.5\n      }, 0);\n    }\n  }, {\n    key: \"setSupertitlesMobile\",\n    value: function setSupertitlesMobile() {\n      this.$fixedTitles = this.$el.querySelectorAll('.fixed .supertitle');\n      new SplitText(this.$fixedTitles[0], {\n        type: 'words',\n        wordsClass: 'word word--++'\n      });\n      gsap/* default.set */.ZP.set(this.$fixedTitles[0].children[0], {\n        opacity: 0.0001\n      });\n      new SplitText(this.$fixedTitles[1], {\n        type: 'words',\n        wordsClass: 'word word--++'\n      });\n      gsap/* default.set */.ZP.set(this.$fixedTitles[1].children[0], {\n        opacity: 0.0001\n      });\n      new SplitText(this.$fixedTitles[2], {\n        type: 'words',\n        wordsClass: 'word word--++'\n      });\n      gsap/* default.set */.ZP.set(this.$fixedTitles[2].children[0], {\n        opacity: 0.0001\n      });\n      new SplitText(this.$fixedTitles[3], {\n        type: 'words',\n        wordsClass: 'word word--++'\n      });\n      gsap/* default.set */.ZP.set(this.$fixedTitles[3].children[0], {\n        opacity: 0.0001\n      });\n      gsap/* default.to */.ZP.to(this.$fixedTitles[0].children[0], {\n        opacity: 1,\n        ease: 'power2.out',\n        duration: 0.1\n      });\n    }\n  }, {\n    key: \"initSupertitlesMobile\",\n    value: function initSupertitlesMobile() {\n      var _this = this;\n\n      // Mision\n      this.superTrigger.create({\n        trigger: this.$mision,\n        scrub: true,\n        start: 'top top+=100',\n        end: 'bottom 110%',\n        onEnter: function onEnter() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[0].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeave: function onLeave() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[0].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[0].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeaveBack: function onLeaveBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[0].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        }\n      }); // Vision\n\n      this.superTrigger.create({\n        trigger: this.$vision,\n        scrub: true,\n        start: 'top 50%',\n        end: 'bottom 110%',\n        onEnter: function onEnter() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[1].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeave: function onLeave() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[1].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[1].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeaveBack: function onLeaveBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[1].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        }\n      }); // Assets\n\n      this.superTrigger.create({\n        trigger: this.$assets,\n        scrub: true,\n        start: 'top 50%',\n        end: 'bottom 110%',\n        onEnter: function onEnter() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[2].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeave: function onLeave() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[2].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[2].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeaveBack: function onLeaveBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[2].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        }\n      }); // Principles\n\n      this.superTrigger.create({\n        trigger: this.$principles,\n        scrub: true,\n        start: 'top 35%',\n        end: 'bottom 110%',\n        onEnter: function onEnter() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[3].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeave: function onLeave() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[3].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[3].children[0], {\n            opacity: 1,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        },\n        onLeaveBack: function onLeaveBack() {\n          gsap/* default.to */.ZP.to(_this.$fixedTitles[3].children[0], {\n            opacity: 0.0001,\n            ease: 'power2.out',\n            duration: 0.2\n          });\n        }\n      });\n    }\n  }, {\n    key: \"initPrinciples\",\n    value: function initPrinciples() {\n      this.principlesTimelines = [];\n\n      for (var i = 0; i < this.$principlesItems.length; i++) {\n        gsap/* default.set */.ZP.set(this.$principlesItems[i].querySelector('.background__bg'), {\n          y: this.appStore.isDesktop ? -window.innerHeight + 200 : -(window.innerHeight * 0.5) + 200,\n          scale: 1.2\n        }, 0);\n        gsap/* default.set */.ZP.set(this.$principlesItems[i].querySelector('.background__mask'), {\n          opacity: 1\n        }, 0);\n        var principleTimeline = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: this.$principlesItems[i].querySelector('.background'),\n            scrub: true,\n            start: 'top bottom',\n            end: 'bottom bottom' //end: 'top+=' + window.innerHeight + ' bottom'\n\n          }\n        });\n        principleTimeline.to(this.$principlesItems[i].querySelector('.background__bg'), {\n          y: 0,\n          scale: 1\n        }, 0);\n        principleTimeline.to(this.$principlesItems[i].querySelector('.background__mask'), {\n          opacity: 0.0001,\n          duration: 0.5\n        }, 0);\n        this.principlesTimelines.push(principleTimeline);\n      }\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererPhilosophy;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererPhilosophy = (RendererPhilosophy);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererPromotions.js\nfunction rendererPromotions_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererPromotions_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererPromotions_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererPromotions_typeof(obj); }\n\nfunction rendererPromotions_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererPromotions_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererPromotions_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererPromotions_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererPromotions_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererPromotions_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererPromotions_setPrototypeOf(subClass, superClass); }\n\nfunction rendererPromotions_setPrototypeOf(o, p) { rendererPromotions_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererPromotions_setPrototypeOf(o, p); }\n\nfunction rendererPromotions_createSuper(Derived) { var hasNativeReflectConstruct = rendererPromotions_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererPromotions_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererPromotions_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererPromotions_possibleConstructorReturn(this, result); }; }\n\nfunction rendererPromotions_possibleConstructorReturn(self, call) { if (call && (rendererPromotions_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererPromotions_assertThisInitialized(self); }\n\nfunction rendererPromotions_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererPromotions_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererPromotions_getPrototypeOf(o) { rendererPromotions_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererPromotions_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n\n\n // Other\n// import Slider from '../classes/slider';\n\n\n\nvar RendererPromotions = /*#__PURE__*/function (_Renderer) {\n  rendererPromotions_inherits(RendererPromotions, _Renderer);\n\n  var _super = rendererPromotions_createSuper(RendererPromotions);\n\n  function RendererPromotions() {\n    rendererPromotions_classCallCheck(this, RendererPromotions);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererPromotions_createClass(RendererPromotions, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$promotions = this.$el.querySelectorAll('.promotion');\n      this.$slider = this.$el.querySelector('.slider');\n      this.$sliderInner = this.$slider.querySelector('.slider__inner');\n      this.$sliderScrollbar = this.$slider.querySelector('.slider__scrollbar');\n    }\n  }, {\n    key: \"events\",\n    value: function events() {\n      for (var i = 0; i < this.$promotions.length; i++) {\n        this.promotionInit(this.$promotions[i]);\n      }\n    }\n  }, {\n    key: \"scroll\",\n    value: function scroll() {\n      var _this = this;\n\n      if (this.$sliderInner) {\n        if (this.appStore.isDesktop) {\n          // Superscroller\n          this.sliderScroller = new _default({\n            mode: 'horizontal',\n            scroll: true,\n            scrollTarget: this.$sliderInner,\n            bar: false\n          });\n          if (this.appUi.$headerLogo) gsap/* default.to */.ZP.to(this.appUi.$headerLogo, {\n            y: 0,\n            ease: 'expo.out'\n          });\n        } else {\n          // this.superTrigger = ScrollTrigger;\n          this.superTrigger = ScrollTrigger/* default */.Z;\n          this.superTrigger.refresh();\n          gsap/* default.ticker.add */.ZP.ticker.add(function () {\n            _this.requestAnimationFrame();\n          });\n          this.superTriggerTl = gsap/* default.timeline */.ZP.timeline({\n            defaults: {\n              ease: 'none'\n            },\n            scrollTrigger: {\n              trigger: this.$app,\n              scrub: true,\n              start: 'top top',\n              end: 'bottom bottom',\n              onUpdate: function onUpdate(self) {\n                _this.superScrollerMobile = self.progress * self.end; // if(this.appUi.$header)\n                //     gsap.to(this.appUi.$header, { y: -(self.progress * this.$el.getBoundingClientRect().height) });\n                // if(this.appUi.$logo)\n                //     gsap.to(this.appUi.$logo, { y: -(self.progress * this.$el.getBoundingClientRect().height) / 2 });\n                // if(this.appUi.$headerTriggerText && !this.appStore.isDesktop)\n                //     gsap.to(this.appUi.$headerTriggerText, { y: -(self.progress * this.$el.getBoundingClientRect().height) / 2 });\n              }\n            }\n          });\n        }\n      }\n    } // beforeEnter()\n    // {\n    //     if(this.appStore.isDesktop)\n    //     {\n    //         for(let i = 0; i < this.$promotions.length; i++)\n    //             gsap.set(this.$promotions[i], { x: '20vw', opacity: 0.0001 });\n    //     }\n    // }\n    // enter()\n    // {\n    //     if(this.appStore.isDesktop)\n    //     {\n    //         for(let i = 0; i < this.$promotions.length; i++)\n    //             gsap.to(this.$promotions[i], { x: '0vw', opacity: 1, duration: 2, ease: 'expo.out', delay: i * 0.2 });\n    //     }\n    //     else\n    //     {\n    //         // Animate first promotion numbers in mobile\n    //         const pending = this.$promotions[0].querySelector('.pending').dataset.value;\n    //         const pendingSplit = pending.split('');\n    //         for(let i = 0; i < pendingSplit.length; i++)\n    //             gsap.to(this.$promotions[0].querySelector('.pending').querySelectorAll('.number')[i], { y: -((pendingSplit[i] * 100)) + '%', opacity: 1, ease: 'expo.out', duration: 2, delay: 1 + (i * 0.01) });\n    //     }\n    //     if(!this.appStore.isDesktop)\n    //         this.initPromotionMobile();\n    // }\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {\n      if (this.appStore.isDesktop) {\n        // Set promotions\n        for (var i = 0; i < this.$promotions.length; i++) {\n          gsap/* default.set */.ZP.set(this.$promotions[i], {\n            y: '-2.5vw',\n            willChange: 'transform'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"preenter\",\n    value: function preenter() {\n      if (this.appStore.isDesktop) {\n        // Init promotions\n        for (var i = 0; i < this.$promotions.length; i++) {\n          gsap/* default.to */.ZP.to(this.$promotions[i], {\n            y: '0vw',\n            duration: 1,\n            delay: i * 0.05,\n            ease: 'expo.out',\n            clearProps: 'willChange'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      var _this2 = this;\n\n      if (!this.appStore.isDesktop) {\n        gsap/* default.to */.ZP.to(this.$promotions[0].querySelector('.pending'), {\n          opacity: 1,\n          ease: 'expo.out',\n          duration: 2\n        });\n        var pending = this.$promotions[0].querySelector('.pending').dataset.value;\n        var pendingSplit = pending.split('');\n\n        for (var j = 0; j < pendingSplit.length; j++) {\n          gsap/* default.to */.ZP.to(this.$promotions[0].querySelector('.pending').querySelectorAll('.number')[j], {\n            y: (9 - pendingSplit[j]) * 100 + 100 + '%',\n            opacity: 1,\n            ease: 'expo.out',\n            duration: 2,\n            delay: j * 0.1\n          });\n        }\n      }\n\n      if (this.appStore.isDesktop) {\n        for (var i = 0; i < this.$promotions.length; i++) {\n          this.domEvents.add(this.$promotions[i], 'mouseenter', function (e, a, el) {\n            _this2.promotionEnter(el);\n          });\n          this.domEvents.add(this.$promotions[i], 'mouseleave', function (e, a, el) {\n            _this2.promotionLeave(el);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"promotionInit\",\n    value: function promotionInit(el) {\n      if (this.appStore.isDesktop) {\n        var firstLabel = el.querySelector('.label--1');\n        new SplitText(firstLabel, {\n          type: 'lines, words',\n          linesClass: 'line line--++',\n          wordsClass: 'word word--++',\n          charsClass: 'char char--++'\n        }); // eslint-disable-line\n\n        firstLabel.classList.add('split');\n        var firstLabelWords = el.querySelectorAll('.label--1 .word');\n\n        for (var j = 0; j < firstLabelWords.length; j++) {\n          gsap/* default.set */.ZP.set(firstLabelWords[j], {\n            y: '0%'\n          });\n        }\n\n        var secondLabel = el.querySelector('.label--2');\n        new SplitText(secondLabel, {\n          type: 'lines, words',\n          linesClass: 'line line--++',\n          wordsClass: 'word word--++',\n          charsClass: 'char char--++'\n        }); // eslint-disable-line\n\n        secondLabel.classList.add('split');\n        var secondLabelWords = el.querySelectorAll('.label--2 .word');\n\n        for (var _j = 0; _j < secondLabelWords.length; _j++) {\n          gsap/* default.set */.ZP.set(secondLabelWords[_j], {\n            y: '100%'\n          });\n        }\n      } else {\n        ScrollTrigger/* default.create */.Z.create({\n          defaults: {\n            ease: 'none'\n          },\n          trigger: el.querySelector('.pending'),\n          start: 'top bottom',\n          once: true,\n          onEnter: function onEnter() {\n            gsap/* default.set */.ZP.set(el.querySelector('.pending'), {\n              display: 'flex'\n            });\n            var pending = el.querySelector('.pending').dataset.value;\n            var pendingSplit = pending.split('');\n            gsap/* default.to */.ZP.to(el.querySelector('.pending'), {\n              opacity: 1,\n              ease: 'expo.out',\n              duration: 2\n            });\n\n            for (var i = 0; i < pendingSplit.length; i++) {\n              gsap/* default.to */.ZP.to(el.querySelector('.pending').querySelectorAll('.number')[i], {\n                y: (9 - pendingSplit[i]) * 100 + 100 + '%',\n                opacity: 1,\n                ease: 'expo.out',\n                duration: 2,\n                delay: i * 0.1\n              });\n            } // gsap.to(el.querySelector('.pending'), { opacity: 1, ease: 'expo.out', duration: 2 });\n            // const pending = el.querySelector('.pending').dataset.value;\n            // const pendingSplit = pending.split('');\n            // for(let j = 0; j < pendingSplit.length; j++)\n            //     gsap.to(el.querySelector('.pending').querySelectorAll('.number')[j], { y: (((9 - pendingSplit[j]) * 100) + 100) + '%', opacity: 1, ease: 'expo.out', duration: 2, delay: j * 0.1 });\n\n          }\n        });\n      }\n    }\n  }, {\n    key: \"promotionEnter\",\n    value: function promotionEnter(el) {\n      gsap/* default.killTweensOf */.ZP.killTweensOf([el.querySelector('.outer'), el.querySelector('.pending')]);\n      gsap/* default.set */.ZP.set(el.querySelector('.pending'), {\n        display: 'flex'\n      });\n      gsap/* default.set */.ZP.set(el.querySelector('.outer'), {\n        display: 'block'\n      });\n      var pending = el.querySelector('.pending').dataset.value;\n      var pendingSplit = pending.split('');\n      gsap/* default.to */.ZP.to(el.querySelector('.pending'), {\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 2\n      });\n\n      for (var i = 0; i < pendingSplit.length; i++) {\n        gsap/* default.to */.ZP.to(el.querySelector('.pending').querySelectorAll('.number')[i], {\n          y: (9 - pendingSplit[i]) * 100 + 100 + '%',\n          opacity: 1,\n          ease: 'expo.out',\n          duration: 2,\n          delay: i * 0.1\n        });\n      }\n\n      gsap/* default.to */.ZP.to(el.querySelector('.outer .background__bg'), {\n        scale: 1,\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.outer .background__overlay'), {\n        opacity: 0.5,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .background__bg'), {\n        scale: 1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .mask'), {\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .info'), {\n        color: '#fff',\n        ease: 'expo.out',\n        duration: 0.6\n      });\n\n      if (this.appStore.isDesktop) {\n        var firstLabelWords = el.querySelectorAll('.label--1 .word');\n\n        for (var _i = 0; _i < firstLabelWords.length; _i++) {\n          gsap/* default.to */.ZP.to(firstLabelWords[_i], {\n            y: '-100%',\n            ease: 'expo.out',\n            duration: 0.6\n          });\n        }\n\n        var secondLabelWords = el.querySelectorAll('.label--2 .word');\n\n        for (var _i2 = 0; _i2 < secondLabelWords.length; _i2++) {\n          gsap/* default.to */.ZP.to(secondLabelWords[_i2], {\n            y: '0%',\n            ease: 'expo.out',\n            duration: 0.6\n          });\n        }\n      }\n    }\n  }, {\n    key: \"promotionLeave\",\n    value: function promotionLeave(el) {\n      var pending = el.querySelector('.pending').dataset.value;\n      var pendingSplit = pending.split('');\n      gsap/* default.to */.ZP.to(el.querySelector('.pending'), {\n        opacity: 0.0001,\n        ease: 'expo.out',\n        duration: 0.4,\n        onComplete: function onComplete() {\n          for (var i = 0; i < pendingSplit.length; i++) {\n            gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector('.pending').querySelectorAll('.number')[i]);\n            gsap/* default.set */.ZP.set(el.querySelector('.pending').querySelectorAll('.number')[i], {\n              y: '0%'\n            });\n          }\n        }\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.outer .background__bg'), {\n        scale: 1.1,\n        opacity: 0.0001,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.outer .background__overlay'), {\n        opacity: 0.0001,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .background__bg'), {\n        scale: 1.1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .mask'), {\n        opacity: 0.0001,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .info'), {\n        color: '#000',\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.set */.ZP.set(el.querySelector('.outer'), {\n        display: 'block',\n        delay: 0.6\n      });\n      gsap/* default.set */.ZP.set(el.querySelector('.pending'), {\n        display: 'none',\n        delay: 0.6\n      });\n\n      if (this.appStore.isDesktop) {\n        var firstLabelWords = el.querySelectorAll('.label--1 .word');\n\n        for (var i = 0; i < firstLabelWords.length; i++) {\n          gsap/* default.to */.ZP.to(firstLabelWords[i], {\n            y: '0%',\n            ease: 'expo.out',\n            duration: 0.6\n          });\n        }\n\n        var secondLabelWords = el.querySelectorAll('.label--2 .word');\n\n        for (var _i3 = 0; _i3 < secondLabelWords.length; _i3++) {\n          gsap/* default.to */.ZP.to(secondLabelWords[_i3], {\n            y: '100%',\n            ease: 'expo.out',\n            duration: 0.6\n          });\n        }\n      }\n    } // promotionClick(e, el, clicked)\n    // {\n    //     if(e.shiftKey || e.ctrlKey || e.metaKey)\n    //         return;\n    //     this.clickedDone = true;\n    //     this.clicked = clicked;\n    //     for(let i = 0; i < this.$promotions.length; i++)\n    //     {\n    //         // if(i !== clicked)\n    //         // {\n    //             gsap.to(this.$promotions[i].querySelector('.inner .mask'), { opacity: 0.0001, duration: 0.2 });\n    //             gsap.to(this.$promotions[i].querySelector('.inner .info'), { opacity: 0.0001, ease: 'expo.out', duration: 1 });\n    //             gsap.to(this.$promotions[i].querySelector('.outer .background'), { y: '100%', ease: 'expo.inOut', duration: 1 });\n    //             gsap.to(this.$promotions[i].querySelector('.outer .background .background__bg'), { y: '-100%', scale: 1, ease: 'expo.inOut', duration: 1 });\n    //             gsap.to(this.$promotions[i].querySelector('.inner .background'), { y: '100%', ease: 'expo.inOut', duration: 1 });\n    //             gsap.to(this.$promotions[i].querySelector('.inner .background .background__bg'), { y: '-100%', scale: 1, ease: 'expo.inOut', duration: 1 });\n    //             gsap.delayedCall(1, () =>\n    //             {\n    //                 gsap.to(this.$promotions[i], { opacity: 0.0001 });\n    //             });\n    //         // }\n    //     }\n    // }\n\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (this.sliderScroller) this.sliderScroller.resize();\n    }\n  }]);\n\n  return RendererPromotions;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererPromotions = (RendererPromotions);\n;// CONCATENATED MODULE: ./app/src/js/components/slider.js\nfunction slider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction slider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction slider_createClass(Constructor, protoProps, staticProps) { if (protoProps) slider_defineProperties(Constructor.prototype, protoProps); if (staticProps) slider_defineProperties(Constructor, staticProps); return Constructor; }\n\n//utilities\n\n //import WheelIndicator from 'wheel-indicator';\n//utilities\n\n\n\nvar slider_noop = function noop() {}; // eslint-disable-line\n\n\nvar slider_default = /*#__PURE__*/function () {\n  function _default(options) {\n    slider_classCallCheck(this, _default);\n\n    // hook functions\n    this._onSet = options.onSet || slider_noop;\n    this._onUnset = options.onUnset || slider_noop;\n    this._onChange = options.onChange || slider_noop;\n    this.domEvents = new domEvents_default();\n    this.lightbox = {\n      target: options.target,\n      current: 0,\n      total: 0,\n      direction: 'next',\n      directionValue: 100,\n      directionValue2: 70,\n      directionText: 100,\n      dir: 1,\n      progress: 0,\n      prev: 0,\n      next: 0,\n      duration: typeof options.duration !== 'undefined' ? options.duration : 1,\n      totalDuration: 1,\n      ease: 'expo.inOut',\n      animating: false,\n      tlAnimation: null\n    }; //asignamos el selector\n\n    this.$el = options.el;\n    this.$mySplitText = null;\n    this.selectors();\n    this.events();\n    this.init();\n  }\n\n  slider_createClass(_default, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$lightbox = this.lightbox.target;\n      this.$lightboxMask = this.$lightbox.querySelector('.lightbox__mask');\n      this.$lightboxInner = this.$lightbox.querySelector('.lightbox__inner');\n      this.$lightboxInnerItems = this.$lightboxInner.querySelectorAll('.lightbox__item');\n      this.$lightboxPrev = this.$lightbox.querySelector('.lightbox__prev');\n      this.$lightboxNext = this.$lightbox.querySelector('.lightbox__next');\n      this.$lightboxClose = this.$lightbox.querySelector('.lightbox__close');\n    }\n  }, {\n    key: \"events\",\n    value: function events() {\n      var _this = this;\n\n      this.domEvents.add(this.$lightboxPrev, 'click', function () {\n        _this.change('prev');\n      });\n      this.domEvents.add(this.$lightboxNext, 'click', function () {\n        _this.change('next');\n      });\n      this.domEvents.add(this.$lightboxClose, 'click', function () {\n        _this.unset();\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      //Set total count\n      this.lightbox.total = this.$lightboxInnerItems.length;\n\n      for (var i = 0; i < this.$lightboxInnerItems.length; i++) {\n        gsap/* default.set */.ZP.set(this.$lightboxInnerItems[i], {\n          display: 'none'\n        });\n      }\n\n      gsap/* default.set */.ZP.set(this.$lightboxInnerItems[0], {\n        display: 'block'\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(index) {\n      this._onSet(index);\n\n      gsap/* default.set */.ZP.set(this.$lightboxInnerItems[this.lightbox.prev], {\n        display: 'none'\n      });\n      gsap/* default.set */.ZP.set(this.$lightbox, {\n        display: 'block'\n      });\n      gsap/* default.to */.ZP.to(this.$lightboxMask, {\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 1\n      });\n      gsap/* default.to */.ZP.to(this.$lightboxInner, {\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 1,\n        delay: 0.5\n      });\n      gsap/* default.set */.ZP.set(this.$lightboxInnerItems[index], {\n        display: 'block'\n      }); // gsap.set(this.$lightboxInnerItems[index].querySelector('.background'), { x: '0%', y: '-100%' });\n      // gsap.set(this.$lightboxInnerItems[index].querySelector('.background .background__bg'), { y: '100%' });\n      // gsap.to(this.$lightboxInnerItems[index].querySelector('.background'), { y: '0%', duration: 1, ease: 'expo.out', delay: 0.5 });\n      // gsap.to(this.$lightboxInnerItems[index].querySelector('.background .background__bg'), { y: '0%', duration: 1, ease: 'expo.out', delay: 0.5 });\n\n      gsap/* default.to */.ZP.to([this.$lightboxPrev, this.$lightboxNext, this.$lightboxClose], {\n        opacity: 1,\n        duration: 1,\n        ease: 'expo.out',\n        delay: 0.5\n      });\n      this.lightbox.current = index;\n    }\n  }, {\n    key: \"unset\",\n    value: function unset() {\n      var _this2 = this;\n\n      this._onUnset(this.lightbox.current); // gsap.to(this.$lightboxInnerItems[this.lightbox.current].querySelector('.background'), { y: '100%', duration: 1, ease: 'expo.out', delay: 0 });\n      // gsap.to(this.$lightboxInnerItems[this.lightbox.current].querySelector('.background .background__bg'), { y: '-100%', duration: 1, ease: 'expo.out', delay: 0 });\n\n\n      gsap/* default.to */.ZP.to([this.$lightboxPrev, this.$lightboxNext, this.$lightboxClose], {\n        opacity: 0.0001,\n        duration: 1,\n        ease: 'expo.out',\n        delay: 0\n      });\n      gsap/* default.to */.ZP.to(this.$lightboxMask, {\n        opacity: 0.0001,\n        ease: 'expo.out',\n        duration: 1,\n        delay: 0.5\n      });\n      gsap/* default.to */.ZP.to(this.$lightboxInner, {\n        opacity: 0.0001,\n        ease: 'expo.out',\n        duration: 1\n      });\n      gsap/* default.delayedCall */.ZP.delayedCall(1.5, function () {\n        gsap/* default.set */.ZP.set(_this2.$lightbox, {\n          display: 'none'\n        });\n        gsap/* default.set */.ZP.set(_this2.$lightboxInnerItems[_this2.lightbox.current], {\n          display: 'none'\n        });\n        gsap/* default.set */.ZP.set(_this2.$lightboxInnerItems[_this2.lightbox.current].querySelector('.background'), {\n          y: '0%'\n        });\n        gsap/* default.set */.ZP.set(_this2.$lightboxInnerItems[_this2.lightbox.current].querySelector('.background .background__bg'), {\n          y: '0%'\n        });\n      });\n    }\n  }, {\n    key: \"change\",\n    value: function change(direction) {\n      var _this3 = this;\n\n      if (this.lightbox.animating) return;\n\n      this._onChange();\n\n      this.lightbox.animating = true;\n      this.lightbox.direction = direction;\n\n      if (direction === 'next') {\n        this.lightbox.next = (this.lightbox.current + 1) % this.lightbox.total;\n        this.lightbox.prev = this.lightbox.current === -1 ? this.lightbox.total - 1 : this.lightbox.current;\n        this.lightbox.dir = true;\n      } else {\n        this.lightbox.next = this.lightbox.current === 0 ? this.lightbox.total - 1 : this.lightbox.current - 1;\n        this.lightbox.prev = this.lightbox.current === -1 ? this.lightbox.total - 1 : this.lightbox.current;\n        this.lightbox.dir = false;\n      }\n\n      this.lightbox.current = this.lightbox.next; //Set next slide\n\n      gsap/* default.set */.ZP.set(this.$lightboxInnerItems[this.lightbox.next].querySelector('.background'), {\n        x: this.lightbox.dir ? '100%' : '-100%'\n      });\n      gsap/* default.set */.ZP.set(this.$lightboxInnerItems[this.lightbox.next], {\n        display: 'block'\n      }); //Animate out current slide\n\n      gsap/* default.to */.ZP.to(this.$lightboxInnerItems[this.lightbox.prev].querySelector('.background'), {\n        x: this.lightbox.dir ? '-100%' : '100%',\n        ease: 'expo.inOut',\n        duration: 1\n      });\n      gsap/* default.to */.ZP.to(this.$lightboxInnerItems[this.lightbox.next].querySelector('.background'), {\n        x: '0%',\n        ease: 'expo.inOut',\n        duration: 1\n      });\n      gsap/* default.delayedCall */.ZP.delayedCall(this.lightbox.duration, function () {\n        gsap/* default.set */.ZP.set(_this3.$lightboxInnerItems[_this3.lightbox.prev], {\n          display: 'none'\n        });\n        _this3.lightbox.animating = false;\n      });\n    }\n  }]);\n\n  return _default;\n}();\n\n\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererPromotionsSingle.js\nfunction rendererPromotionsSingle_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererPromotionsSingle_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererPromotionsSingle_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererPromotionsSingle_typeof(obj); }\n\nfunction rendererPromotionsSingle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererPromotionsSingle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererPromotionsSingle_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererPromotionsSingle_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererPromotionsSingle_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererPromotionsSingle_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererPromotionsSingle_setPrototypeOf(subClass, superClass); }\n\nfunction rendererPromotionsSingle_setPrototypeOf(o, p) { rendererPromotionsSingle_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererPromotionsSingle_setPrototypeOf(o, p); }\n\nfunction rendererPromotionsSingle_createSuper(Derived) { var hasNativeReflectConstruct = rendererPromotionsSingle_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererPromotionsSingle_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererPromotionsSingle_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererPromotionsSingle_possibleConstructorReturn(this, result); }; }\n\nfunction rendererPromotionsSingle_possibleConstructorReturn(self, call) { if (call && (rendererPromotionsSingle_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererPromotionsSingle_assertThisInitialized(self); }\n\nfunction rendererPromotionsSingle_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererPromotionsSingle_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererPromotionsSingle_getPrototypeOf(o) { rendererPromotionsSingle_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererPromotionsSingle_getPrototypeOf(o); }\n\n// Gsap\n\n // import Masonry from 'masonry-layout';\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n\n // Other\n// import Slider from '../classes/slider';\n// import SplitText from '../classes/splitText';\n\nvar RendererPromotionsSingle = /*#__PURE__*/function (_Renderer) {\n  rendererPromotionsSingle_inherits(RendererPromotionsSingle, _Renderer);\n\n  var _super = rendererPromotionsSingle_createSuper(RendererPromotionsSingle);\n\n  function RendererPromotionsSingle() {\n    rendererPromotionsSingle_classCallCheck(this, RendererPromotionsSingle);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererPromotionsSingle_createClass(RendererPromotionsSingle, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$hero = this.$el.querySelector('.promotionssingle__hero');\n      this.$background = this.$el.querySelector('.promotionssingle__background');\n      this.$content = this.$el.querySelector('.promotionssingle__content');\n      this.$featured = this.$el.querySelector('.promotionssingle__featured');\n      this.$gallery = this.$el.querySelector('.promotionssingle__gallery');\n      this.$from = this.$el.querySelector('.promotionssingle__from');\n      this.$related = this.$el.querySelector('.promotionssingle__related');\n      this.$form = this.$el.querySelector('.promotionssingle__form');\n      this.$footer = this.$el.querySelector('.promotionssingle__footer');\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      // Preloader\n      var _main = [];\n      if (this.$hero.querySelector('.image img')) _main.push(this.$hero.querySelector('.image img').src);\n      var _secondary = [];\n      if (this.$background.querySelector('.background__bg')) _main.push(this.$background.querySelector('.background__bg').style.backgroundImage.substring(5, this.$background.querySelector('.background__bg').style.backgroundImage.length - 2));\n      if (this.$featured.querySelector('.background__bg')) _main.push(this.$featured.querySelector('.background__bg').style.backgroundImage.substring(5, this.$featured.querySelector('.background__bg').style.backgroundImage.length - 2));\n      this.preloadItems = {\n        main: _main,\n        secondary: _secondary\n      };\n    }\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {\n      // Hide drag after click\n      this.appUi.leaveDragCursor();\n\n      if (this.appStore.isDesktop) {\n        gsap/* default.set */.ZP.set(this.$hero.querySelector('.image'), {\n          y: '-100%'\n        });\n        gsap/* default.set */.ZP.set(this.$hero.querySelector('.image img'), {\n          y: '100%'\n        });\n      }\n\n      gsap/* default.set */.ZP.set(this.$hero.querySelector('.mask .bg'), {\n        scaleY: this.appStore.isDesktop ? 0 : 1\n      });\n      gsap/* default.set */.ZP.set(this.$hero.querySelector('.mask .center'), {\n        opacity: 0.0001\n      });\n    }\n  }, {\n    key: \"preenter\",\n    value: function preenter() {\n      if (this.appStore.isDesktop) {\n        gsap/* default.to */.ZP.to(this.$hero.querySelector('.image'), {\n          y: '0%',\n          duration: this.appStore.firstNavigation ? 1.8 : 1.8,\n          ease: this.appStore.firstNavigation ? 'expo.inOut' : 'expo.out',\n          delay: 0\n        });\n        gsap/* default.to */.ZP.to(this.$hero.querySelector('.image img'), {\n          y: '0%',\n          duration: this.appStore.firstNavigation ? 1.8 : 1.8,\n          ease: this.appStore.firstNavigation ? 'expo.inOut' : 'expo.out',\n          delay: 0\n        });\n      }\n\n      gsap/* default.to */.ZP.to(this.$hero.querySelector('.mask .bg'), {\n        scaleY: 1,\n        duration: this.appStore.firstNavigation ? 1.6 : 1.6,\n        ease: this.appStore.firstNavigation ? 'expo.inOut' : 'expo.out',\n        delay: this.appStore.firstNavigation ? 0.2 : 0.2\n      });\n      gsap/* default.to */.ZP.to(this.$hero.querySelector('.mask .center'), {\n        opacity: 1,\n        ease: 'power2.out',\n        duration: 0.8,\n        delay: 1\n      });\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.appUi.$infoContent.querySelector('input[name=\"info-subject\"]').value = 'Información sobre ' + this.$hero.querySelector('.mask .center .title').getAttribute('data-title');\n      if (this.appStore.isDesktop) this.initScrolltitle();else this.initScrolltitleMobile();\n      this.initBackground();\n      this.initParallax();\n      this.initLightbox();\n      this.initGallery();\n      this.initRelated();\n    }\n  }, {\n    key: \"initScrolltitle\",\n    value: function initScrolltitle() {\n      var _this = this;\n\n      this.$scrolltitle = this.$el.querySelector('.scrolltitle');\n\n      if (this.$scrolltitle) {\n        this.$scrolltitleItems = this.$scrolltitle.children;\n        this.$scrolltitle.style.width = this.$scrolltitleItems[0].offsetWidth + 'px';\n        this.scrollTitleInnerLeft = gsap/* default.timeline */.ZP.timeline({\n          paused: false,\n          defaults: {\n            ease: 'none',\n            duration: this.$scrolltitleItems[0].offsetWidth / 300,\n            repeat: '-1',\n            onReverseComplete: function onReverseComplete() {\n              _this.scrollTitleInnerLeft.pause();\n\n              _this.scrollTitleInnerRight.play();\n            }\n          }\n        });\n\n        for (var i = 0; i < this.$scrolltitleItems.length; i++) {\n          this.scrollTitleInnerLeft.to(this.$scrolltitleItems[i], {\n            x: '-100%'\n          }, 0);\n        }\n\n        this.scrollTitleInnerRight = gsap/* default.timeline */.ZP.timeline({\n          paused: true,\n          defaults: {\n            ease: 'none',\n            duration: this.$scrolltitleItems[0].offsetWidth / 300,\n            repeat: '-1',\n            onReverseComplete: function onReverseComplete() {\n              _this.scrollTitleInnerRight.pause();\n\n              _this.scrollTitleInnerLeft.play();\n            }\n          }\n        });\n\n        for (var _i = 0; _i < this.$scrolltitleItems.length; _i++) {\n          this.scrollTitleInnerRight.to(this.$scrolltitleItems[_i], {\n            x: '100%'\n          }, 0);\n        }\n\n        this.scrollTitleOuter = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: this.$scrolltitle,\n            scrub: true,\n            start: 'top bottom',\n            end: 'bottom top',\n            onUpdate: function onUpdate(self) {\n              // this.scrollTitleInner.timeScale(self.direction);\n              if (!_this.scrollTitleInnerLeft.paused()) _this.scrollTitleInnerLeft.reversed(self.direction !== 1);\n              if (!_this.scrollTitleInnerRight.paused()) _this.scrollTitleInnerRight.reversed(self.direction === 1);\n            }\n          }\n        });\n        this.scrollTitleOuter.fromTo(this.$scrolltitle, {\n          x: window.innerWidth * 0.2\n        }, {\n          x: -window.innerWidth * 0.2\n        }, 0);\n      }\n    }\n  }, {\n    key: \"initScrolltitleMobile\",\n    value: function initScrolltitleMobile() {\n      this.$scrolltitles = this.$el.querySelectorAll('.scrolltitle');\n\n      if (this.$scrolltitles) {\n        for (var i = 0; i < this.$scrolltitles.length; i++) {\n          this.$scrolltitlesItems = this.$scrolltitles[i].children[0].children;\n          this.scrollTitleTimeline = gsap/* default.timeline */.ZP.timeline({\n            paused: false,\n            defaults: {\n              ease: 'none',\n              duration: this.$scrolltitlesItems.length * 8 + i * 10,\n              repeat: '-1'\n            }\n          });\n          this.scrollTitleTimeline.to(this.$scrolltitles[i].children, {\n            x: -100 + '%'\n          }, 0);\n        }\n      }\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      if (this.$background) {\n        gsap/* default.set */.ZP.set(this.$background.querySelector('.background .background__overlay'), {\n          opacity: 1\n        });\n        gsap/* default.set */.ZP.set(this.$background.querySelector('.background .background__bg'), {\n          y: '-80%',\n          scale: 1.2\n        });\n        var backgroundTimeline = gsap/* default.timeline */.ZP.timeline({\n          scrollTrigger: {\n            trigger: this.$background,\n            start: 'top bottom',\n            end: 'bottom top',\n            scrub: true // onToggle: (isActive) =>\n            // {\n            //     isActive ? this.$videoCover.querySelector('.video__player video').play() : this.$videoCover.querySelector('.video__player video').pause();\n            // }\n\n          },\n          defaults: {\n            duration: 1,\n            ease: 'none'\n          }\n        });\n        backgroundTimeline.to(this.$background.querySelector('.background .background__overlay'), {\n          opacity: 0.5,\n          duration: 0.5\n        }, 0);\n        backgroundTimeline.to(this.$background.querySelector('.background .background__bg'), {\n          y: '80%',\n          scale: 1,\n          duration: 1\n        }, 0);\n      }\n    }\n  }, {\n    key: \"initParallax\",\n    value: function initParallax() {\n      if (this.$content) {\n        gsap/* default.set */.ZP.set(this.$content.querySelector('.image--2'), {\n          y: '-5vw'\n        });\n        var contentTimeline = gsap/* default.timeline */.ZP.timeline({\n          scrollTrigger: {\n            trigger: this.$content,\n            start: 'top bottom',\n            end: 'bottom top',\n            scrub: true // onToggle: (isActive) =>\n            // {\n            //     isActive ? this.$videoCover.querySelector('.video__player video').play() : this.$videoCover.querySelector('.video__player video').pause();\n            // }\n\n          },\n          defaults: {\n            duration: 1,\n            ease: 'none'\n          }\n        });\n        contentTimeline.to(this.$content.querySelector('.image--2'), {\n          y: '5vw',\n          duration: 1\n        }, 0);\n      }\n\n      if (this.$featured) {\n        gsap/* default.set */.ZP.set(this.$featured.querySelector('.image'), {\n          y: '10vw'\n        });\n        var featuredTimeline = gsap/* default.timeline */.ZP.timeline({\n          scrollTrigger: {\n            trigger: this.$featured,\n            start: 'top bottom',\n            end: 'bottom top',\n            scrub: true // onToggle: (isActive) =>\n            // {\n            //     isActive ? this.$videoCover.querySelector('.video__player video').play() : this.$videoCover.querySelector('.video__player video').pause();\n            // }\n\n          },\n          defaults: {\n            duration: 1,\n            ease: 'none'\n          }\n        });\n        featuredTimeline.to(this.$featured.querySelector('.image'), {\n          y: '-10vw',\n          duration: 1\n        }, 0);\n      }\n    }\n  }, {\n    key: \"initLightbox\",\n    value: function initLightbox() {\n      var _this2 = this;\n\n      this.$lightbox = this.$el.querySelector('.lightbox');\n      this.lightbox = new slider_default({\n        target: this.$lightbox,\n        onUnset: function onUnset(index) {\n          _this2.closeLightbox(index);\n        }\n      });\n    }\n  }, {\n    key: \"initGallery\",\n    value: function initGallery() {\n      var _this3 = this;\n\n      if (this.$gallery) {\n        // Selectors\n        this.$galleryGrid = this.$gallery.querySelector('.grid');\n        this.$galleryGridInner = this.$gallery.querySelector('.grid__inner');\n        this.$galleryGridItems = this.$gallery.querySelectorAll('.grid__item');\n        this.$galleryButton = this.$gallery.querySelector('.button');\n        gsap/* default.set */.ZP.set(this.$galleryGrid, {\n          display: 'block'\n        });\n        this.domEvents.add(this.$galleryGrid, 'mouseenter', function (e, a, el) {\n          _this3.appUi.enterDragCursor();\n        });\n        this.domEvents.add(this.$galleryGrid, 'mouseleave', function (e, a, el) {\n          _this3.appUi.leaveDragCursor();\n        });\n        this.gallery = {\n          isZoomed: false,\n          isExpanded: false,\n          isAnimating: false,\n          count: 0,\n          margin: window.innerWidth * 0.05,\n          references: {\n            0: [15, 15, 0, 5],\n            1: [20, 15, 0, 25],\n            2: [20, 15, 20, 5],\n            3: [15, 10, 25, 25],\n            4: [30, 20, 45, 5],\n            5: [10, 15, 45, 30],\n            6: [15, 10, 60, 30],\n            7: [15, 10, 80, 5],\n            8: [20, 15, 80, 20],\n            9: [25, 40, 105, 5],\n            10: [15, 15, 135, 5],\n            11: [20, 15, 135, 25],\n            12: [20, 15, 155, 5],\n            13: [15, 10, 160, 25],\n            14: [30, 20, 180, 5],\n            15: [10, 15, 180, 30],\n            16: [15, 10, 195, 30],\n            17: [15, 10, 215, 5],\n            18: [20, 15, 215, 20]\n          },\n          relativeWidth: 0,\n          relativePositions: {},\n          absoluteWidth: 0,\n          absolutePositions: {}\n        };\n        this.gallery.count = this.$galleryGridItems.length; // Get absolute positions\n\n        for (var i = 0; i < this.$galleryGridItems.length; i++) {\n          var _width = window.innerWidth * this.gallery.references[i][0] / (this.appStore.isDeskop || this.appStore.client.orientation === 'horizontal' ? 100 : 50);\n\n          var _height = window.innerWidth * this.gallery.references[i][1] / (this.appStore.isDeskop || this.appStore.client.orientation === 'horizontal' ? 100 : 50);\n\n          var _left = window.innerWidth * this.gallery.references[i][2] / (this.appStore.isDeskop || this.appStore.client.orientation === 'horizontal' ? 100 : 50);\n\n          var _top = window.innerWidth * this.gallery.references[i][3] / (this.appStore.isDeskop || this.appStore.client.orientation === 'horizontal' ? 100 : 50);\n\n          var _ratio = 1 / ((window.innerHeight - window.innerWidth * 0.1) / _height);\n\n          var _multiplier = (window.innerHeight - window.innerWidth * 0.1) / _height;\n\n          this.gallery.absolutePositions[i] = [_width, _height, _left, _top, _ratio, _multiplier];\n        }\n\n        this.gallery.absoluteWidth = this.gallery.absolutePositions[this.gallery.count - 1][0] + this.gallery.absolutePositions[this.gallery.count - 1][2]; // Get relative positions\n\n        for (var _i2 = 0; _i2 < this.$galleryGridItems.length; _i2++) {\n          var _multiplier2 = this.gallery.absolutePositions[_i2][5];\n\n          var _width2 = _multiplier2 * this.gallery.absolutePositions[_i2][0];\n\n          var _height2 = _multiplier2 * this.gallery.absolutePositions[_i2][1];\n\n          var _left2 = _i2 === 0 ? 0 : this.gallery.relativePositions[_i2 - 1][2] + this.gallery.relativePositions[_i2 - 1][0] + this.gallery.margin;\n\n          var _top2 = window.innerWidth * 0.05;\n\n          this.gallery.relativePositions[_i2] = [_width2, _height2, _left2, _top2];\n        }\n\n        this.gallery.relativeWidth = this.gallery.relativePositions[this.gallery.count - 1][0] + this.gallery.relativePositions[this.gallery.count - 1][2]; // Set initial positions\n\n        var _loop = function _loop(_i3) {\n          if (_this3.gallery.isZoomed) {\n            _this3.$galleryGridItems[_i3].style.width = _this3.gallery.relativePositions[_i3][0] + 'px';\n            _this3.$galleryGridItems[_i3].style.height = _this3.gallery.relativePositions[_i3][1] + 'px';\n            _this3.$galleryGridItems[_i3].style.transform = 'translateX(' + _this3.gallery.relativePositions[_i3][2] + 'px) translateY(' + _this3.gallery.relativePositions[_i3][3] + 'px)';\n            _this3.$galleryGridItems[_i3].children[0].children[0].style.transform = 'scale(1)';\n          } else {\n            _this3.$galleryGridItems[_i3].style.width = _this3.gallery.relativePositions[_i3][0] + 'px';\n            _this3.$galleryGridItems[_i3].style.height = _this3.gallery.relativePositions[_i3][1] + 'px';\n            _this3.$galleryGridItems[_i3].style.transform = 'translateX(' + _this3.gallery.absolutePositions[_i3][2] + 'px) translateY(' + _this3.gallery.absolutePositions[_i3][3] + 'px) scale(' + _this3.gallery.absolutePositions[_i3][4] + ')';\n            _this3.$galleryGridItems[_i3].children[0].children[0].style.transform = 'scale(1.1)';\n          }\n\n          if (_this3.appStore.isDesktop) {\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3], 'mouseenter', function (e, a, el) {\n              _this3.enterImage(el);\n            });\n\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3], 'mouseleave', function (e, a, el) {\n              _this3.leaveImage(el);\n            });\n\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3].querySelector('.expand'), 'mouseenter', function (e, a, el) {\n              _this3.enterExpand(el);\n            });\n\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3].querySelector('.expand'), 'mouseleave', function (e, a, el) {\n              _this3.leaveExpand(el);\n            });\n\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3].querySelector('.expand'), 'click', function (e, a, el) {\n              _this3.clickExpand(e, a, el, _i3);\n            });\n\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3], 'click', function (e, a, el) {\n              if (_this3.gallery.isZoomed) _this3.compressGallery(_i3);else _this3.expandGallery(_i3);\n            });\n          } else {\n            _this3.domEvents.add(_this3.$galleryGridItems[_i3], 'click', function (e, a, el) {\n              _this3.clickExpand(e, a, el, _i3);\n            });\n          }\n        };\n\n        for (var _i3 = 0; _i3 < this.$galleryGridItems.length; _i3++) {\n          _loop(_i3);\n        }\n\n        if (!this.appStore.isDesktop) this.domEvents.add(this.$galleryButton, 'click', function (e, a, el) {\n          _this3.openLightbox(0);\n        });\n        if (this.gallery.isZoomed) this.$galleryGridInner.style.minWidth = this.gallery.relativeWidth + 'px';else this.$galleryGridInner.style.minWidth = this.gallery.absoluteWidth + 'px';\n\n        if (this.appStore.isDesktop) {\n          this.galleryDraggable = new superDragger_default({\n            el: this.$galleryGrid,\n            elClickables: this.$galleryGridItems,\n            inner: this.$galleryGridInner,\n            onDragStart: function onDragStart() {\n              if (!_this3.gallery.isZoomed && _this3.appStore.isDesktop) {\n                for (var _i4 = 0; _i4 < _this3.$galleryGridItems.length; _i4++) {\n                  gsap/* default.to */.ZP.to(_this3.$galleryGridItems[_i4].children[0].children[0], {\n                    scale: 1,\n                    ease: 'expo.out',\n                    duration: 1\n                  });\n                }\n              }\n\n              if (_this3.appStore.isDesktop) {\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDot, {\n                  scale: 0.6,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag, {\n                  scale: 0.6,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag.children[0], {\n                  opacity: 0.0001,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n              }\n\n              _this3.gallery.dragging = true;\n            },\n            onDragEnd: function onDragEnd() {\n              if (!_this3.gallery.isZoomed && _this3.appStore.isDesktop) {\n                for (var _i5 = 0; _i5 < _this3.$galleryGridItems.length; _i5++) {\n                  gsap/* default.to */.ZP.to(_this3.$galleryGridItems[_i5].children[0].children[0], {\n                    scale: 1.1,\n                    ease: 'expo.out',\n                    duration: 1\n                  });\n                }\n              }\n\n              if (_this3.appStore.isDesktop) {\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDot, {\n                  scale: 1,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag, {\n                  scale: 1,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag.children[0], {\n                  opacity: 1,\n                  duration: 0.3,\n                  ease: 'expo.out',\n                  delay: 0.1\n                });\n              }\n\n              _this3.gallery.dragging = false;\n            }\n          });\n        } else {\n          this.galleryDraggable = new Draggable_default({\n            target: this.$galleryGrid,\n            targetInner: this.$galleryGridInner,\n            onPress: function onPress() {\n              if (_this3.appStore.isDesktop) {\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDot, {\n                  scale: 0.6,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag, {\n                  scale: 0.6,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag.children[0], {\n                  opacity: 0.0001,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n              }\n\n              _this3.gallery.dragging = true;\n            },\n            onRelease: function onRelease() {\n              if (_this3.appStore.isDesktop) {\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDot, {\n                  scale: 1,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag, {\n                  scale: 1,\n                  duration: 0.3,\n                  ease: 'expo.out'\n                });\n                gsap/* default.to */.ZP.to(_this3.appUi.$cursorDrag.children[0], {\n                  opacity: 1,\n                  duration: 0.3,\n                  ease: 'expo.out',\n                  delay: 0.1\n                });\n              }\n\n              _this3.gallery.dragging = false;\n            },\n            onDragStart: function onDragStart(drag) {\n              if (!_this3.gallery.isZoomed && _this3.appStore.isDesktop) {\n                for (var _i6 = 0; _i6 < _this3.$galleryGridItems.length; _i6++) {\n                  gsap/* default.to */.ZP.to(_this3.$galleryGridItems[_i6].children[0].children[0], {\n                    scale: 1,\n                    ease: 'expo.out',\n                    duration: 1\n                  });\n                }\n              }\n            },\n            onDragEnd: function onDragEnd() {\n              if (!_this3.gallery.isZoomed && _this3.appStore.isDesktop) {\n                for (var _i7 = 0; _i7 < _this3.$galleryGridItems.length; _i7++) {\n                  gsap/* default.to */.ZP.to(_this3.$galleryGridItems[_i7].children[0].children[0], {\n                    scale: 1.1,\n                    ease: 'expo.out',\n                    duration: 1\n                  });\n                }\n              }\n            }\n          });\n        }\n\n        this.galleryTimeline = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: this.$gallery,\n            scrub: true,\n            start: 'top bottom',\n            end: 'bottom top'\n          }\n        });\n        this.galleryTimeline.fromTo(this.$galleryGrid, {\n          x: window.innerWidth * 0.1\n        }, {\n          x: -window.innerWidth * 0.1\n        }, 0);\n      }\n    }\n  }, {\n    key: \"compressGallery\",\n    value: function compressGallery(index) {\n      var _this4 = this;\n\n      if (this.gallery.isExpanded) return;\n      gsap/* default.to */.ZP.to(this.appUi.$cursorPlus, {\n        scale: 0.7,\n        rotation: '0deg',\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n        scale: 0.7,\n        rotation: '0deg',\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n\n      for (var i = 0; i < this.$galleryGridItems.length; i++) {\n        gsap/* default.killTweensOf */.ZP.killTweensOf(this.$galleryGridItems[i], this.$galleryGridItems[i].querySelector('.background .expand'));\n        var positions = this.gallery.absolutePositions[i];\n        var relativePositions = this.gallery.relativePositions[i];\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i], {\n          x: positions[2],\n          y: positions[3],\n          scale: positions[4],\n          duration: 1.4,\n          ease: 'expo.inOut'\n        });\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i].children[0].children[0], {\n          scale: 1.1,\n          duration: 1.4,\n          ease: 'expo.inOut'\n        });\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i].querySelector('.background .expand'), {\n          opacity: 0.0001,\n          duration: 0.2,\n          ease: 'power2.out'\n        });\n      }\n\n      this.$galleryGridInner.style.minWidth = this.gallery.absoluteWidth + 'px';\n      var $el = this.gallery.absolutePositions[index];\n      var center = $el[2] - window.innerWidth / 2 + $el[0] / 2;\n      var _maxX = 0;\n\n      var _minX = -(this.gallery.absoluteWidth - window.innerWidth);\n\n      var _center = Math.min(_maxX, Math.max(_minX, -center));\n\n      if (this.appStore.isDesktop) gsap/* default.to */.ZP.to([this.galleryDraggable._drag.livePosition, this.galleryDraggable._drag.position, this.galleryDraggable._drag.lastPosition], {\n        x: _center,\n        duration: 1.4,\n        ease: 'expo.inOut'\n      });\n      gsap/* default.to */.ZP.to(this.$galleryGridInner, {\n        x: _center,\n        duration: 1.4,\n        ease: 'expo.inOut',\n        onComplete: function onComplete() {\n          if (_this4.appStore.isDesktop) _this4.galleryDraggable.resize();else _this4.galleryDraggable.draggable[0].applyBounds();\n        }\n      });\n      this.gallery.isZoomed = false;\n    }\n  }, {\n    key: \"expandGallery\",\n    value: function expandGallery(index) {\n      var _this5 = this;\n\n      gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n        scale: 0.7,\n        rotation: '90deg',\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.appUi.$cursorPlus, {\n        scale: 0.7,\n        rotation: '90deg',\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n\n      for (var i = 0; i < this.$galleryGridItems.length; i++) {\n        gsap/* default.killTweensOf */.ZP.killTweensOf(this.$galleryGridItems[i]);\n        var positions = this.gallery.relativePositions[i];\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i], {\n          x: positions[2],\n          y: positions[3],\n          scale: 1,\n          duration: 1.4,\n          ease: 'expo.inOut'\n        });\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i].children[0].children[0], {\n          scale: 1,\n          duration: 1.4,\n          ease: 'expo.inOut'\n        });\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i].querySelector('.background .background__overlay2'), {\n          opacity: 0.0001,\n          duration: 0.2,\n          ease: 'power2.out'\n        });\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i].querySelector('.background .expand'), {\n          opacity: 1,\n          duration: 0.2,\n          ease: 'power2.out',\n          delay: 1.4\n        });\n      }\n\n      this.$galleryGridInner.style.minWidth = this.gallery.relativeWidth + 'px';\n      var $el = this.gallery.relativePositions[index];\n      var center = $el[2] - window.innerWidth / 2 + $el[0] / 2; // Center gallery\n\n      var offset = this.$gallery.getBoundingClientRect().top;\n      if (this.superScroller) this.superScroller.scrollAnimate(-this.superScroller._scroll.livePosition.y + offset, 1.4, 'expo.inOut');\n      var _maxX = 0;\n\n      var _minX = -(this.gallery.relativeWidth - window.innerWidth);\n\n      var _center = Math.min(_maxX, Math.max(_minX, -center));\n\n      if (this.appStore.isDesktop) gsap/* default.to */.ZP.to([this.galleryDraggable._drag.livePosition, this.galleryDraggable._drag.position, this.galleryDraggable._drag.lastPosition], {\n        x: _center,\n        duration: 1.4,\n        ease: 'expo.inOut'\n      });\n      gsap/* default.to */.ZP.to(this.$galleryGridInner, {\n        x: _center,\n        duration: 1.4,\n        ease: 'expo.inOut',\n        onComplete: function onComplete() {\n          if (_this5.appStore.isDesktop) _this5.galleryDraggable.resize();else _this5.galleryDraggable.draggable[0].applyBounds();\n        }\n      });\n      this.gallery.isZoomed = true;\n    }\n  }, {\n    key: \"openLightbox\",\n    value: function openLightbox(index) {\n      var _this6 = this;\n\n      gsap/* default.to */.ZP.to(this.appUi.$headerTrigger, {\n        opacity: 0.0001,\n        pointerEvents: 'none',\n        duration: 0.8,\n        ease: 'power2.out'\n      });\n      if (this.$infoTrigger) gsap/* default.to */.ZP.to(this.$infoTrigger, {\n        opacity: 0.0001,\n        pointerEvents: 'none',\n        duration: 0.8,\n        ease: 'power2.out'\n      });\n\n      if (this.superScroller) {\n        var offset = this.$gallery.getBoundingClientRect().top;\n        this.superScroller.scrollAnimate(-this.superScroller._scroll.livePosition.y + offset, 1.4, 'expo.inOut');\n        gsap/* default.delayedCall */.ZP.delayedCall(1.4, function () {\n          _this6.superScroller._scroll.enable = false;\n        });\n      }\n\n      for (var i = 0; i < this.$galleryGridItems.length; i++) {\n        gsap/* default.to */.ZP.to(this.$galleryGridItems[i].querySelector('.expand'), {\n          opacity: 0.0001,\n          duration: 0.2,\n          ease: 'power2.out'\n        });\n      }\n\n      this.lightbox.set(index);\n    }\n  }, {\n    key: \"closeLightbox\",\n    value: function closeLightbox(index) {\n      var $el = this.gallery.relativePositions[index];\n      var center = $el[2] - window.innerWidth / 2 + $el[0] / 2; // Center gallery\n\n      if (this.superScroller) {\n        this.superScroller._scroll.enable = true;\n        var offset = this.$gallery.getBoundingClientRect().top;\n        if (this.superScroller) this.superScroller.scrollAnimate(-this.superScroller._scroll.livePosition.y + offset, 1.4, 'expo.inOut');\n      }\n\n      var _maxX = 0;\n\n      var _minX = -(this.gallery.relativeWidth - window.innerWidth);\n\n      var _center = Math.min(_maxX, Math.max(_minX, -center));\n\n      if (this.appStore.isDesktop) gsap/* default.set */.ZP.set([this.galleryDraggable._drag.livePosition, this.galleryDraggable._drag.position, this.galleryDraggable._drag.lastPosition], {\n        x: _center\n      });\n      gsap/* default.set */.ZP.set(this.$galleryGridInner, {\n        x: _center\n      });\n      if (this.appStore.isDesktop) this.galleryDraggable.resize();else this.galleryDraggable.draggable[0].applyBounds();\n      gsap/* default.to */.ZP.to(this.appUi.$headerTrigger, {\n        opacity: 1,\n        pointerEvents: 'all',\n        duration: 0.8,\n        ease: 'power2.out',\n        delay: 1\n      });\n      if (this.$infoTrigger) gsap/* default.to */.ZP.to(this.$infoTrigger, {\n        opacity: 1,\n        pointerEvents: 'all',\n        duration: 0.8,\n        ease: 'power2.out',\n        delay: 1\n      });\n\n      if (this.appStore.isDesktop) {\n        for (var i = 0; i < this.$galleryGridItems.length; i++) {\n          gsap/* default.to */.ZP.to(this.$galleryGridItems[i].querySelector('.expand'), {\n            opacity: 1,\n            duration: 0.2,\n            ease: 'power2.out',\n            delay: 0\n          });\n        }\n      }\n\n      this.gallery.isExpanded = false;\n    }\n  }, {\n    key: \"enterImage\",\n    value: function enterImage(el) {\n      if (!this.gallery.dragging) {\n        if (!this.gallery.isZoomed) {\n          gsap/* default.to */.ZP.to(el.querySelector('.background .background__overlay2'), {\n            opacity: 1,\n            duration: 0.2,\n            ease: 'power2.out'\n          });\n          gsap/* default.to */.ZP.to(el.children[0].children[0], {\n            scale: 1,\n            ease: 'expo.out',\n            duration: 1\n          });\n          gsap/* default.killTweensOf */.ZP.killTweensOf([this.appUi.$cursorDrag, this.appUi.$cursorDrag.children[0], this.appUi.$cursorPlus, this.appUi.$cursorPlus.children[0]]);\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDot, {\n            scale: 0.7,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n            scale: 0.7,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorPlus, {\n            scale: 0.7,\n            opacity: 1,\n            duration: 0.3,\n            ease: 'expo.out'\n          }); //gsap.to(this.appUi.$cursorPlus.children[0], { opacity: 1, duration: 0.3, ease: 'expo.out' });\n\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag, {\n            scale: 0.7,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag.children[0], {\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n        } else {\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDot, {\n            scale: 0.7,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n            scale: 0.7,\n            opacity: 1,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorPlus, {\n            scale: 0.7,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          }); //gsap.to(this.appUi.$cursorMinus.children[0], { opacity: 1, duration: 0.3, ease: 'expo.out' });\n\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag, {\n            scale: 0.7,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag.children[0], {\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"leaveImage\",\n    value: function leaveImage(el) {\n      if (!this.gallery.dragging) {\n        if (!this.gallery.isZoomed) {\n          gsap/* default.to */.ZP.to(el.querySelector('.background .background__overlay2'), {\n            opacity: 0.0001,\n            duration: 0.2,\n            ease: 'power2.out'\n          });\n          gsap/* default.to */.ZP.to(el.children[0].children[0], {\n            scale: 1.1,\n            ease: 'expo.out',\n            duration: 1\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDot, {\n            scale: 1,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag, {\n            scale: 1,\n            opacity: 1,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag.children[0], {\n            opacity: 1,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n            scale: 1,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorPlus, {\n            scale: 1,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          }); //gsap.to(this.appUi.$cursorPlus.children[0], { scale: 1, opacity: 0.0001, duration: 0.3, ease: 'expo.out' });\n        } else {\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDot, {\n            scale: 1,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag, {\n            scale: 1,\n            opacity: 1,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorDrag.children[0], {\n            opacity: 1,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n            scale: 1,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          });\n          gsap/* default.to */.ZP.to(this.appUi.$cursorPlus, {\n            scale: 1,\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: 'expo.out'\n          }); //gsap.to(this.appUi.$cursorMinus.children[0], { scale: 1, opacity: 0.0001, duration: 0.3, ease: 'expo.out' });\n        }\n      }\n    }\n  }, {\n    key: \"enterExpand\",\n    value: function enterExpand() {\n      gsap/* default.to */.ZP.to(this.appUi.$cursorDot, {\n        scale: 0.35,\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n        scale: 0.35,\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      }); //gsap.to(this.appUi.$cursorMinus.children[0], { scale: 1, opacity: 0.0001, duration: 0.3, ease: 'expo.out' });\n    }\n  }, {\n    key: \"leaveExpand\",\n    value: function leaveExpand() {\n      gsap/* default.to */.ZP.to(this.appUi.$cursorDot, {\n        scale: 0.7,\n        opacity: 0.0001,\n        duration: 0.3,\n        ease: 'expo.out'\n      });\n      gsap/* default.to */.ZP.to(this.appUi.$cursorMinus, {\n        scale: 0.7,\n        opacity: 1,\n        duration: 0.3,\n        ease: 'expo.out'\n      }); //gsap.to(this.appUi.$cursorMinus.children[0], { opacity: 1, duration: 0.3, ease: 'expo.out' });\n    }\n  }, {\n    key: \"clickExpand\",\n    value: function clickExpand(e, a, el, index) {\n      this.gallery.isExpanded = true;\n      this.openLightbox(index);\n    }\n  }, {\n    key: \"resizeGallery\",\n    value: function resizeGallery() {\n      // Get absolute positions\n      for (var i = 0; i < this.$galleryGridItems.length; i++) {\n        var _width = window.innerWidth * this.gallery.references[i][0] / 100;\n\n        var _height = window.innerWidth * this.gallery.references[i][1] / 100;\n\n        var _left = window.innerWidth * this.gallery.references[i][2] / 100;\n\n        var _top = window.innerWidth * this.gallery.references[i][3] / 100;\n\n        var _ratio = 1 / ((window.innerHeight - window.innerWidth * 0.1) / _height);\n\n        var _multiplier = (window.innerHeight - window.innerWidth * 0.1) / _height;\n\n        this.gallery.absolutePositions[i] = [_width, _height, _left, _top, _ratio, _multiplier];\n      }\n\n      this.gallery.absoluteWidth = this.gallery.absolutePositions[this.gallery.count - 1][0] + this.gallery.absolutePositions[this.gallery.count - 1][2]; // Get relative positions\n\n      for (var _i8 = 0; _i8 < this.$galleryGridItems.length; _i8++) {\n        var _multiplier3 = this.gallery.absolutePositions[_i8][5];\n\n        var _width3 = _multiplier3 * this.gallery.absolutePositions[_i8][0];\n\n        var _height3 = _multiplier3 * this.gallery.absolutePositions[_i8][1];\n\n        var _left3 = _i8 === 0 ? 0 : this.gallery.relativePositions[_i8 - 1][2] + this.gallery.relativePositions[_i8 - 1][0] + this.gallery.margin;\n\n        var _top3 = window.innerWidth * 0.05;\n\n        this.gallery.relativePositions[_i8] = [_width3, _height3, _left3, _top3];\n      }\n\n      this.gallery.relativeWidth = this.gallery.relativePositions[this.gallery.count - 1][0] + this.gallery.relativePositions[this.gallery.count - 1][2];\n    }\n  }, {\n    key: \"initRelated\",\n    value: function initRelated() {\n      var _this7 = this;\n\n      // Selectors\n      this.$relatedSlider = this.$related.querySelector('.slider');\n      this.$relatedSliderInner = this.$related.querySelector('.slider__inner');\n      this.$relatedSliderItems = this.$related.querySelectorAll('.slider__item');\n      this.$relatedPromotions = this.$related.querySelectorAll('.promotion');\n\n      if (this.appStore.isDesktop) {\n        for (var i = 0; i < this.$relatedPromotions.length; i++) {\n          this.domEvents.add(this.$relatedPromotions[i], 'mouseenter', function (e, a, el) {\n            _this7.promotionEnter(el);\n          });\n          this.domEvents.add(this.$relatedPromotions[i], 'mouseleave', function (e, a, el) {\n            _this7.promotionLeave(el);\n          });\n        }\n\n        this.domEvents.add(this.$relatedSliderInner, 'mouseenter', function (e, a, el) {\n          _this7.appUi.enterDragCursor();\n        });\n        this.domEvents.add(this.$relatedSliderInner, 'mouseleave', function (e, a, el) {\n          _this7.appUi.leaveDragCursor();\n        });\n        this.relatedDraggable = new superDragger_default({\n          el: this.$relatedSlider,\n          elClickables: this.$relatedPromotions,\n          inner: this.$relatedSliderInner,\n          onDragStart: function onDragStart() {\n            _this7.superScroller._scroll.enable = false;\n\n            for (var _i9 = 0; _i9 < _this7.$relatedPromotions.length; _i9++) {\n              gsap/* default.to */.ZP.to(_this7.$relatedPromotions[_i9], {\n                scale: 0.94,\n                opacity: 1,\n                ease: 'expo.out',\n                duration: 0.6\n              });\n              gsap/* default.to */.ZP.to(_this7.$relatedPromotions[_i9].querySelector('.inner .background__bg'), {\n                scale: 1,\n                opacity: 1,\n                ease: 'expo.out',\n                duration: 0.6\n              });\n            }\n          },\n          onDragEnd: function onDragEnd() {\n            _this7.superScroller._scroll.enable = true;\n\n            for (var _i10 = 0; _i10 < _this7.$relatedPromotions.length; _i10++) {\n              gsap/* default.to */.ZP.to(_this7.$relatedPromotions[_i10], {\n                scale: 1,\n                opacity: 1,\n                ease: 'expo.out',\n                duration: 0.6\n              });\n              gsap/* default.to */.ZP.to(_this7.$relatedPromotions[_i10].querySelector('.inner .background__bg'), {\n                scale: 1.1,\n                ease: 'expo.out',\n                duration: 0.6\n              });\n            }\n          }\n        });\n      } else {\n        this.relatedDraggable = new Draggable_default({\n          target: this.$relatedSlider,\n          targetInner: this.$relatedSliderInner,\n          snap: true\n        });\n      }\n    }\n  }, {\n    key: \"promotionEnter\",\n    value: function promotionEnter(el) {\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .background__bg'), {\n        scale: 1,\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n    }\n  }, {\n    key: \"promotionLeave\",\n    value: function promotionLeave(el) {\n      if (this.relatedDraggable && this.relatedDraggable._drag.dragging) return;\n      gsap/* default.to */.ZP.to(el.querySelector('.inner .background__bg'), {\n        scale: 1.1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: \"resize\",\n    value: function resize() {// if(this.lightboxDraggable)\n      //     this.lightboxDraggable.resize();\n      // this.resizeGallery();\n    }\n  }]);\n\n  return RendererPromotionsSingle;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererPromotionsSingle = (RendererPromotionsSingle);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererMasterworks.js\nfunction rendererMasterworks_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererMasterworks_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererMasterworks_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererMasterworks_typeof(obj); }\n\nfunction rendererMasterworks_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererMasterworks_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererMasterworks_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererMasterworks_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererMasterworks_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererMasterworks_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererMasterworks_setPrototypeOf(subClass, superClass); }\n\nfunction rendererMasterworks_setPrototypeOf(o, p) { rendererMasterworks_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererMasterworks_setPrototypeOf(o, p); }\n\nfunction rendererMasterworks_createSuper(Derived) { var hasNativeReflectConstruct = rendererMasterworks_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererMasterworks_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererMasterworks_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererMasterworks_possibleConstructorReturn(this, result); }; }\n\nfunction rendererMasterworks_possibleConstructorReturn(self, call) { if (call && (rendererMasterworks_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererMasterworks_assertThisInitialized(self); }\n\nfunction rendererMasterworks_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererMasterworks_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererMasterworks_getPrototypeOf(o) { rendererMasterworks_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererMasterworks_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n // Other\n// import Slider from '../classes/slider';\n// import SplitText from '../classes/splitText';\n\nvar RendererMasterworks = /*#__PURE__*/function (_Renderer) {\n  rendererMasterworks_inherits(RendererMasterworks, _Renderer);\n\n  var _super = rendererMasterworks_createSuper(RendererMasterworks);\n\n  function RendererMasterworks() {\n    rendererMasterworks_classCallCheck(this, RendererMasterworks);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererMasterworks_createClass(RendererMasterworks, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$hero = this.$el.querySelector('.masterworks__hero');\n      this.$intro = this.$el.querySelector('.masterworks__intro');\n      this.$features = this.$el.querySelector('.masterworks__features');\n      if (this.$features) this.$featuresItems = this.$features.querySelectorAll('.features__item');\n    }\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {\n      if (this.appStore.isDesktop) {\n        gsap/* default.set */.ZP.set(this.$hero.querySelector('.image'), {\n          y: '-100%'\n        });\n        gsap/* default.set */.ZP.set(this.$hero.querySelector('.image img'), {\n          y: '100%'\n        });\n      }\n\n      gsap/* default.set */.ZP.set(this.$hero.querySelector('.mask .bg'), {\n        scaleY: this.appStore.isDesktop ? 0 : 1\n      });\n      gsap/* default.set */.ZP.set(this.$hero.querySelector('.mask .center'), {\n        opacity: 0.0001\n      });\n    }\n  }, {\n    key: \"preenter\",\n    value: function preenter() {\n      if (this.appStore.isDesktop) {\n        gsap/* default.to */.ZP.to(this.$hero.querySelector('.image'), {\n          y: '0%',\n          duration: 1.8,\n          ease: 'expo.inOut',\n          delay: 0\n        });\n        gsap/* default.to */.ZP.to(this.$hero.querySelector('.image img'), {\n          y: '0%',\n          duration: 1.8,\n          ease: 'expo.inOut',\n          delay: 0\n        });\n      }\n\n      gsap/* default.to */.ZP.to(this.$hero.querySelector('.mask .bg'), {\n        scaleY: 1,\n        duration: 1.6,\n        ease: 'expo.inOut',\n        delay: 0.2\n      });\n      gsap/* default.to */.ZP.to(this.$hero.querySelector('.mask .center'), {\n        opacity: 1,\n        ease: 'power2.out',\n        duration: 0.8,\n        delay: 1\n      });\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.appUi.$infoContent.querySelector('input[name=\"info-subject\"]').value = 'Información sobre Masterworks';\n      if (this.appStore.isDesktop) this.parallaxHero();\n      this.initFeatures();\n    }\n  }, {\n    key: \"parallaxHero\",\n    value: function parallaxHero() {\n      var _this = this;\n\n      if (this.$hero) {\n        var offset = -(window.innerWidth * 0.05);\n        this.superTrigger.create({\n          trigger: this.$hero,\n          start: 'top top',\n          end: 'bottom top',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            gsap/* default.to */.ZP.to(_this.$hero.querySelector('.image img'), {\n              scale: 1 + 0.1 * self.progress\n            });\n            gsap/* default.to */.ZP.to(_this.$hero.querySelector('.mask .bg'), {\n              y: offset * self.progress\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"initFeatures\",\n    value: function initFeatures() {\n      var _this2 = this;\n\n      this.featuresTimelines = [];\n\n      var _loop = function _loop(i) {\n        if (!_this2.appStore.isDesktop) {\n          _this2.domEvents.add(_this2.$featuresItems[i].querySelector('.trigger'), 'click', function () {\n            // Close menu\n            gsap/* default.to */.ZP.to(_this2.appUi.$header, {\n              y: '-100%',\n              duration: 1.4,\n              ease: 'expo.inOut'\n            });\n            _this2.appUi.header.isLocked = true;\n\n            var offset = _this2.$featuresItems[i].getBoundingClientRect().top;\n\n            _this2.appUi.previousScroll = document.documentElement.scrollTop + offset - 1;\n            gsap/* default.to */.ZP.to(document.documentElement, {\n              scrollTop: document.documentElement.scrollTop + offset,\n              duration: 1.4,\n              ease: 'expo.inOut',\n              onComplete: function onComplete() {\n                _this2.appUi.header.isLocked = false;\n              }\n            });\n\n            if (_this2.$featuresItems[i].classList.contains('open')) {\n              gsap/* default.to */.ZP.to(_this2.$featuresItems[i].querySelector('.info'), {\n                y: '50%',\n                ease: 'expo.inOut',\n                duration: 1.4\n              });\n              gsap/* default.to */.ZP.to(_this2.$featuresItems[i].querySelector('.info .wysiwyg'), {\n                opacity: 0.0001,\n                ease: 'power2.out',\n                duration: 0.4,\n                delay: 0\n              });\n\n              _this2.$featuresItems[i].classList.remove('open');\n            } else {\n              gsap/* default.to */.ZP.to(_this2.$featuresItems[i].querySelector('.info'), {\n                y: '0%',\n                ease: 'expo.inOut',\n                duration: 1.4\n              });\n              gsap/* default.to */.ZP.to(_this2.$featuresItems[i].querySelector('.info .wysiwyg'), {\n                opacity: 1,\n                ease: 'power2.out',\n                duration: 0.4,\n                delay: 1\n              });\n\n              _this2.$featuresItems[i].classList.add('open');\n            }\n          });\n        }\n\n        gsap/* default.set */.ZP.set(_this2.$featuresItems[i].querySelector('.background__bg'), {\n          y: _this2.appStore.isDesktop ? -window.innerHeight + 200 : -(window.innerHeight * 0.5) + 200,\n          scale: 1.2\n        }, 0);\n        gsap/* default.set */.ZP.set(_this2.$featuresItems[i].querySelector('.background__mask'), {\n          opacity: 1\n        }, 0);\n        var featureTimeline = gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: 'none'\n          },\n          scrollTrigger: {\n            trigger: _this2.$featuresItems[i].querySelector('.background'),\n            scrub: true,\n            start: 'top bottom',\n            end: 'bottom bottom'\n          }\n        });\n        featureTimeline.to(_this2.$featuresItems[i].querySelector('.background__bg'), {\n          y: 0,\n          scale: 1\n        }, 0);\n        featureTimeline.to(_this2.$featuresItems[i].querySelector('.background__mask'), {\n          opacity: 0.0001,\n          duration: 0.5\n        }, 0);\n\n        _this2.featuresTimelines.push(featureTimeline);\n      };\n\n      for (var i = 0; i < this.$featuresItems.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererMasterworks;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererMasterworks = (RendererMasterworks);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererBlog.js\nfunction rendererBlog_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererBlog_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererBlog_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererBlog_typeof(obj); }\n\nfunction rendererBlog_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererBlog_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererBlog_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererBlog_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererBlog_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererBlog_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererBlog_setPrototypeOf(subClass, superClass); }\n\nfunction rendererBlog_setPrototypeOf(o, p) { rendererBlog_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererBlog_setPrototypeOf(o, p); }\n\nfunction rendererBlog_createSuper(Derived) { var hasNativeReflectConstruct = rendererBlog_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererBlog_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererBlog_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererBlog_possibleConstructorReturn(this, result); }; }\n\nfunction rendererBlog_possibleConstructorReturn(self, call) { if (call && (rendererBlog_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererBlog_assertThisInitialized(self); }\n\nfunction rendererBlog_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererBlog_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererBlog_getPrototypeOf(o) { rendererBlog_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererBlog_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n // Other\n// import Slider from '../classes/slider';\n\n\n\nvar RendererBlog = /*#__PURE__*/function (_Renderer) {\n  rendererBlog_inherits(RendererBlog, _Renderer);\n\n  var _super = rendererBlog_createSuper(RendererBlog);\n\n  function RendererBlog() {\n    rendererBlog_classCallCheck(this, RendererBlog);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererBlog_createClass(RendererBlog, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$list = this.$el.querySelector('.blog__list');\n\n      if (this.$list) {\n        this.$listFilter = this.$list.querySelector('.filter');\n        this.$listFilterTrigger = this.$list.querySelector('.filter__trigger');\n        this.$listFilterInner = this.$list.querySelector('.filter__inner');\n        this.$listFilterItems = this.$list.querySelectorAll('.filter__item');\n      }\n    }\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {\n      this.setPosts();\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.initPosts();\n      if (this.appStore.isDesktop) this.pinFilter();else this.initFilter();\n    }\n  }, {\n    key: \"initFilter\",\n    value: function initFilter() {\n      var _this = this;\n\n      this.filter = {\n        isOpen: false\n      };\n      gsap/* default.set */.ZP.set(this.$listFilterInner, {\n        opacity: 0.0001\n      });\n\n      if (this.$listFilterTrigger) {\n        this.domEvents.add(this.$listFilterTrigger, 'click', function () {\n          if (_this.filter.isOpen) _this.hideFilter();else _this.showFilter();\n        });\n      }\n    }\n  }, {\n    key: \"showFilter\",\n    value: function showFilter() {\n      gsap/* default.to */.ZP.to(this.$listFilterInner, {\n        opacity: 1,\n        ease: 'powe2.out',\n        duration: 0.2\n      });\n      this.filter.isOpen = true;\n    }\n  }, {\n    key: \"hideFilter\",\n    value: function hideFilter() {\n      gsap/* default.to */.ZP.to(this.$listFilterInner, {\n        opacity: 0.0001,\n        ease: 'powe2.out',\n        duration: 0.2\n      });\n      this.filter.isOpen = false;\n    }\n  }, {\n    key: \"pinFilter\",\n    value: function pinFilter() {\n      var _this2 = this;\n\n      if (this.$listFilter) {\n        var offset = this.$list.getBoundingClientRect().height - (this.$listFilter.getBoundingClientRect().height + window.innerWidth * 0.20);\n        this.superTrigger.create({\n          trigger: this.$list,\n          start: 'top top',\n          end: 'bottom ' + (this.$listFilter.getBoundingClientRect().height + window.innerWidth * 0.20) + 'px',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            gsap/* default.set */.ZP.set(_this2.$listFilter, {\n              y: offset * self.progress\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"setPosts\",\n    value: function setPosts() {\n      var _this3 = this;\n\n      this.$posts = this.$el.querySelectorAll('.post');\n\n      if (this.$posts) {\n        for (var i = 0; i < this.$posts.length; i++) {\n          // Set el\n          if (this.appStore.isDesktop) {\n            gsap/* default.set */.ZP.set(this.$posts[i].querySelector('.image img'), {\n              scale: 1.1\n            });\n            this.domEvents.add(this.$posts[i], 'mouseenter', function (e, a, el) {\n              _this3.enterPost(e, a, el);\n            });\n            this.domEvents.add(this.$posts[i], 'mouseleave', function (e, a, el) {\n              _this3.leavePost(e, a, el);\n            });\n          } // Set titles\n\n\n          var $title = this.$posts[i].querySelector('.title');\n          new SplitText($title, {\n            type: 'lines, words',\n            linesClass: 'line line--++',\n            wordsClass: 'word word--++',\n            charsClass: 'char char--++'\n          }); // eslint-disable-line\n\n          $title.classList.add('split');\n          var lines = $title.querySelectorAll('.line');\n\n          for (var j = 0; j < lines.length; j++) {\n            gsap/* default.set */.ZP.set(lines[j], {\n              opacity: 0.0001,\n              y: '100%'\n            });\n          } // Set link\n\n\n          var $link = this.$posts[i].querySelector('.link');\n          gsap/* default.set */.ZP.set($link, {\n            y: '100%',\n            opacity: 0.0001\n          });\n          gsap/* default.set */.ZP.set($link.children[0], {\n            opacity: 0.0001\n          });\n          gsap/* default.set */.ZP.set($link.querySelector('svg'), {\n            opacity: 0.0001,\n            rotation: '450deg'\n          });\n          gsap/* default.set */.ZP.set($link.querySelector('svg circle'), {\n            strokeDashoffset: '1181.24px'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"initPosts\",\n    value: function initPosts() {\n      var _this4 = this;\n\n      if (this.$posts) {\n        var _loop = function _loop(i) {\n          var _delay = i % 2 ? 0 : 0.1;\n\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this4.$posts[i],\n            start: 'center bottom',\n            once: true,\n            onEnter: function onEnter() {\n              // Trigger el\n              //gsap.to(this.$posts[i], { opacity: 1, y: '0%', ease: 'expo.out', duration: 2, delay: _delay });\n              // Trigger titles\n              var $title = _this4.$posts[i].querySelector('.title');\n\n              var lines = $title.querySelectorAll('.line');\n\n              for (var j = 0; j < lines.length; j++) {\n                gsap/* default.to */.ZP.to(lines[j], {\n                  opacity: 1,\n                  y: '0%',\n                  ease: 'expo.out',\n                  duration: 2,\n                  delay: j * 0.1 + _delay\n                });\n              } // Trigger links\n\n\n              var $link = _this4.$posts[i].querySelector('.link');\n\n              gsap/* default.to */.ZP.to($link, {\n                y: 0,\n                opacity: 1,\n                duration: 2,\n                ease: 'expo.out',\n                delay: _delay\n              });\n              gsap/* default.to */.ZP.to($link.children[0], {\n                opacity: 1,\n                duration: 2,\n                ease: 'expo.out',\n                delay: _delay\n              });\n              gsap/* default.to */.ZP.to($link.querySelector('svg'), {\n                opacity: 1,\n                rotation: '0',\n                duration: 2,\n                ease: 'expo.out',\n                delay: _delay\n              });\n              gsap/* default.to */.ZP.to($link.querySelector('svg circle'), {\n                strokeDashoffset: '0px',\n                duration: 2,\n                ease: 'expo.out',\n                delay: _delay\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$posts.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: \"enterPost\",\n    value: function enterPost(e, a, el) {\n      gsap/* default.to */.ZP.to(el.querySelector('.image img'), {\n        scale: 1,\n        opacity: 1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.killTweensOf */.ZP.killTweensOf([el.querySelector('svg'), el.querySelector('svg circle')]);\n      gsap/* default.to */.ZP.to(el.querySelector('svg'), {\n        rotation: '450deg',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('svg circle'), {\n        strokeDashoffset: '1181.24px',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n    }\n  }, {\n    key: \"leavePost\",\n    value: function leavePost(e, a, el) {\n      gsap/* default.to */.ZP.to(el.querySelector('.image img'), {\n        scale: 1.1,\n        ease: 'expo.out',\n        duration: 0.6\n      });\n      gsap/* default.killTweensOf */.ZP.killTweensOf([el.querySelector('svg'), el.querySelector('svg circle')]);\n      gsap/* default.to */.ZP.to(el.querySelector('svg'), {\n        rotation: '0deg',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n      gsap/* default.to */.ZP.to(el.querySelector('svg circle'), {\n        strokeDashoffset: '0px',\n        ease: 'expo.out',\n        duration: 0.8\n      });\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererBlog;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererBlog = (RendererBlog);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererBlogSingle.js\nfunction rendererBlogSingle_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { rendererBlogSingle_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererBlogSingle_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return rendererBlogSingle_typeof(obj); }\n\nfunction rendererBlogSingle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rendererBlogSingle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererBlogSingle_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererBlogSingle_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererBlogSingle_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererBlogSingle_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererBlogSingle_setPrototypeOf(subClass, superClass); }\n\nfunction rendererBlogSingle_setPrototypeOf(o, p) { rendererBlogSingle_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererBlogSingle_setPrototypeOf(o, p); }\n\nfunction rendererBlogSingle_createSuper(Derived) { var hasNativeReflectConstruct = rendererBlogSingle_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererBlogSingle_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererBlogSingle_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererBlogSingle_possibleConstructorReturn(this, result); }; }\n\nfunction rendererBlogSingle_possibleConstructorReturn(self, call) { if (call && (rendererBlogSingle_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return rendererBlogSingle_assertThisInitialized(self); }\n\nfunction rendererBlogSingle_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction rendererBlogSingle_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererBlogSingle_getPrototypeOf(o) { rendererBlogSingle_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererBlogSingle_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n\n // Other\n// import Slider from '../classes/slider';\n// import SplitText from '../classes/splitText';\n\nvar RendererBlogSingle = /*#__PURE__*/function (_Renderer) {\n  rendererBlogSingle_inherits(RendererBlogSingle, _Renderer);\n\n  var _super = rendererBlogSingle_createSuper(RendererBlogSingle);\n\n  function RendererBlogSingle() {\n    rendererBlogSingle_classCallCheck(this, RendererBlogSingle);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererBlogSingle_createClass(RendererBlogSingle, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$flex = this.$el.querySelector('.blogsingle__flex');\n    }\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.initGalleries();\n      this.initVideos();\n    }\n  }, {\n    key: \"initGalleries\",\n    value: function initGalleries() {\n      var _this = this;\n\n      this.galleries = [];\n      this.$galleries = this.$flex.querySelectorAll('.gallery');\n\n      if (this.$galleries) {\n        var _loop = function _loop(i) {\n          var images = _this.$galleries[0].querySelectorAll('.image');\n\n          var ratio = images[0].style.getPropertyValue('--aspectratio');\n          if (_this.appStore.isDesktop) gsap/* default.set */.ZP.set(_this.$galleries[i], {\n            width: 30 * ratio + 'vw'\n          });else gsap/* default.set */.ZP.set(_this.$galleries[i], {\n            width: 70 * ratio + 'vw'\n          });\n          var gallery = new Draggable_default({\n            target: _this.$galleries[i],\n            targetInner: _this.$galleries[i].children[0],\n            onDrag: function onDrag() {\n              gsap/* default.to */.ZP.to(_this.$galleries[i].children[1].children[0], {\n                scaleX: _this.galleries[i].draggable[0].x / _this.galleries[i].draggable[0].minX\n              });\n            }\n          });\n\n          _this.galleries.push(gallery);\n        };\n\n        for (var i = 0; i < this.$galleries.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: \"initVideos\",\n    value: function initVideos() {\n      var _this2 = this;\n\n      this.videos = [];\n      this.$videos = this.$flex.querySelectorAll('.video');\n\n      if (this.$videos) {\n        var _loop2 = function _loop2(i) {\n          _this2.domEvents.add(_this2.$videos[i].querySelector('.video__trigger'), 'click', function (e, a, el) {\n            gsap/* default.to */.ZP.to(_this2.$videos[i].querySelector('.video__overlay'), {\n              opacity: 0.0001,\n              ease: 'expo.out',\n              duration: 0.8\n            });\n            gsap/* default.to */.ZP.to(_this2.$videos[i].querySelector('.video__trigger'), {\n              scale: 0,\n              opacity: 0.0001,\n              ease: 'expo.out',\n              duration: 0.8\n            });\n            _this2.$videos[i].querySelector('.video__player').style.pointerEvents = 'all';\n\n            _this2.$videos[i].querySelector('.video__player video').setAttribute('controls', 'controls');\n\n            _this2.$videos[i].querySelector('.video__player video').play();\n          });\n        };\n\n        for (var i = 0; i < this.$videos.length; i++) {\n          _loop2(i);\n        }\n      }\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererBlogSingle;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const rendererBlogSingle = (RendererBlogSingle);\n;// CONCATENATED MODULE: ./app/src/js/renderers/RendererContact.js\nfunction RendererContact_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { RendererContact_typeof = function _typeof(obj) { return typeof obj; }; } else { RendererContact_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return RendererContact_typeof(obj); }\n\nfunction RendererContact_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RendererContact_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RendererContact_createClass(Constructor, protoProps, staticProps) { if (protoProps) RendererContact_defineProperties(Constructor.prototype, protoProps); if (staticProps) RendererContact_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction RendererContact_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) RendererContact_setPrototypeOf(subClass, superClass); }\n\nfunction RendererContact_setPrototypeOf(o, p) { RendererContact_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RendererContact_setPrototypeOf(o, p); }\n\nfunction RendererContact_createSuper(Derived) { var hasNativeReflectConstruct = RendererContact_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RendererContact_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RendererContact_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RendererContact_possibleConstructorReturn(this, result); }; }\n\nfunction RendererContact_possibleConstructorReturn(self, call) { if (call && (RendererContact_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return RendererContact_assertThisInitialized(self); }\n\nfunction RendererContact_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction RendererContact_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction RendererContact_getPrototypeOf(o) { RendererContact_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RendererContact_getPrototypeOf(o); }\n\n// Gsap\n\n\ngsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // import stylesDefault from './stylesDefault.css'; //eslint-disable-line\n// Utilities\n\n\n // Other\n// import Slider from '../classes/slider';\n// import SplitText from '../classes/splitText';\n\nvar RendererContact = /*#__PURE__*/function (_Renderer) {\n  RendererContact_inherits(RendererContact, _Renderer);\n\n  var _super = RendererContact_createSuper(RendererContact);\n\n  function RendererContact() {\n    RendererContact_classCallCheck(this, RendererContact);\n\n    return _super.apply(this, arguments);\n  }\n\n  RendererContact_createClass(RendererContact, [{\n    key: \"selectors\",\n    value: function selectors() {\n      this.$hero = this.$el.querySelector('.contact__hero');\n\n      if (this.$hero) {\n        this.$heroPin = this.$hero.querySelector('.subcolumns__item--pin');\n        this.$heroFix = this.$hero.querySelector('.subcolumns__item--fix');\n        this.$heroParallax = this.$hero.querySelector('.subcolumns__item--parallax');\n      }\n    } // preload()\n    // {\n    //     // Preloader\n    //     const _main = [];\n    //     const _secondary = [];\n    //     this.preloadItems = {\n    //         main: _main,\n    //         secondary: _secondary\n    //     };\n    // }\n\n  }, {\n    key: \"events\",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: \"beforeEnter\",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.appUi.$infoContent.querySelector('input[name=\"info-subject\"]').value = 'Información general';\n\n      if (this.appStore.isDesktop) {\n        this.pinSidebar();\n        this.parallaxSidebar();\n      }\n    }\n  }, {\n    key: \"pinSidebar\",\n    value: function pinSidebar() {\n      var _this = this;\n\n      if (this.$heroPin) {\n        var offset = this.$hero.getBoundingClientRect().height - this.$heroPin.getBoundingClientRect().height - this.$heroFix.getBoundingClientRect().height - window.innerWidth * 0.25;\n        this.superTrigger.create({\n          trigger: this.$hero,\n          start: 'top top',\n          end: offset + 'px top',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            gsap/* default.set */.ZP.set(_this.$heroPin, {\n              y: offset * self.progress\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"parallaxSidebar\",\n    value: function parallaxSidebar() {\n      var _this2 = this;\n\n      if (this.$heroParallax) {\n        var offset = -(window.innerWidth * 0.05);\n        this.superTrigger.create({\n          trigger: this.$hero,\n          start: 'top top',\n          end: 'bottom bottom',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            gsap/* default.set */.ZP.set(_this2.$heroParallax, {\n              y: offset * self.progress\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"raf\",\n    value: function raf() {} // eslint-disable-line\n\n  }]);\n\n  return RendererContact;\n}(renderer); // Don`t forget to export your renderer\n\n\n/* harmony default export */ const renderers_RendererContact = (RendererContact);\n;// CONCATENATED MODULE: ./app/src/js/transitions/transition.js\nfunction transition_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { transition_typeof = function _typeof(obj) { return typeof obj; }; } else { transition_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return transition_typeof(obj); }\n\nfunction transition_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction transition_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transition_createClass(Constructor, protoProps, staticProps) { if (protoProps) transition_defineProperties(Constructor.prototype, protoProps); if (staticProps) transition_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction transition_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) transition_setPrototypeOf(subClass, superClass); }\n\nfunction transition_setPrototypeOf(o, p) { transition_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return transition_setPrototypeOf(o, p); }\n\nfunction transition_createSuper(Derived) { var hasNativeReflectConstruct = transition_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = transition_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = transition_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return transition_possibleConstructorReturn(this, result); }; }\n\nfunction transition_possibleConstructorReturn(self, call) { if (call && (transition_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return transition_assertThisInitialized(self); }\n\nfunction transition_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction transition_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction transition_getPrototypeOf(o) { transition_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return transition_getPrototypeOf(o); }\n\n// App\n\n\n // Highway\n\n // Preload\n\n // GSAP Library\n\n\n // Transition\n\nvar Transition = /*#__PURE__*/function (_Highway$Transition) {\n  transition_inherits(Transition, _Highway$Transition);\n\n  var _super = transition_createSuper(Transition);\n\n  function Transition() {\n    transition_classCallCheck(this, Transition);\n\n    return _super.apply(this, arguments);\n  }\n\n  transition_createClass(Transition, [{\n    key: \"out\",\n    value: function out(_ref) {\n      var from = _ref.from,\n          done = _ref.done;\n      // Store\n      this.appStore = appStore; // App references\n\n      this.appCore = new app_appCore();\n      this.appUi = new app_appUi();\n      if (this.preloadMain) this.preloadMain.cancel();\n      if (this.preloadSecondary) this.preloadSecondary.cancel(); // Out animation\n\n      this.outAnimation(from, done);\n    }\n  }, {\n    key: \"outAnimation\",\n    value: function outAnimation(from, done) {\n      from.remove();\n      done();\n    }\n  }, {\n    key: \"in\",\n    value: function _in(_ref2) {\n      var _this = this;\n\n      var from = _ref2.from,\n          to = _ref2.to,\n          done = _ref2.done;\n      // Store\n      this.appStore = appStore; // App references\n\n      this.appCore = new app_appCore();\n      this.appUi = new app_appUi(); // Preloader\n\n      this.preloadMain = null;\n      this.preloadSecondary = null;\n      this.preloadDelay = 0; // Lazy load\n\n      this.lazyLoad = null; // Set animation\n\n      this.setAnimation(from, to);\n      this.preloadItems = this.appCore.highway.To.preloadItems;\n\n      if (this.preloadItems.main.length > 0) {\n        var _preloadOn = new Date().getTime();\n\n        this.preloadMain = preload_it_default()();\n        this.preloadMain.fetch(this.preloadItems.main); // this.preloadMain.onprogress = (event) => { console.log('Primary: ' + event.progress + '%'); };\n\n        this.preloadMain.oncomplete = function (items) {\n          var _preloadOff = new Date().getTime();\n\n          var _preloadDifference = (_preloadOff - _preloadOn) / 1000;\n\n          var _preloadDelay = Math.max(0, _this.preloadDelay - _preloadDifference);\n\n          gsap/* default.delayedCall */.ZP.delayedCall(_preloadDelay, function () {\n            // In animation\n            _this.inAnimation(from, to, done);\n          });\n        };\n\n        if (this.preloadItems.secondary.length > 0) {\n          this.preloadSecondary = preload_it_default()();\n          this.preloadSecondary.fetch(this.preloadItems.secondary); // this.preloadSecondary.onprogress = (event) => { console.log('Secondary: ' + event.progress + '%'); };\n        }\n      } else {\n        gsap/* default.delayedCall */.ZP.delayedCall(this.preloadDelay, function () {\n          // In animation\n          _this.inAnimation(from, to, done);\n        });\n      }\n    }\n  }, {\n    key: \"setAnimation\",\n    value: function setAnimation(from, to) {} // eslint-disable-line\n\n  }, {\n    key: \"inAnimation\",\n    value: function inAnimation(from, to, done) {\n      done();\n    }\n  }]);\n\n  return Transition;\n}(highway_module/* default.Transition */.Z.Transition);\n\n/* harmony default export */ const transition = (Transition);\n;// CONCATENATED MODULE: ./app/src/js/transitions/transitionFade.js\nfunction transitionFade_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { transitionFade_typeof = function _typeof(obj) { return typeof obj; }; } else { transitionFade_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return transitionFade_typeof(obj); }\n\nfunction transitionFade_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction transitionFade_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transitionFade_createClass(Constructor, protoProps, staticProps) { if (protoProps) transitionFade_defineProperties(Constructor.prototype, protoProps); if (staticProps) transitionFade_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction transitionFade_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) transitionFade_setPrototypeOf(subClass, superClass); }\n\nfunction transitionFade_setPrototypeOf(o, p) { transitionFade_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return transitionFade_setPrototypeOf(o, p); }\n\nfunction transitionFade_createSuper(Derived) { var hasNativeReflectConstruct = transitionFade_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = transitionFade_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = transitionFade_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return transitionFade_possibleConstructorReturn(this, result); }; }\n\nfunction transitionFade_possibleConstructorReturn(self, call) { if (call && (transitionFade_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return transitionFade_assertThisInitialized(self); }\n\nfunction transitionFade_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction transitionFade_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction transitionFade_getPrototypeOf(o) { transitionFade_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return transitionFade_getPrototypeOf(o); }\n\n// Import Transition\n // GSAP Library\n\n // Fade\n\nvar TransitionFade = /*#__PURE__*/function (_Transition) {\n  transitionFade_inherits(TransitionFade, _Transition);\n\n  var _super = transitionFade_createSuper(TransitionFade);\n\n  function TransitionFade() {\n    transitionFade_classCallCheck(this, TransitionFade);\n\n    return _super.apply(this, arguments);\n  }\n\n  transitionFade_createClass(TransitionFade, [{\n    key: \"outAnimation\",\n    value: function outAnimation(from, done) {\n      gsap/* default.fromTo */.ZP.fromTo(from, {\n        opacity: 1\n      }, {\n        opacity: 0,\n        duration: 0.8,\n        onComplete: function onComplete() {\n          from.remove();\n          done();\n        }\n      });\n    }\n  }, {\n    key: \"inAnimation\",\n    value: function inAnimation(from, to, done) {\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0;\n      done();\n      gsap/* default.to */.ZP.to(to, {\n        opacity: 1,\n        duration: 0.8\n      });\n    }\n  }]);\n\n  return TransitionFade;\n}(transition);\n\n/* harmony default export */ const transitionFade = (TransitionFade);\n;// CONCATENATED MODULE: ./app/src/js/transitions/transitionMask.js\nfunction transitionMask_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { transitionMask_typeof = function _typeof(obj) { return typeof obj; }; } else { transitionMask_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return transitionMask_typeof(obj); }\n\nfunction transitionMask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction transitionMask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transitionMask_createClass(Constructor, protoProps, staticProps) { if (protoProps) transitionMask_defineProperties(Constructor.prototype, protoProps); if (staticProps) transitionMask_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction transitionMask_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) transitionMask_setPrototypeOf(subClass, superClass); }\n\nfunction transitionMask_setPrototypeOf(o, p) { transitionMask_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return transitionMask_setPrototypeOf(o, p); }\n\nfunction transitionMask_createSuper(Derived) { var hasNativeReflectConstruct = transitionMask_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = transitionMask_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = transitionMask_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return transitionMask_possibleConstructorReturn(this, result); }; }\n\nfunction transitionMask_possibleConstructorReturn(self, call) { if (call && (transitionMask_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return transitionMask_assertThisInitialized(self); }\n\nfunction transitionMask_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction transitionMask_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction transitionMask_getPrototypeOf(o) { transitionMask_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return transitionMask_getPrototypeOf(o); }\n\n// Import Transition\n // GSAP Library\n\n // Mask\n\nvar TransitionMask = /*#__PURE__*/function (_Transition) {\n  transitionMask_inherits(TransitionMask, _Transition);\n\n  var _super = transitionMask_createSuper(TransitionMask);\n\n  function TransitionMask() {\n    transitionMask_classCallCheck(this, TransitionMask);\n\n    return _super.apply(this, arguments);\n  }\n\n  transitionMask_createClass(TransitionMask, [{\n    key: \"outAnimation\",\n    value: function outAnimation(from, done) {\n      gsap/* default.set */.ZP.set(this.appUi.$mask, {\n        display: 'block'\n      });\n      gsap/* default.fromTo */.ZP.fromTo(this.appUi.$mask.children[0], {\n        y: '-100%'\n      }, {\n        y: '0%',\n        duration: 1,\n        ease: 'expo.in',\n        delay: this.appUi.header.isOpen ? 0.8 : 0,\n        onStart: function onStart() {\n          gsap/* default.to */.ZP.to(from, {\n            y: '5vw',\n            duration: 1,\n            ease: 'expo.in'\n          });\n        },\n        onComplete: function onComplete() {\n          from.remove();\n          done();\n        }\n      });\n    }\n  }, {\n    key: \"inAnimation\",\n    value: function inAnimation(from, to, done) {\n      var _this = this;\n\n      gsap/* default.set */.ZP.set(this.appUi.$logo, {\n        y: 0\n      });\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0;\n      done();\n      gsap/* default.to */.ZP.to(this.appUi.$mask.children[0], {\n        y: '100%',\n        duration: 1,\n        ease: 'expo.out',\n        onComplete: function onComplete() {\n          gsap/* default.set */.ZP.set(_this.appUi.$mask, {\n            display: 'none'\n          });\n        }\n      });\n    }\n  }]);\n\n  return TransitionMask;\n}(transition);\n\n/* harmony default export */ const transitionMask = (TransitionMask);\n;// CONCATENATED MODULE: ./app/src/js/app/appCore.js\nfunction appCore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction appCore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction appCore_createClass(Constructor, protoProps, staticProps) { if (protoProps) appCore_defineProperties(Constructor.prototype, protoProps); if (staticProps) appCore_defineProperties(Constructor, staticProps); return Constructor; }\n\n// app\n\n // classes\n\n // Highway\n\n // gsap\n\n // Import Renderers\n// import Renderer from '../renderers/renderer';\n\n\n\n\n\n\n\n\n\n\n // Import Transitions\n\n\n\nvar appCore_singleton = null;\n\nvar appCore = /*#__PURE__*/function () {\n  function appCore(data) {\n    appCore_classCallCheck(this, appCore);\n\n    if (!appCore_singleton) {\n      this.data = data;\n      appCore_singleton = this;\n    } else {\n      return appCore_singleton;\n    } // console.log('Constructor de appCore');\n    // store\n\n\n    this.appStore = appStore; // app references\n\n    this.appUi = new app_appUi(); // Events\n\n    this.domEvents = new domEvents_default(); // Highway core\n\n    this.highway = null; //\n\n    this.appStore.isDesktop = !(window.innerWidth < 1023 || window.innerWidth < window.innerHeight);\n  }\n\n  appCore_createClass(appCore, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      // Call Highway.Core once.\n      this.highway = new highway_module/* default.Core */.Z.Core({\n        renderers: {\n          home: rendererHome,\n          promotions: rendererPromotions,\n          promotionssingle: rendererPromotionsSingle,\n          about: rendererAbout,\n          philosophy: rendererPhilosophy,\n          masterworks: rendererMasterworks,\n          blog: rendererBlog,\n          blogsingle: rendererBlogSingle,\n          contact: renderers_RendererContact,\n          \"default\": rendererDefault\n        },\n        transitions: {\n          \"default\": this.appStore.isDesktop ? transitionMask : transitionFade\n        }\n      });\n      this.highway.on('NAVIGATE_OUT', function (_ref) {\n        var from = _ref.from,\n            trigger = _ref.trigger,\n            location = _ref.location;\n\n        _this.navigateOut(from, trigger, location);\n      });\n      this.highway.on('NAVIGATE_IN', function (_ref2) {\n        var to = _ref2.to,\n            trigger = _ref2.trigger,\n            location = _ref2.location;\n\n        _this.navigateIn(to, trigger, location);\n      });\n      this.highway.on('NAVIGATE_END', function (_ref3) {\n        var to = _ref3.to,\n            from = _ref3.from,\n            trigger = _ref3.trigger,\n            location = _ref3.location;\n\n        _this.navigateEnd(to, from, trigger, location);\n      }); // Cookie links\n\n      var cookieLink = document.querySelector('#cookie-law-info-bar .cookie_action_close_header');\n\n      if (cookieLink) {\n        cookieLink.href = 'javascript:void(0);';\n        cookieLink.setAttribute('data-router-disabled', ''); //this.highway.detach(cookieLink);\n      }\n    }\n  }, {\n    key: \"navigateStart\",\n    value: function navigateStart() {\n      // Start navigation on 0\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0;\n      if (history.scrollRestoration) history.scrollRestoration = 'manual'; // Show submenu on homepage\n\n      if (this.appStore.current === 'home' && this.appStore.isDesktop) this.appUi.triggerSubmenu(true); // Position the menu on promotionSingle\n\n      if (this.appStore.current === 'promotionssingle' && this.appStore.isDesktop) gsap/* default.set */.ZP.set([this.appUi.$header], {\n        y: '-2.5vw'\n      });else gsap/* default.set */.ZP.set([this.appUi.$header], {\n        y: '0vw'\n      }); // Query admin bar links, and new page's admin bar links\n\n      var languageLinks = document.querySelectorAll('#header .menu-item-object-language_switcher a');\n\n      if (languageLinks) {\n        for (var i = 0; i < languageLinks.length; i++) {\n          languageLinks[i].setAttribute('data-router-disabled', '');\n        }\n\n        this.highway.detach(languageLinks);\n      }\n    }\n  }, {\n    key: \"navigateOut\",\n    value: function navigateOut(from, trigger, location) {\n      this.appStore.from = from.view.dataset.routerView; // Show submenu on homepage\n\n      if (this.appStore.from === 'home' && this.appStore.isDesktop) this.appUi.triggerSubmenu(false);\n      if (this.appUi.header.isOpen) this.appUi.triggerMenu();\n    }\n  }, {\n    key: \"navigateIn\",\n    value: function navigateIn(to, trigger, location) {\n      this.appStore.to = to.view.dataset.routerView; // Show submenu on homepage\n\n      if (this.appStore.to === 'home' && this.appStore.isDesktop) this.appUi.triggerSubmenu(true); // Position the menu on promotionSingle\n\n      if (this.appStore.to === 'promotionssingle' && this.appStore.isDesktop) gsap/* default.to */.ZP.to(this.appUi.$header, {\n        y: '-2.5vw',\n        duration: 1,\n        ease: 'expo.out'\n      });else gsap/* default.to */.ZP.to(this.appUi.$header, {\n        y: '0vw',\n        duration: 1,\n        ease: 'expo.out'\n      });\n    }\n  }, {\n    key: \"navigateEnd\",\n    value: function navigateEnd(to, from, trigger, location) {\n      this.appStore.to = to.view.dataset.routerView; // Remove active item\n\n      if (this.appUi.$header.querySelector('.active')) this.appUi.$header.querySelector('.active').classList.remove('active'); // Add active item\n\n      if (this.appUi.$header.querySelector('.menu-item--' + this.appStore.to)) this.appUi.$header.querySelector('.menu-item--' + this.appStore.to).classList.add('active'); // Set classes\n\n      document.querySelector('body').setAttribute('class', to.page.body.getAttribute('class')); // // Query admin bar links, and new page's admin bar links\n      // const oldLanguageLinks = document.querySelectorAll('#header a');\n      // const newLanguageLinks = to.page.body.querySelectorAll('#header a');\n      // // Replace every admin bar link's href value with new value\n      // if(oldLanguageLinks)\n      // {\n      //     for(let i = 0; i < newLanguageLinks.length; i++)\n      //     {\n      //         oldLanguageLinks[i].parentNode.setAttribute('class', newLanguageLinks[i].parentNode.getAttribute('class'));\n      //         oldLanguageLinks[i].href = newLanguageLinks[i].href;\n      //     }\n      //     // Detach admin bar links from Highway transitions\n      //     this.highway.detach(oldLanguageLinks);\n      // }\n    }\n  }, {\n    key: \"selectors\",\n    value: function selectors() {// Get all menu menuLinks\n      // this.$menuLinks = document.querySelectorAll('#menu ul a');\n    }\n  }, {\n    key: \"events\",\n    value: function events() {// for (let i = 0; i < this.$menuLinks.length; i++) {\n      //     this.domEvents.add(this.$menuLinks[i], 'mouseenter', (e, a, el) => { this.appUi.menuEnter(e, a, el); }, this);\n      //     this.domEvents.add(this.$menuLinks[i], 'mouseleave', (e, a, el) => { this.appUi.menuLeave(e, a, el); }, this);\n      // }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {// console.log('Resize appCore:', width, height);\n      //  this.highway.Helpers.renderers[this.highway.properties.slug].prototype.resize();\n      // console.log(this.highway.Helpers.renderers.locales.prototype);\n    }\n  }]);\n\n  return appCore;\n}();\n\n/* harmony default export */ const app_appCore = (appCore);\n;// CONCATENATED MODULE: ./app/src/js/utils/debounce.js\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\n//simple debounce with callback\n/* harmony default export */ function debounce(callback, delay) {\n  var timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(callback, delay);\n  };\n}\n;\n;// CONCATENATED MODULE: ./app/src/js/app/app.js\nfunction app_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction app_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction app_createClass(Constructor, protoProps, staticProps) { if (protoProps) app_defineProperties(Constructor.prototype, protoProps); if (staticProps) app_defineProperties(Constructor, staticProps); return Constructor; }\n\n// css\n // eslint-disable-line\n// app\n\n\n\n // classes\n\n // gsap\n\n // utils\n\n\n\n\nvar Application = /*#__PURE__*/function () {\n  function Application(options) {\n    app_classCallCheck(this, Application);\n\n    // console.log('Constructor de app');\n    // store\n    this.appStore = appStore; // app references\n\n    this.appCore = new app_appCore();\n    this.appUi = new app_appUi(); // Events\n\n    this.domEvents = new domEvents_default(); // get current url\n\n    this.appStore.rootUrl = window.location.protocol + '// ' + window.location.host; // get client info\n\n    var clientInfo = es5_default().getParser(window.navigator.userAgent).parsedResult;\n    this.setOS(clientInfo);\n    this.setDevice(clientInfo);\n    this.setOrientation();\n    this.addClasses();\n    this.sayHello();\n    this.checkElements();\n    this.selectors();\n    this.events();\n    this.init();\n  }\n\n  app_createClass(Application, [{\n    key: \"setOS\",\n    value: function setOS(clientInfo) {\n      var os = clientInfo.os.name.toLowerCase(); // detect mac and ios, default windows\n\n      switch (os) {\n        case 'macos':\n          this.appStore.client.os = 'mac';\n          break;\n\n        case 'ios':\n          this.appStore.client.os = 'ios';\n          break;\n\n        default:\n          this.appStore.client.os = 'windows';\n      }\n    }\n  }, {\n    key: \"setDevice\",\n    value: function setDevice(clientInfo) {\n      // get device\n      this.appStore.client.device = clientInfo.platform.type === 'desktop' ? 'desktop' : 'mobile'; // detect browser (only the major ones, default is chrome)\n\n      switch (clientInfo.browser.name) {\n        case 'Internet Explorer':\n          this.appStore.client.browser = 'explorer';\n          break;\n\n        case 'Microsoft Edge':\n          this.appStore.client.browser = 'edge';\n          break;\n\n        case 'Firefox':\n          this.appStore.client.browser = 'firefox';\n          break;\n\n        case 'Safari':\n          this.appStore.client.browser = 'safari';\n          break;\n\n        default:\n          this.appStore.client.browser = 'chrome';\n      }\n    }\n  }, {\n    key: \"setOrientation\",\n    value: function setOrientation() {\n      this.appStore.client.orientation = this.appStore.client.sizes.width > this.appStore.client.sizes.height ? 'horizontal' : 'vertical';\n    }\n  }, {\n    key: \"addClasses\",\n    value: function addClasses() {\n      document.documentElement.classList.add(this.appStore.client.device);\n      document.documentElement.classList.add(this.appStore.client.os);\n      document.documentElement.classList.add(this.appStore.client.browser);\n    }\n  }, {\n    key: \"sayHello\",\n    value: function sayHello() {\n      if (this.appStore.client.browser === 'chrome' || this.appStore.client.browser === 'firefox') {\n        var args = ['\\n%c Developed with ♥ by Dgrees® - https:// dgrees.studio %c\\n', 'display: block; padding: 5px 10px; background: #000022; line-height: 40px; color: #ffffff;', 'background: #fff;'];\n        window.console.log.apply(console, args);\n      } else {\n        window.console.log('Developed by Dgrees®');\n      }\n    }\n  }, {\n    key: \"checkElements\",\n    value: function checkElements() {\n      if (this.appStore.isDesktop) {\n        this.$elementsMobile = document.querySelectorAll('[data-mobile]');\n\n        for (var i = 0; i < this.$elementsMobile.length; i++) {\n          this.$elementsMobile[i].remove();\n        }\n      } else {\n        this.$elementsDesktop = document.querySelectorAll('[data-desktop]');\n\n        for (var _i = 0; _i < this.$elementsDesktop.length; _i++) {\n          this.$elementsDesktop[_i].remove();\n        }\n      }\n    }\n  }, {\n    key: \"selectors\",\n    value: function selectors() {\n      this.appCore.selectors();\n      this.appUi.selectors();\n    }\n  }, {\n    key: \"events\",\n    value: function events() {\n      var _this = this;\n\n      // bind debounced resize\n      this.domEvents.add(window, 'resize', debounce(function () {\n        _this.resize(window.innerWidth, window.innerHeight);\n      }, 150));\n      this.appCore.events();\n      this.appUi.events();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.appCore.init();\n      this.appUi.init();\n      var vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', \"\".concat(vh, \"px\"));\n      this.resize(window.innerWidth, window.innerHeight);\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n      if (this.appStore.isDesktop) {\n        var vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', \"\".concat(vh, \"px\"));\n      } // set size vars\n\n\n      this.appStore.client.sizes.width = width;\n      this.appStore.client.sizes.height = height;\n      this.appCore.resize(width, height);\n      this.appUi.resize(width, height);\n      if (this.appStore.currentSection !== null) this.appStore.currentSection.resize(width, height); // Check orientation\n\n      var newOrientation = this.appStore.client.sizes.width > this.appStore.client.sizes.height ? 'horizontal' : 'vertical';\n      if (newOrientation !== this.appStore.client.orientation) window.location.reload();\n    }\n    /* _checkOrientation()\n    {\n        // if it's not affected by orientation pass the current one (0: horizontal, 1: vertical)\n        if(this.orientation === orientations.NONE)\n            this.// (this.appStore.client.sizes.width > this.appStore.client.sizes.height ? 0 : 1);\n         if(this.orientation === orientations.VERTICAL)\n        {\n            // if width is bigger than height\n            if(this.appStore.client.sizes.width > this.appStore.client.sizes.height)\n                this.rotateDevice(true);\n            else\n                this.rotateDevice(false);\n        }\n        else if(this.orientation === orientations.HORIZONTAL)\n        {\n            // if height is bigger than width\n            if(this.appStore.client.sizes.height > this.appStore.client.sizes.width)\n                this.rotateDevice(true);\n            else\n                this.rotateDevice(false);\n        }\n    } */\n    // rotateDevice(action){} // eslint-disable-line\n\n  }]);\n\n  return Application;\n}();\n\n/* harmony default export */ const app_app = (Application);\n;// CONCATENATED MODULE: ./app/src/js/loader.js\n//apps\n //on document ready create loader\n\nif (document.readyState !== 'loading') {\n  var app = new app_app();\n} else {\n  document.addEventListener('DOMContentLoaded', function () {\n    var app = new app_app();\n  }, false); //eslint-disable-line\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///815\n")}},__webpack_module_cache__={},deferred;function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var n=__webpack_module_cache__[g]={exports:{}};return __webpack_modules__[g].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(g,I,n,t)=>{if(!I){var e=1/0;for(i=0;i<deferred.length;i++){for(var[I,n,t]=deferred[i],C=!0,l=0;l<I.length;l++)(!1&t||e>=t)&&Object.keys(__webpack_require__.O).every((g=>__webpack_require__.O[g](I[l])))?I.splice(l--,1):(C=!1,t<e&&(e=t));if(C){deferred.splice(i--,1);var c=n();void 0!==c&&(g=c)}}return g}t=t||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>t;i--)deferred[i]=deferred[i-1];deferred[i]=[I,n,t]},__webpack_require__.n=g=>{var I=g&&g.__esModule?()=>g.default:()=>g;return __webpack_require__.d(I,{a:I}),I},__webpack_require__.d=(g,I)=>{for(var n in I)__webpack_require__.o(I,n)&&!__webpack_require__.o(g,n)&&Object.defineProperty(g,n,{enumerable:!0,get:I[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(g){if("object"==typeof window)return window}}(),__webpack_require__.o=(g,I)=>Object.prototype.hasOwnProperty.call(g,I),(()=>{var g={143:0};__webpack_require__.O.j=I=>0===g[I];var I=(I,n)=>{var t,e,[C,l,c]=n,i=0;if(C.some((I=>0!==g[I]))){for(t in l)__webpack_require__.o(l,t)&&(__webpack_require__.m[t]=l[t]);if(c)var A=c(__webpack_require__)}for(I&&I(n);i<C.length;i++)e=C[i],__webpack_require__.o(g,e)&&g[e]&&g[e][0](),g[C[i]]=0;return __webpack_require__.O(A)},n=self.webpackChunkcaledonian=self.webpackChunkcaledonian||[];n.forEach(I.bind(null,0)),n.push=I.bind(null,n.push.bind(n))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(815)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();